(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    632630,      12077]
NotebookOptionsPosition[    620466,      11914]
NotebookOutlinePosition[    620913,      11932]
CellTagsIndexPosition[    620870,      11929]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"gateVar1", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar1.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar2.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar3", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar3.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar4", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar4.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar5", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar5.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar6", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar6.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar7", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\OneDrive\\Mathematica\\HT_soi_dn\\IV-soi-dn-gateVar7.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ";"}], "*)"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQrVTxMzMg7Y1j+J7j2SDahc2kAETvkHlVBKJ5Dq0r
B9Hv2m5WgOgp7y9sAovX1m8B0S8fVB0E0QmLLh8C0T7X3h8H0c//cp4F0eyf
BC6BaL6VLmBa48jMByC64PaThyD60/9rP0F0FHfYH7A82w+2QCB9hmsKD4je
Ms1MCET7qniB6VmP5oqBaJHDdeIg2ufMehkQfWyrtSyIvqEcZA6i25jEbUC0
gp+tC4hWursBTJvnFfiB6Cn5/8PA5uxjiAbR//xDk8H8EpcmEG2QeLoTRK/g
u7cSRHep/FwDootaxecFAemmtR/B9J3l/vtBtEGF8zEQvYRLcn8FkH6iMANM
AwCSG6yd
  "],
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"ae6a0406-d47a-4e43-9656-13918854110e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"data", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<Anode Current\>\""}], 
    "&"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.8117410220731544`*^9, 3.811741023162217*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1a224041-9b22-4c9c-8a02-0c7443a473cb"],

Cell[BoxData[
 TemplateBox[{
  "Select", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Select\\\", \
\\\"[\\\", RowBox[{\\\"data\\\", \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"#1\\\", \\\"\[LeftDoubleBracket]\\\", \\\"3\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"\[Equal]\\\", \\\"\\\\\\\"Anode \
Current\\\\\\\"\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\).\"", 2, 8, 40, 
   21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8117958171412535`*^9, 3.820098863584215*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[8]:=",ExpressionUUID->"cda9cb40-8d1b-4de9-b826-\
1ad4e2eeb113"],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"data", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     "\[Equal]", "\<\"Anode Current\"\>"}], "&"}]}], "]"}]], "Output",
 CellChangeTimes->{3.811741034291854*^9, 3.8117958171592546`*^9, 
  3.820098863645219*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ac82d2a9-60c4-47ab-8d7b-3b70e58d04d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", "3", "]"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{3.811822068398576*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"21aaac8f-66b0-4a55-90a3-21af3ee84515"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"data\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 9, 41, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098863691221*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[9]:=",ExpressionUUID->"af94531f-6e18-4df2-9da4-\
2681d30b8087"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<Anode Current\>\""}],
       "&"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.8117427306408796`*^9, 3.811742740304432*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a4415827-a4fc-4f6e-9501-23699d19e68b"],

Cell[BoxData[
 TemplateBox[{
  "Select", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Select\\\", \
\\\"[\\\", RowBox[{\\\"data\\\", \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"#1\\\", \\\"\[LeftDoubleBracket]\\\", \\\"3\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"\[Equal]\\\", \\\"\\\\\\\"Anode \
Current\\\\\\\"\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\).\"", 2, 10, 42, 
   21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988637222233`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[10]:=",ExpressionUUID->"51077c4d-2aa5-40e4-9293-\
6b08fd493151"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"Select\\\", \\\"[\\\", \
RowBox[{\\\"data\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"#1\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[Equal]\\\", \\\"\\\\\\\"Anode Current\\\\\\\"\\\"}], \\\"&\\\"}]}], \\\"]\\\
\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"3\\\"}]}], \\\"}\\\"}]}], \
\\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 10, 
   43, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988637312236`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[10]:=",ExpressionUUID->"818ea874-c207-4b89-86a0-\
dd75a2fc1fe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"data", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
      "\[Equal]", "\<\"Anode Current\"\>"}], "&"}]}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{"All", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.820098863738224*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"fa07b5f7-18ee-4e61-847a-f912f168c6ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data3", "=", 
  RowBox[{"GroupBy", "[", 
   RowBox[{"data2", ",", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "&"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.8117411362316847`*^9, 3.811741138149794*^9}, 
   3.811742830680601*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"14e85d2d-2e2e-448e-8eae-0630459399b2"],

Cell[BoxData[
 TemplateBox[{
  "GroupBy", "list1", 
   "\"The argument \\!\\(\\*RowBox[{RowBox[{\\\"Select\\\", \\\"[\\\", \
RowBox[{\\\"data\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"#1\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[Equal]\\\", \\\"\\\\\\\"Anode Current\\\\\\\"\\\"}], \\\"&\\\"}]}], \\\"]\\\
\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"3\\\"}]}], \\\"}\\\"}]}], \
\\\"\[RightDoubleBracket]\\\"}]\\) is not a valid list of Associations or \
rules or lists of rules.\"", 2, 11, 44, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098863766226*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[11]:=",ExpressionUUID->"9c6927db-ad0a-48c7-be17-\
ac324e85fa32"],

Cell[BoxData[
 RowBox[{"GroupBy", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"data", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "\[Equal]", "\<\"Anode Current\"\>"}], "&"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "&"}], ",", 
   RowBox[{
    RowBox[{"#1", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], "&"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.820098863774226*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"23e15dbb-1341-4f17-b12c-1b4e76880bb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"39", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"data1", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"data1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.8117410888809757`*^9, 3.811741119232712*^9}, {
   3.8117427901362824`*^9, 3.8117428000518494`*^9}, {3.811742900853615*^9, 
   3.811743202255854*^9}, 3.811743600844652*^9, {3.811822051226591*^9, 
   3.811822052880403*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2ff5da9d-4866-469c-9de3-577a06bcee99"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"39\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"data\\\"}]\
\\).\"", 2, 12, 45, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098863828229*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[12]:=",ExpressionUUID->"7258a66b-157e-4dee-8711-\
7345cf95878c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"data\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"39\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 12, 46, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988638342295`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[12]:=",ExpressionUUID->"77f79422-92cf-4114-84da-\
2430916fdcc3"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"data\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"39\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 12, 47, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988638542304`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[12]:=",ExpressionUUID->"3cb167ef-083d-47a6-bf29-\
a05effa37078"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 12, 48, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988639562364`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[12]:=",ExpressionUUID->"afb501d1-bf88-4fbe-adb3-\
9b97f0a9f4d1"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"data\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"39\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 12, 49, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098863992238*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[12]:=",ExpressionUUID->"86e300f1-ea76-4908-af27-\
427c719023b0"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{"39", ";;", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8200988639962387`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"355f3f9e-dbd9-4e60-8ecf-014407bc03ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"gateVar1", "[", 
    RowBox[{"[", 
     RowBox[{"39", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat2", "=", 
   RowBox[{"gateVar2", "[", 
    RowBox[{"[", 
     RowBox[{"18", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat3", "=", 
   RowBox[{"gateVar3", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat4", "=", 
   RowBox[{"gateVar4", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat5", "=", 
   RowBox[{"gateVar5", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat6", "=", 
   RowBox[{"gateVar6", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat7", "=", 
   RowBox[{"gateVar7", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat3", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat7", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat3", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat4", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat5", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat6", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat7", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "14"}]}]}]}], "}"}]}], "}"}]}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.811743310277033*^9, 3.811743552844907*^9}, {
   3.8117436063919697`*^9, 3.811743631872427*^9}, 3.8117958349192705`*^9, {
   3.8117961326282983`*^9, 3.8117962775425873`*^9}, {3.811796419336697*^9, 
   3.8117964493274126`*^9}, 3.8117965148011575`*^9, {3.811796547256014*^9, 
   3.8117966172710185`*^9}, {3.811796698404659*^9, 3.811796782732482*^9}, {
   3.811796835764516*^9, 3.811796849623308*^9}, {3.81179690682458*^9, 
   3.8117969206003675`*^9}, {3.8117969538532696`*^9, 3.811796959958619*^9}, {
   3.8117969985168247`*^9, 3.8117970118275857`*^9}, {3.811822094665893*^9, 
   3.811822101440996*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"24237943-3b00-478d-93b9-8897adfaffa5"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw1lQdUU2kWx1nLWkfdgGMZFAVUGMsZcREGnt5FxKAyDhCpNmSQvGfFMiuK
4+oK6AqKMjYUEWmLYBtEJfrgQwgCighSAoiYBoQajQLiCrMS7vedk5Pzzkvu
u//f7+Zmpv8u9y1DDAwMJF9fA+/XJptViqxayU1RgOcJ4x6+3S1relhbCzEU
fjHwMenmL8cMnBZit8k249OILt5ZcdDotrCFpDzYx7n0feC7LdZH5XVpiIvI
3rK6X8cnBS0ZLUvUkOTogO6sMTrefaCcm4bEP10j9TR7zxvoj4bsDg4f0b38
HX9bOFCwmVR8v3T9/bed/EA1i/XN5MGufuGnFR3812JfKzaTpJSRqiU5bby+
XFYTObrY/+Cl5a18oP40kcx3vyVIazS8kb5gEzlyL2Pj2QPNfH7XQIONJDYh
WX5ldhO/e6C9oEay1FZmXNCg5k0Gyk1vJG5f9kJPvIp/UTJw1GRd4PTf1+5U
8iH6gmpS5XGl+Y6TgrfUN6gmT6WyQ2az5Ly+PZmKpK0OPp0+vYHXlwtTka6g
yi8dw+v5RfqjIlHOra9DDep4PT6FkliKy6csGl3D6+NGKYku7tjNUZbVvL69
JUryIvQDl7ShEn0oSGPUjGHmqa/Qh4IUkrJ+8yHl6ENBjs3rbitqL0UfctJh
d1JaMKwEfcjJrgkrh7isKkYfcnLz3J7KrOyn6ENOHGf76kr9pMj/LUnOLLON
t8hD3g0kR1EUHDUnF/k2kM9FM7w7k3nk+YaMFBVuj3eXIL96kmEh+2a76wPk
VU+yQquy7sfcQz6vSf22R4J/zfsDedSRNKuEnJVDb2P+OhJQXHLfcnYa5q0l
N365+rzwcQrmqyHttt5NJx8mYp4a4umkFe/423WcJxlJzdA9Lg++ivMjI3M+
aE/3+MfgvFST1mObBNa153E+qoj75B9WJeVH4zxUkeThw/riDM+g/0pic2bo
4+EHItB3BQnSvrY0Y4+j3wrSZNdiuuPNMfT5iuSdt6+zenkE/ZWTqQ1ln7Jc
D6GvciKMPeJ45sZ+9FNGHK2PzkhP3Is+ysgGZZXys1kQ8i8labcPdL5z3Iq8
XxAPlxltK9oDkG8JSXj/yHW+yA95PiPbL3mp6y97I79i8my/JVdyyQ15FRG3
okexzYZC5FNIHMLHijfF2yKPAjJ7RsRycdEkzC8lIeGGc/1PmzODefNJriCY
9BjZMoP5nhBVyLw+o63LmME8uSQ4zcNyrEzIDPafQ/LGrTOvvOjCDPbLE0Oj
NP8CD1dmsD8JcZtsEjJ3njsz2M9DYhgW/VyXIWIGn59J3LtlbOwkD3zeHySV
FaW5L/fE+reJVWZcvwC8sN4N8vjwPcd7k73x+0kkbmd3WqHUGz8fR5Z8Lvxo
5eaD98+Rf/eeGHcgi16Hkj2O18Q5o3wZo81Do33z1HzcLGbXGltfeh/6cg8t
C/+JXp+Dn0PuLgyy86X1obV49uZp0+j9JEh1TLi8VO5D+4P9d6NGPTnlQ/uH
iP+cCNtn4UPzgc20pXeuSWj/mZDe93bn9aXelA/0+ehM//eU5pWAtrx6XF6g
F+ULm6p/DTkx34vyh6Ch9r45Nl7UD+Tuu9XZ8NCL+oOT7E/OubnezOD85kHY
nBcH8l/7UN9wcc8tL0/JOmZw/vPBP3c8RAVsxP6kUBuqlEQW+zE4PzDT75kp
bP4F+y2EiKsCI5uJWxicP7C1btv7wCoQ+y+GAq3OYrw6kMH5hRw+eXLFWjHm
KYFJ9pEfs2LEDM4//KXO/GGpVIz5SmE4t21fsFzM4O8HxpGFN2t1YsxbBhLd
BS8DA5bB3x/sTd4+y2I0i/nLQWDjVJogYDH/K1Cu1FT+MJXF/BUQULY+xX4m
i/kr4E7E4vH9c1jMXwnvjHtvnF/AMrg/wC7l+d3x1izyqIJfMzI699qzDO4f
MNX01BY4sMhHBt3Xr4wc7swyuL/Axii0YcEaFnnVwAU2fKHjWpbB/Qc/h6em
OviyyK8WalorFlj4sQzuT4jr9T3bvYVFnnVgMfazw61tLIP7F4pFHcWrd7PI
tx4EsS1rS//JMri/wXybzMX2EIu830D71h1jTxxlGdz/sDiAnSUJZ5F/AxyP
7Ne+jGAZ/P8AkycrJpWeYdGHHHyzrwRknKd55KA1ndsRcplFP3Iwml943vIa
zSeHCBPlj9mJ1JcCQg/HGFun0rwKGPb0uNm5m9SfAoZoxfPr7tL8SpifOaV8
xH3qUwkbRjyaO11CeShB4nDFySSb+lVBV3Z25ugnlI8KFGM0E5VS6lsF90oO
RyYWUV5qML2zttKthPpXg9m3vXe1Lyk/NYT1SPt+q6Dz0AgpNwSW/dWUZyPE
2e3ZsK+Ozkcj/BhwplrxhvJtglNhU+ycFXRemkDjMzEmXU15N0HR6pnPxmvo
/DSD8SJTj4NtlH8zKM4Kkt930nlqhh3qRNdDOupDAy5+gkum3dSHBi5+4+Da
2Ut9aGCM+bInmj7qQwM1z52HGg/h0EcLvJx40jT6rxz6aAFnr6O1ojEc+mgB
k5IFu8QTOPTRCh9/N5lWNpFDH60woetPYcR3HPpoBaHKrTJyJoc+2uBVLZec
O4dDH20w9bpF5qgFHPpog3hpVP/qv3Poox2+U6X9d6sdhz7awSCyX8T8g0Mf
7eDUK6pPd+LQRwecS5c9vLCKQx8dwJ5atfDzGg59dEB9f2JLkzuHPjrhWFrR
VX9PDn10gucG4ZLLPhz66IRh1iPs7qzn0IcW/hS3bMzfxKEPLahC67dp/Tn0
oYVo3yLh6kAOfbwDcaz2gZrjmP8DSfLiFQ==
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
DslHAwRoM8WOwZKPRkj9q8JicijH/B+iClat
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
HtGHFg7rD1ynFyr6aISAXnlx2kMc83+q8FZx
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
IkL00QGrxzz+pHeQY/4PQDdDvA==
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
leraURzzD/l8S4k=
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{-1, 1}, {0, 
      Rational[-1, 20000000000000]}}, {{-1, 1}, {0, -5.*^-14}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.811743501075946*^9, 3.8117435049051647`*^9}, 
   3.8117435472115846`*^9, {3.8117958177362876`*^9, 3.811795836604367*^9}, 
   3.811796208391632*^9, 3.811796247680879*^9, 3.8117962783626337`*^9, 
   3.8117964202847514`*^9, 3.811796450346471*^9, 3.8117965168032722`*^9, 
   3.811796548230069*^9, {3.8117965922905893`*^9, 3.811796618750103*^9}, {
   3.811796699282709*^9, 3.8117967851836224`*^9}, 3.811796850751373*^9, {
   3.811796908107653*^9, 3.8117969215924244`*^9}, {3.8117969551563444`*^9, 
   3.811796960554653*^9}, {3.811797004130145*^9, 3.8117970224121914`*^9}, 
   3.820098864277255*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"c35f91d2-638f-4a64-8f00-6d9e2ee3e580"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat2", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8117968545315886`*^9, 3.8117968637391157`*^9}, 
   3.8117968987271166`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"bc37dcb7-0191-4cd0-96e8-e40d28e39614"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$HomeDirectory", ";", 
  RowBox[{"Directory", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gateVar1", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar1.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar2", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar2.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar3", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar3.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar4", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar4.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar5", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar5.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar6", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar6.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar7", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dn/IV-soi-dn-gateVar7.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"gateVar1", "[", 
    RowBox[{"[", 
     RowBox[{"39", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat2", "=", 
   RowBox[{"gateVar2", "[", 
    RowBox[{"[", 
     RowBox[{"18", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat3", "=", 
   RowBox[{"gateVar3", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat4", "=", 
   RowBox[{"gateVar4", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat5", "=", 
   RowBox[{"gateVar5", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat6", "=", 
   RowBox[{"gateVar6", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat7", "=", 
   RowBox[{"gateVar7", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat3", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat7", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.811821105239451*^9, 3.811821178061005*^9}, {
  3.8118214282640123`*^9, 3.811821435628557*^9}, {3.811821501731226*^9, 
  3.811821597578405*^9}, {3.81182187887346*^9, 3.8118218798508043`*^9}, {
  3.811822008289819*^9, 3.811822032284704*^9}, {3.811822750333675*^9, 
  3.811822803593508*^9}, {3.81182283981361*^9, 3.811822910433897*^9}, {
  3.811822966233317*^9, 3.811822968624928*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"b971577a-b5ea-4657-beb8-1c5bcdc2c45d"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar1.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 18, 50, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643592596`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"29cb3a62-6f70-4641-8a98-\
7f0e6cf89c9b"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar2.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 19, 51, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643662596`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"3c9a260e-0975-474c-9371-\
afd73d075cff"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar3.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 20, 52, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643702602`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"ab3f0a4e-adbc-4e4f-a4b6-\
272b540d4fa4"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar4.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 21, 53, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643752604`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"8cf49cb5-0944-4c4d-a16d-\
9f1b274cb50a"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar5.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 22, 54, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643802605`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"3b454376-7b1b-434c-8a48-\
d3423a37fb32"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar6.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 23, 55, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864384261*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"718f4983-d6e0-4aac-92ac-\
a93c0d31da90"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dn/IV-soi-dn-\
gateVar7.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 24, 56, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643892612`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"81eb2061-11b6-42fd-b810-\
c9219dbcf1b7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"39\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 25, 57, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988643942614`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"b260fc87-d40a-47c7-856d-\
7ac9cf2082e9"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"18\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 26, 58, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988644152627`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"352f4657-8916-4086-a9a5-\
cd1cef0a1ea7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"3\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 27, 59, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988644352636`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"bb676c8b-5032-4ced-8888-\
61556214434c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"3\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 27, 60, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988644542646`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"834e68c8-1bd6-4b67-a967-\
51ed08163b6d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"3\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 27, 61, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864474266*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"0f057d10-0e2b-424e-8c59-\
47bf7946ec16"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 27, 62, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864495267*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"02b367fa-4a9e-46a9-b4ac-\
01e6a6e58e7a"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 28, 63, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988645152683`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"d3e65600-97c4-4c61-b1a4-\
e58b610ef5de"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 28, 64, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864559271*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"748745d5-aa67-4547-8161-\
b2a3bb440ad3"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 28, 65, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988645632715`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"0f3a969a-8885-4167-a6f0-\
bc53464a5ed2"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 28, 66, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988645862722`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"9d11e982-0dd6-4876-b061-\
ae7684140f8d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 28, 67, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988646272745`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"7a23a6ac-26ba-44e2-9fb8-\
0d316a3cbe4f"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 28, 68, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864631275*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"f9bbc92b-0934-4dce-b3d1-\
075dc8ecc4ca"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 28, 69, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988646542764`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"242cafcb-812b-43f9-a510-\
e83ff6944326"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 28, 70, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988646732774`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"1ed1af9f-aac8-4645-89e1-\
2deed16ed48e"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 28, 71, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988647152796`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"024043ed-d51b-46ac-bef6-\
5e0144a80fda"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 28, 72, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988647202797`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"22475daa-0a27-49ee-9ec4-\
2fae479e13e5"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 28, 73, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988647252803`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"4e41d7b9-d1ed-4bc5-a93e-\
b3723ba3a977"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 28, 74, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988647292805`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[17]:=",ExpressionUUID->"b8b955d2-ba78-4b9f-9096-\
0ad78d515696"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat3", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat4", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat5", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat6", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dat7", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.8"}], ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "14"}]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Anode Voltage [V]\>\"", ",", "\"\<Anode Current [A]\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<I-V Charateristics of SOI-dn device model with SILVACO TCAD\>\""}], 
   ",", 
   RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.811823005433876*^9, 3.81182301149988*^9}, {
  3.8118231101179667`*^9, 3.811823119542618*^9}, {3.8118234761313887`*^9, 
  3.8118234930176153`*^9}, {3.811823552337593*^9, 3.811823590946155*^9}, {
  3.811823728937093*^9, 3.8118237934122267`*^9}, {3.8118238498947477`*^9, 
  3.8118238638909492`*^9}, {3.811823932170272*^9, 3.811824018540668*^9}, {
  3.811824082104807*^9, 3.811824087930717*^9}, {3.811824144901176*^9, 
  3.811824145346957*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"21d630fb-89c9-4878-b24f-147896da7bdf"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"39\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 29, 75, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864806285*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"e476cee5-0822-498c-8f73-\
8fb5f16b30a9"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 29, 76, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988648502874`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"baf424e8-08e4-4b86-ba9d-\
61b197baa8df"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"39\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 29, 77, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988648552876`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"31f9b9f4-4e45-4c20-a662-\
9caff0503144"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 29, 78, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864877289*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"23742b8b-31c5-4a14-8330-\
0ec7c08e33ac"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 29, 79, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988649192915`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"5dd0ded9-dcf5-458e-b817-\
0d90adcdb42c"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 29, 80, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988649232917`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"7ddfe206-1f86-43ae-9913-\
9b7131e2c5b7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 29, 81, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988649472933`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"f1f21609-f788-43e9-a7ae-\
ba5d23843d3d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 29, 82, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098864968294*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"83971006-5d3a-4dbe-bd25-\
f7cf2d2936f1"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 29, 83, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865010297*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"f3a0364e-e783-4ae5-82c5-\
11690f784b6b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 29, 84, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865015297*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"77b8245d-ac19-49ff-8629-\
03a3f3235c1e"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 29, 85, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865039298*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"57b13a75-02ab-440f-9b51-\
05cb93293a57"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 29, 86, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988650592995`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"6e240482-3020-4a29-b8f9-\
6cc6868db8a4"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gcomb", 
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"39\
\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\
\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"$Failed\\\", \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\
\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ListLinePlot\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"$Failed\\\", \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ListLinePlot\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"$Failed\\\", \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ListLinePlot\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"$Failed\\\", \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ListLinePlot\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"$Failed\\\", \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ListLinePlot\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"$Failed\\\", \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotRange\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.8`\\\"}], \\\",\\\
\", \\\"0.8`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
\\\"20000000000000\\\"]}]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"Frame\\\", \\\"\[Rule]\\\", \\\"True\\\"}], \\\",\\\", RowBox[{\\\
\"FrameLabel\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Anode Voltage [V]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Anode Current [A]\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 29, 87, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865159305*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[29]:=",ExpressionUUID->"63099c8d-2a32-4743-935e-\
568d77b21fa1"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"39", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"18", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.8`"}], ",", "0.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         FractionBox["1", "20000000000000"]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Anode Voltage [V]\"\>", ",", "\<\"Anode Current [A]\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"I-V Charateristics of SOI-dn device model with SILVACO \
TCAD\"\>"}], ",", 
   RowBox[{"FontFamily", "\[Rule]", "\<\"Times\"\>"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.81182195328078*^9, 3.811822055203149*^9, 3.811822801793037*^9, 
   3.811822850822029*^9, {3.8118229630759993`*^9, 3.811822980459058*^9}, 
   3.8118230124610243`*^9, 3.8118231217213717`*^9, 3.811823493901906*^9, {
   3.811823759548431*^9, 3.811823794570963*^9}, 3.811823864729683*^9, 
   3.811824019572588*^9, 3.81182408888396*^9, 3.8118241464017487`*^9, 
   3.8200988651713057`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"6b7469a2-df77-4b03-9d60-0f8b113c50fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateVar1", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar1.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar2", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar2.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar3", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar3.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar4", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar4.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar5", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar5.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar6", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar6.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gateVar7", "=", 
   RowBox[{
   "Import", "[", "\"\</data/onedrive/HT_soi_dp/soi-dn-gateVar7.csv\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"gateVar1", "[", 
    RowBox[{"[", 
     RowBox[{"39", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat2", "=", 
   RowBox[{"gateVar2", "[", 
    RowBox[{"[", 
     RowBox[{"18", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat3", "=", 
   RowBox[{"gateVar3", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat4", "=", 
   RowBox[{"gateVar4", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat5", "=", 
   RowBox[{"gateVar5", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat6", "=", 
   RowBox[{"gateVar6", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"dat7", "=", 
   RowBox[{"gateVar7", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat3", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dat7", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8118243949332314`*^9, 3.8118244314902687`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d60d416b-4115-4fb9-8d04-c1281fe0a388"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar1.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 30, 88, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865211308*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"783ab3f4-cfe7-4bef-8378-\
d11738f95a91"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar2.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 31, 89, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988652333097`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"75830568-f523-44f0-9477-\
daecc990ea0c"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar3.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 32, 90, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988652543106`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"2e40cf53-cab0-4cc6-9113-\
80198050ee3a"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar4.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 33, 91, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865276312*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"8a16f306-600e-4a7a-bb4e-\
1146429a7970"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar5.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 34, 92, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865298313*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"32f5822c-e136-4535-b718-\
e919b535ebd5"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar6.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 35, 93, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988653163137`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"7ac23756-d05d-4b0b-91ed-\
d66b3dc432fd"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/data/onedrive/HT_soi_dp/soi-dn-\
gateVar7.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 36, 94, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865337315*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"dd1fc18c-cd6a-4304-9983-\
7a01fcaecec3"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"39\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 37, 95, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988653583164`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"e186cf02-5f59-4f02-84a3-\
6ccf5ce00219"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"18\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 38, 96, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988653793173`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"3d0c4a1b-c1a3-46c2-b556-\
34af6fe3e90b"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"3\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 39, 97, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865401319*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"37c44724-4317-4ad8-90fa-\
d1a6277896f5"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"3\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 39, 98, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.82009886542032*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"ca55f019-051f-4817-9f93-\
2795f0ea9085"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"3\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 39, 99, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865440321*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"ba3e426c-68f0-408c-9a86-\
7ec52dff99af"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 100, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988654603224`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"7f826483-b0ac-4b09-b933-\
007e9e41b859"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 40, 101, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988654813237`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"ae2c8d90-0faf-4a78-9d52-\
27d9a8722913"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 40, 102, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865526326*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"163634cf-1d84-4067-912f-\
ab4a19596d00"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"18\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 40, 103, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988655313263`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"6948ecb9-8b7e-4560-b9a8-\
ae42d1e63e6f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 40, 104, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988655533276`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"b06c34b7-27f8-47c4-8c35-\
eb56f58befae"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 40, 105, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.82009886559633*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"41899987-66a1-48e0-a5ea-\
e9924f4fe270"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 40, 106, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988656013308`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"20650be8-a3d6-43c8-b635-\
a1d5b1630a30"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 40, 107, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988656233315`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"e4865260-8859-4bf8-8b0f-\
a6c437ef6a00"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 40, 108, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988656433325`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"55f3d934-d4b5-41dd-966f-\
f30d57525acb"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 40, 109, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865684335*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"72bf0014-085d-428c-b494-\
853dff7154b0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 40, 110, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865689336*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"cb2f2b74-87c8-45ea-af4e-\
c37bb8bce354"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"3\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 40, 111, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.820098865694336*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"b170a49e-bace-4547-88d8-\
f386fa85a8ea"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 40, 112, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811824434080906*^9, 3.8200988656983356`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[30]:=",ExpressionUUID->"9fc50057-63b1-4488-bd88-\
52a7df672955"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dp\\soi_dn_gateVar4.csv\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data00", "=", 
   RowBox[{"%", "[", 
    RowBox[{"[", 
     RowBox[{"6", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dp\\soi_dn_gateVar6.csv\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data03", "=", 
   RowBox[{"%", "[", 
    RowBox[{"[", 
     RowBox[{"6", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"data03", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"data00", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "13"}]}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "13"}]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Anode Voltage [V]\>\"", ",", "\"\<Anode Current [A]\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<I-V Charateristics of SOI-dn device model with SILVACO TCAD\>\""}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8128546950568*^9, 3.81285470660227*^9}, {
   3.8128547382577868`*^9, 3.8128547650634656`*^9}, {3.8128548787399025`*^9, 
   3.8128548938701043`*^9}, 3.812854937526919*^9, {3.812854972150402*^9, 
   3.8128551235028996`*^9}, 3.812855179779931*^9, {3.81285521149833*^9, 
   3.8128553747786474`*^9}, {3.812855450575842*^9, 3.8128554608825607`*^9}, {
   3.8128556426951303`*^9, 3.812855746423134*^9}, {3.812855786115006*^9, 
   3.8128557998933706`*^9}, {3.812855832636674*^9, 3.8128558894677505`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[41]:=",ExpressionUUID->"98b8f6c7-7e30-4200-be8c-cd1f2332bb3d"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"D:\\\\\\\\\\\\\\\\000_LAB_Result\\\\\\\
\\\\\\\\\\SILVACO\\\\\\\\\\\\\\\\soi_dp\\\\\\\\\\\\\\\\soi_dn_gateVar4.csv\\\\\
\\\"\\\"}]\\) not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 
   41, 116, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865735338*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"5c7bf93d-1311-40fd-a949-\
e45f7991702c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"6\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 42, 117, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865745339*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"fd2abd75-aeda-4e6d-a21b-\
55aef3afa972"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"D:\\\\\\\\\\\\\\\\000_LAB_Result\\\\\\\
\\\\\\\\\\SILVACO\\\\\\\\\\\\\\\\soi_dp\\\\\\\\\\\\\\\\soi_dn_gateVar6.csv\\\\\
\\\"\\\"}]\\) not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 
   43, 121, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.82009886576534*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"1f1ab97a-13e3-4de6-966b-\
7b3b17017c7a"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"6\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\).\"", 2, 44, 122, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988657863407`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"5067a243-eb6e-4b2d-85df-\
fc44b7e6ac4c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"6\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 45, 123, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865806342*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"ae17edfd-a451-4df4-a6fb-\
5dc62d57f4dd"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 45, 124, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820098865872346*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"a9ce673b-45f7-4a6a-999e-\
d7d8833d4972"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"6\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 45, 125, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988658793464`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"44912f55-0ba3-4881-b959-\
c9ceda5723ba"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"6\\\", \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer \
than depth of object.\"", 2, 45, 126, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988658993473`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"5d11fb79-629e-4202-bc8d-\
43d266cfa59c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a \
part specification.\"", 2, 45, 127, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988659593506`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"52a40378-084d-4fd5-b762-\
5fffcdcf8cea"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"6\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 45, 128, 21807159721456449267, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988659633512`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"ceaa0839-a9cf-4be6-b01b-\
46f7751d2c9c"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gcomb", 
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"6\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"$Failed\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"6\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\
\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"PlotRange\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \
\\\"5\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"10000000000000\\\"], \\\",\\\", RowBox[{\\\
\"-\\\", FractionBox[\\\"1\\\", \\\"10000000000000\\\"]}]}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Frame\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}], \\\",\\\", RowBox[{\\\"FrameLabel\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"Anode Voltage [V]\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"Anode Current [A]\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotLabel\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"I-V Charateristics of \
SOI-dn device model with SILVACO TCAD\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 45, 129, 21807159721456449267, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8200988659683514`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[41]:=",ExpressionUUID->"4c4ea783-b659-4cee-93ec-\
1930a9b714bc"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"6", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"$Failed", "\[LeftDoubleBracket]", 
      RowBox[{"6", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", "10000000000000"], ",", 
        RowBox[{"-", 
         FractionBox["1", "10000000000000"]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Anode Voltage [V]\"\>", ",", "\<\"Anode Current [A]\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"I-V Charateristics of SOI-dn device model with SILVACO \
TCAD\"\>"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.812854769272193*^9, {3.812854928491915*^9, 3.8128549386061225`*^9}, {
   3.812855024349063*^9, 3.81285504883423*^9}, {3.812855101472619*^9, 
   3.812855124705714*^9}, 3.812855181223014*^9, {3.8128552241792326`*^9, 
   3.8128553754096837`*^9}, {3.812855671837305*^9, 3.8128556797712455`*^9}, 
   3.8128557473431864`*^9, {3.812855792410366*^9, 3.8128558033795705`*^9}, {
   3.8128558495494685`*^9, 3.812855890389803*^9}, 3.820098865974352*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"b361f92c-f33c-4876-8683-b800faf7c880"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pdata04", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dp\\ic-va_soi_dp_gateVar4.csv\>\"\
", "]"}]}], ";", 
  RowBox[{"PdataGate00", "=", 
   RowBox[{"Pdata04", "[", 
    RowBox[{"[", 
     RowBox[{"5", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pdata05", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dp\\ic-va_soi_dp_gateVar5.csv\>\"\
", "]"}]}], ";", 
  RowBox[{"PdataGate01", "=", 
   RowBox[{"Pdata05", "[", 
    RowBox[{"[", 
     RowBox[{"5", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Pdata07", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dp\\ic-va_soi_dp_gateVar7.csv\>\"\
", "]"}]}], ";", 
  RowBox[{"PdataGate05", "=", 
   RowBox[{"Pdata07", "[", 
    RowBox[{"[", 
     RowBox[{"5", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"PdataGate00", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"PdataGate01", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"PdataGate00", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"PdataGate01", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"PdataGate05", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate05", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"0.6", " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "13"}]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Anode Voltage[V]\>\"", ",", "\"\<Cathode current[A]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gate=0\>\"", ",", "\"\<Gate=1\>\"", ",", "\"\<Gate=5\>\""}],
      "}"}]}]}], "]"}], "\n", 
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Pdata00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Pdata01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"10", "^", 
           RowBox[{"-", "13"}]}]}], ",", 
         RowBox[{"10", "^", 
          RowBox[{"-", "10"}]}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Anode Voltage [V]\>\"", ",", "\"\<Anode Current [A]\>\""}],
       "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<I-V Charateristics of SOI-dn device model with SILVACO \
TCAD\>\""}]}], "]"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQLfpI78W+jDeOUY5Jb0G0d/b+LyDaT8RVdD+Q7tvq
6QCii+aIh4PozB1HikD0q8LL1SA6YPOWBhAtP/N6D4iewKk5EURfSn43GUQv
cOuYA6I5Cw4uBtEd9tM2gmiR/983gehi1le3QPSvO/YvQTTD7VcfQPSR78d+
geiSks5/IHqabz/LASD99rOzLIiec+6EHIj20+JQBtEMcxv1wPT+FUYgWi3e
NQBE32h6EAKiw9RywkD0q4lbu0H0rLZfE8F8K44lINqj+egqEC3wT9b5KJCe
VL/VA0QHNJwqANEtN92LQTRD9cFKEH2D0b8aRLep9LeA6E/8Om0getGi59NA
dMjMvetBtNBksSnHgHTpqeoZINrtG5PccSAtaLZbHkQDAKza0bQ=
  "],
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[46]:=",ExpressionUUID->"658abc23-98fa-4a2f-a11a-3da49d72c6c3"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxF13c41f/7B3B7HA5nlLaWCpWmNueUijSM0iJ9WurTnj6NL01paGj5tPcu
oUKR+y6RSBQZJR+JjCR7ZP1OOc/r9/7H9b5e7/f9vu/n474u1+m+cI3zEjUV
FZUqVRWV339brzbs8ejsnbM6Mq4xdTvyolrKK9tWPTS6Zc0lTuHGPt+lPK2m
5O20e9b8ZWubQNsvUp69+bS/901rTr+61kqQLmX7Jcs7lCruE9/8vqR83Hzu
Xs/b1hxd/buglF9O+ScuTVHvdzWncEX9aRPnd1PUUxRTVJSycbQth92x5mu/
y12Vsrbr/lzVu9Z85vTvS8qeRafnP1LUUzSnKCjlh6qeI+wV7/+uZuwj5asD
Hl4rULy/7Xd7W6X8xUXtvpPifN3vcmulfNMzKe+1op7Hn0vRf8HgwVfvW7Pb
n4JS9kjhM4sVzzv/aVDK7tkbbbcqzu3+DCxl816uc64p7v+Us1L01/dT20OB
1jzkzyVl/RuiKbMV52Z/Cko59Oymz+cV513/NCjlOcfcBv1Q3P9pr42Uk8qu
HPmoeP5POYGU34tXzb/6wJpbPaRclr9/2EbF860eEnY4VP3WNQgeEl76UrvY
PggeEt7BQcv1guEh4X3SFXtTg+Ah4Zsv9pgYhMBDwqcb3NbGB8JDwmtzuibX
hMBDws5heUXdQuAhYbMxnXhtCDwk3O5xXVu3YHhI+INKVvfUR/CQ8PX84mlZ
wfCQsGHg9vFxj+EhYcmP4x6DguGhmOeiRL72MTwk3NHR2K/rI3hI2CWqz/d+
ofBQnGtlmdeHwEPCm4QHOnx+DA9FHoGZGSGP4SHhbxmTzquFwkPC/V3KvziF
wkPC12ZZTagIg4eEhRadyTQUHhIef6hsU3Q4PMQszJw2TD8MHmLWnZX8+Fg4
PMQ8c/1ao5pQeIh5+9OJQaZP4CHmGYO6LS0Kh4eYr6eWnZz/BB5izr8fw1nh
8BBzlnOax8Kn8BBz8wO1+6Mj4CFmuzuuw0PD4SHml8FLRq2LhIeY299T3RsQ
Dg8xN30tnhjxDB5i9k4YvXPDE3iIeY3dFK3EKHiI+Uie/XHjp/AQs1f79QXZ
UfAQ85QvY523RsBDzIlODqXOBA8xG6n+9N4cAQ8x7zndz/AkwUPMuT4eJ2ZF
wkPMyaK47S0EDzFPMB00kJ/BQ8yuvbuWtnkODxGHHzEtK42Ch4hrrb/qmzA8
ROx9ZK2rKsNDxDsmjx7913N4iPjatgOlq57DQ8SShvs79RkeIk7p38N+6wt4
iLi+x/6KqOfwEPHbHvfUr0XDQ8TvXtTuW/cCHiL2aRL6PY+Gh4hLl2v21o6G
h4gXT47cvDMaHiIObLslQT0WHiK+3C9NuDkaHiLuva9y4YYYeIi4JHHWoFMx
8BBxutXQiF2x8BBxOUtWvH4JDxG/qV83LvYVPES8v5fjgckx8BDxJj1TsxNx
8BDxwayz8Wkx8BDxilG32CgOHornU9687B+H/A05897HW21fI29DvlKQ56Lx
GvkacriZfejEOORpyOb1B/XmxyM/Q64dvWuYYzzyUrxfXzI5JB75GHJjtcWZ
xnjkYcjJC832WMVjfkN2KLX0N3+DeQ35/YR42wcJmM+Qy53SzpXHYx5Dpled
K4oTsU8GPKdus/DHG+yPAfucWvh98FvsiwGPnMXG/Ab7YcBHLRZNEiZhHwxY
+79t4dGJ8DfgzwOvHZckw9uAqy/+SnB/C18DvmRNY52S4WnAVQnePb4kwc+A
e70ePOpHMrwMeMHc6qPVSfBR9Dtpr3N1CjwM+PE8l3XvkuEh5LvvLZc9SoGH
kO8ZNPiVJsNDyKNcriYN/QAPId/Kq7IJSIaHkDXcNdU00uEh5HzPDrdykuEh
5Owuvt/L0uEh5L5H38eVv4OHkF0vBH6wyICHkNX977ePSIGHkC90m0GVafAQ
cuGc2t4H0uChz7P+9zTbPR0e+qziEPhmXxo89LljUUKaXwY89Fla6xg8Ix0e
+nzN+aTP3Qx46LPXzryKMZnw0OeNET9NVDLhoc+bes9wmvARHvocpVV/delH
eOiz2f1FiX6f4KHPlob/WTVkwkOfa5v6RMdlwUOfV3do8E35CA899ovva/Ph
Ezz0+NH6dpt2fYKHHv/r8vaycTY89Pj12tplws/w0ONJPbfeKMyChx477/cy
fZ4NDz0OOq+5s/EzPBTfK3WyNMmBhx7rfdi53z4bHnrcjiKmzM2Bhx7nXz7h
Ks2Bhx7P7f2gYWguPARccd8+9ns2PAS8pYP62d258BDws02pVXu+wEPApe0d
fQ/lwkPA8huW0oNf4SFgwbXqMYu+wkPAB637hgzKh4eA+90pjSv6Cg8BX5MO
mjPiGzwEPHpngWR0HjwE/DHa36S+AB4CjlvTc1vEV3gI+F2QsOhIITx0+Wpa
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
yOyLS8cq7/dQzayD8rjFY/n/AGfjwWE=
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91nk8len7B3D7vpyFFmn1HalEi0wSR4YppanQMtopNdWUtmnVvkgbSVom
aV9HmzbFdRGKFIoQicqa9diX+J1yPr/nn/O6X/f9XM99fd7XH6e/1yq3xUoK
Cgr1igoKP367HgM+NMm3Xkcs4UazOUfjGsScdVvn6OTH9lwx7XGfvd/EbD3a
/diBaHsu3GwQMb5QzFHPWnO3yfazLvraaWWJ2aPZNWzvE3t+nfLjEfOtt83D
smTr5w0/Coq5l/GoIaej7PlHtWmPxTxkUe6a0c/sWVZMVlHM5yZnbPhbdv7S
j3IXxbz5ujQ2R7Z/+tSPR8y/3VrXt1r2vuxysoJinh3zsfxJjD3/qNZnr5jP
K51ffFu2v+XH9TaLucLI4ZSqbH/1j3K+Yn64ubTD8Kk9+/x8xGy287bPS7Ln
OT8LitkwLHb9GNm+288Lyu53dVVApWx/ws+GxbxuYZRStOw+P8vZiTk8dNGc
W7L6I38+Yq7yoQHZsnwG/Swo5i2ZBy5Pj7Xnvj8vKObED3mX4mT7P69nIOZN
02dYbpPV/1lOS8wGylbrH8rWXR5i/tzQQ/dTnL3cQ8QFAd1e94mBh4jtbCbt
/yMOHiK2cZba9mZ4iDj+QPXE7XHwELFtsvdd7Th4iDjBMN3icxw8RDypau7c
slh4iNhBav8m+zk8ROxR8ktQyHN4yL53dVvS8Dh4iFjTI/PB7Hh4iHhA+7GH
3RPgIeK4c+ZjNePhIWIdoU3evHh4iDjs6/GiQ4nwEHFw/0mH2+PhIeIFwS7u
KxPgIeKbm00VFV7AQ8Sd97a9Wp4ADxGfryg+t/QlPERcpXRIa0cCPERsGJ7p
6/4CHiIeMntmRVIiPER8MbbP4kcv4SHi96p3C11ewEPIT3xVjbKS4CHk4pZS
UWAiPIS8LOzfsqgUeAi51TF9qs0LeMj2xYsky1/BQ8gPrH7P75EEDyFbT8jr
+TkZHkLOim87fzEJHkIOK9p3XTEFHkKO722/8X0yPIT80vRO0bLX8BCyZ+WN
xtFJ8JDdR3Tw4ttUeAj5wBFbw4QkeAi5IP1hjUUaPIS8oNjg2fNkeAh5pPn9
AzPS4CFkIw3VgNOv4CHkKa8TN89Jg4eQNXPG9Yp9DQ8h/7tY3WRsGjyEXG1b
R99S4CHk4SklfcPT4SHkgdkGowJS4SHkjPstfsXp8BDwds+t3ltT4SHgnc1r
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
      "]]}, {{}, {}}}},
  PlotTheme -> "Scientific",
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -36.92988766212369},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{329.9999999999999, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 0}, {-36.92988766212369, -30.59498341291309}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-36.841361487904734`, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "16"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}}, {-35.23192357547063, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "16"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}}, {-34.538776394910684`, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}}, {-32.92933848247659, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}}, {-32.23619130191664, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}}, {-30.626753389482538`, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}}, {-37.534508668464674`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-37.35218711167072, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-37.19803643184346, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-37.06450503921894, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-36.946722003562556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-36.14821430734479, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-35.74274919923662, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-35.45506712678484, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-35.04960201867667, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-34.89545133884942, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-34.76191994622489, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-34.64413691056851, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-33.84562921435074, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-33.44016410624258, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-33.1524820337908, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-32.74701692568263, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-32.59286624585537, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-32.45933485323085, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-32.34155181757447, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-31.543044121356694`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-31.13757901324853, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-30.84989694079675, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-30.444431832688586`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-30.290281152861326`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-30.156749760236803`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-30.03896672458042, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-29.933606208922594`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-29.52814110081443, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-29.240459028362647`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.8130133476540537`*^9, 3.813013355728515*^9}, 
   3.8130134555442247`*^9, 3.813013575700097*^9, 3.8130136190205746`*^9, {
   3.8130136495123186`*^9, 3.8130136941918745`*^9}, 3.8130140189544497`*^9, {
   3.813014121016287*^9, 3.8130142023539395`*^9}, {3.8130144713833275`*^9, 
   3.8130144966527724`*^9}, {3.813014535622001*^9, 3.8130146315344872`*^9}, {
   3.813014761252907*^9, 3.813014766415202*^9}, 3.813014815209993*^9, 
   3.8130149365209312`*^9, 3.8130152659127717`*^9, {3.813015320623901*^9, 
   3.8130153707837696`*^9}, {3.8130154393386908`*^9, 3.8130155416845446`*^9}, 
   3.8130155898042974`*^9, {3.813015787396599*^9, 3.8130157989392586`*^9}, 
   3.8130159247894573`*^9, {3.813015958302374*^9, 3.813016199449167*^9}, 
   3.813016244667753*^9, {3.813016672136203*^9, 3.813016721514027*^9}, {
   3.813016865368255*^9, 3.813016919878373*^9}, 3.813026341045956*^9, {
   3.81302671525136*^9, 3.813026723886853*^9}, 3.8130267795860395`*^9, 
   3.8130268664290066`*^9, {3.8130270029428144`*^9, 3.8130270119853315`*^9}, {
   3.81302708975278*^9, 3.8130271032435513`*^9}, 3.8130271547524977`*^9, 
   3.8130271986190066`*^9, 3.8130290611345367`*^9, 3.813030143196427*^9, 
   3.820098866660391*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"8bfcf37c-c5fe-4fcb-818a-c6464b1b6863"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
crP6pCyA/w963NvSsWUsH97VtNb5alTlcz58q+nJ0cvf3v6jBs9quqjj9Jv2
GjX4VVF/v0kfD5qqwauK+vU8lPaYrwafKhp07o2bsb8qPKqoXYtW9fwPqvD4
ToeNKZ5oZKkCj+90ycPKKLeRqvD4Tm+/l/XMf64Mj280tqmkKKZAGR7fqE3B
fO/ipcrw+EY9rL3uv/xHGR5f6dzxN0NPeyvB4yud3aFt77tSCR5f6cJF5RVR
vdd9Hl9o6LET3XcaFOHxhSqWSw73D1SExxdaUJAlueSsAjwqqZ1ksnxoniI8
KmnP2jPJOu4K8Kikg9rvuVyTVYTHZ5ov23Or85Q8PD5TvR7FK/deKMDjM23r
8n9IZ8nDo4IG6o4yOKygAI8Kuq6mYKxdmhw8Kmhe0JfJe4vl4VFOdZ+HWsl4
ycGjnB6+OWfwxjny8CinfM1hL6f4ycKjnAauDMpQDZND/mU0x9Rl+1tbWeRd
Sn03esx3WSKHfEvpubPNG3X8ZZBnCe3aap3fNFoW+RXT2dKakQE2MsirmA5w
/W477oAM8imiml67bfZOkkYehVSjijveIJZG/YW0NXF16ccuKdRbQMsdOcuR
l6VQXz5d3+3YXf6Mh3ryad31HRPYJh766RMdMuyRnf5+HvrnE037+CNIO18C
/fKRTvW1az25VhL9kUeH/LN+UcsqCfRDHi2cPL9i6g4J+OfSsrgTQ4odu+37
lsuhm5Zzg5Oe99j3+ebQrXKL1edf77Tv88ymY/TVxuhoddn3+WXRnqJ/Kr/H
dtr3eWVRTVf/R4bkj32fTya1/hyx5KryH/s+j0zqOi54+datHfZ9+WdQ2zM2
3qOr2+378k6nQw0+JxZvbLfvy/c9TWp+YuC9rc2+L880+lGP2M6f0Wbfl18q
tbuhtW3h91b7vrxS6MbufSVyF1rt+/JJpratJenKs1rt+/JIpIYtQ5q4mmb7
vvoT6Lzqrx7Kz5tRbzx93JUS1fi1GfXF0oBH79fH7GlCPYyWJsQuWR/chP3H
0N/71slt+7cR+42ivCfdWnMXNWJ/kXRXXYurN+839hNOT59XGDnDuwHfH0Zl
58S/HLriF77vJT1sc6ZZZVkd1n9G5RxSFNLH1GC9R9QinJe+ovwb/j+Qpite
Mc6Ir8Tnb9It+rcTqypK8P4FKvruddOvKh/Xh2j1Mmu27BOzv3HcJmZQrka0
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
zqzI0kEV8FAn21fe36PtUEH/Byas8rY=
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxF2HVUVN/XBnC6Y4JQSjptxUDwHhU7MLAxUTFBxC7sxAIFAxNbVBADEDiH
MhCQ7hYUJKQ7Xr4/HtY7/7BmzcyZs5/Pnnv3QW+9y8KNYiIiIhXiIiL//e17
qDDv+f7aauH6Ns2mDleimoSMb9epXLbAwqZqQbDO6UohOzJk3xnPQnOb4oMq
b6YXC9mna4eGGq+3sMn022kjlylkjbtDAq2WWNgkxP/3ELL0zhih22ALm+im
/xYUsqzNF/R32FjY/LfagmAhS+1yzttVam7Tu1jvikJ2vL3Iw0XOwubxf8v5
CdnmFfsUfMUsbG7f+u8hZJeG5439ZWRh07u53gWF7NHrZcmKReY2/62mc1rI
Jr3Kb18raWFz6L/tHRSyKYMf7pvau1/X/5bbKWSfXZeLXqg2t9n0v4eQJVv8
Kqn5bG7j8L8FhUxtWE7JjHxzm4X/26CQbTSZrmnJzG1m/K9gIRudOZyX1Pv+
/y1nI2Qee6wtL/mZ24z630PI7rZtcIyKNrcx+9+CQuajlzM18aG5zaD/bVDI
nluU/7p8y9zmf9tTEbJRQbfWmnw071tOTsi+VL1/8eyMuU2fh5AdnO7zx+Cp
OTwEbJro6lGebubwELAJi5n+gj39HgIWPaVkods6c3gIWIzTATEtJ3N4CFjg
xcKtmdPM4SFgQ0zX3LC4aw4PAStwd3MVGdbvIWApwa7cX1tzeAjYiOqsaaHW
5vDofb3p6FnD5ebwELALCs/LV3abwUPA6kfab2qabQ4PAQszT4m6W2YGDwET
n3bD8/yqfg8BCx0U+OpMjRk8BMw/Mdg5mNfvIWA163ZZuuaawaN3/efNP6KG
9nsIWEPWspUnfpnBQ8DOpoV5fftjBg8BO7kqY8enQjN4CFg8b2bgh0wzeAjY
arUL5OdrM3j05vepXS2/9/v6PARMJGCMTN5NM3jw2RnjbzOrY8zgwWdLjg1d
HXbXDB589qBd/pTJVzN48Nkx/vDSiMtm8OCzq6Pfa/BvmMGDz7Zuf7zT9rwZ
PPhsrYwltfc2gwefBV+Km33MxQwefPbH8EdT/XIzePDZoDc8tWG3zeDBZ0Mf
LCxdNaHfg89GiMwVTurdX58Hnw2f+ppXqdHvwWc2Lvm508+awaN3/QmfqnRF
+j34rDIrwnHiXjN48FnDH/uudd2m8OAztyVt1+giM3jwWd1943u8BlN48Blf
XDuxelG/B5/ZmtZev19lCg8+S5xuP6TMpt+Dz7Lebf9hW2IKDz5TiP0R66LR
79H7/fYxaSu/msKDxyoE3TOTO03hwWP2Sk4nPxWYwoPHakatu6LWu16fB4/d
HnFERshM4cFjh0f5tdMIU3jwmExhpbFosSk8eOxgSrdY/mNTePBYwEa9g1Uf
TeHBY9balmdsz5nCg8d2z2+Jff/EFB48pvpoz9Cdp03hwWNrPnpsWeBjCg8e
s5pWY3r9oik8eCzWQ2PU7Hmm8OCxEzXc4kMepvDgsR8mN2UkHUzhwWPHBrds
/LCs34PHNmk+/UUmm8KDxwxIRPiY7f0ePPbae0jKKwNTePDYBD+N5p9r+j14
7FnmgLkzeabw4LEV545uu7aw34PHEu6btqhqmcKDx8SabYwrB/bnr8xe8evN
dSX681Zm83+dn84k+/NVZnMTpg/0VO/PU5lJfex0m1tmgvyU2a6CYZVvf5sg
L2V2TpDmcD7fBPkos08aYTJ3M0yQhzJzGumZ41xugvqV2T2bqeRKqAnqVWY2
OUa7emJNUJ8ys5uaJe2XaYJ6lNniaCcNw2sm6CclJvHMceSV5yboHyUWEW+U
fuqCCfpFiXXOVb350d8E/aHEnisZft+/1wT9oMRyaMEPdt0E/kos7eW0TZ6r
TeCtxNYfNJ58+IwJfJXYaYclc3OWmcBTiT20U7ZVczSBnxJbOall8JNZJvBS
Yvxn7cfHrTOBjxK7wxzmuUmYwEOJdZS37hk81wQeiuyMY8/4WXIm8FBkEVW2
K870rtfnociUisdv/vHHGB6KzET5wOv9C/s9FJlKhbGqe4QxPBTZZRbb/X12
v4ci+2C+3u3wC2N4KDK3994unSP7PRTZwqCaHtHHxvBQZF8ub9MKkO33UGSJ
E4KaaqkxPBRZXYCb2eLvxvBQYMq7yL8dH43hocAuSRp3uvW+3uehwNZtvDg6
6I4xPBTYUg1PzcWfjOGhwDInHn3bddMYHgos/sBWKQsPY3goMC9fi2dnrhnD
Q4FJqx40r9ltDA8FNrna27vS1RgeCuyg5VLbacuM4aHAxD7J3nU+ZAwPBZYm
pjk82toYHgosee6Rtn2bjeEhz7YKUhUbFxjDQ57tkY/cOWS5MTzkWeD8ue8N
B/V7yLNb+a9dE8YYw0OezTjlO6l7fL+HPHN93/ZTm28MD3m2W5cWqOv3e8gz
qRU5JjfrjeAhzyalx31ZrtnvIc8qRk7f11RtBA95Fum/SUau0Qge8uzO5dQj
rrFG8JBjdy+ZfXBV7PeQYx93jPsZFWEEDzm2syu5xTnNCB5yTDbKRKEy3Age
cmxc4K1BO54bwUOOpWR4WcS/MoKHHPN4K3n4+ykjeMixExsUHLc9MIKHHJvZ
aJ3LnI3gIcd6vOfuv3zLCB5yTPGRZOG8mUbwkGOT1y83WPzYCB5y7ELAW9vv
1kbwkGXn6gvcX84zgocsC165zeDhOiN4yLJdo/Pd7lkZwUOWBepbK8UZGcFD
lvkb7dw/ZJoRPGTZKFnXa+MmGMFDlsUGDyVnagzhIctKQ4/tP2bZ7yHLJnjq
fU6qNISHLMtTKbn4dni/hyw7oHxr0cpvhihXlonKb7JuFfZ7yLC02oDSqHBD
eMiwmX+u6U9T7veQYe+MdiR5XjOEhwwT+ZPoYafU7yHDFutGXDnhbQgPGaaj
Km++PsYQHv//+T4PGbZm9k2DwlBDeMgwk6iF4n4HDeEhw3jPDM1XehrCQ4ad
N9qVPNLFEB4yjKwPO7n3hCE8ZJg9HXjz/mFDeEizwit+1ucdDOEhzT4rR9Up
9j7v85Bme1Mt03S3G8JDmh291TC1YbghPKTZne8hp7bYGcJDmjXE1O1dL28I
D2lmL1NPa7l+D2kmeLm4yqDbAB7S7K1/p4yOXr+HNNujpdTpOswQHtJMM/nT
4uw8A3hIs6sXLs7W1zCEhxSzu+TlMq7eAB5SLGrlxtRtrQbwkGJZWcXbvd8Z
wEOKaY10mBvWbAAPKSZ5zEjv6zUDeEix9FFniWyqATykWP3B8Xtf+xjAQ4p1
Lov+xA8ygIcUK5HbWL3+nAE8pFjPs9viqS4G8JBiJxZbbXnz0QAeUixnbGeU
6gYDeEix8CDrqWMvGsBDkrW92j9mzAwDeEiyEZYRS3b1rt/nIcnctFwdvBQN
4CHJbJ1Pfa4/bAAPSXacZxNvpG4AD0k21tBy2/X5BvCQZKuntn1q+qsPD0nW
NSG9MWt1v4ck+xu972lotT48JNmX9vBRNWYG8JBkkQtvPAkJ04eHJOuMDN2w
YYwBPCTYscJ2R7F3+vCQYLEOCo1JHfrwkGAlmwKLrfz14SHBatS+ahnU6sND
gj1OP6oy+4Y+PCTY065LNbeL9OEhwRz2SvI+LNWHR+/z7FEvOrL14SHBGhMq
54zdrw8PCRadukz/nrc+PCSY082pZ6LH6cNDgo1e0Wl87Jo+PCTYsME1pmyO
PjzE2YuQNP6STfrwEGcq0jNF1xnpw0OcjXK3uW9qpw8P8d7rxdVSjan68BBn
tr/3yRlp6sNDnLWKzxVxMtaHhzizkBWdrN6jBw9xdtQmuc1moj48xFnaqlkb
Cj/pwUOcKZ2eFDOu9/N9HuKs0W9h8skYPXiIswtelWZBA/v/vyDG/Hk9grMe
evAQY4JdcXbq/H4PMXbSJnGB33k9eIixL1n7drws1IOHGAv2M7445rAePMRY
y+nQqbOD9eAhxi5eqlj1fJsePMTY4CqBe8FLPXiIMc305aZ+i/TgIcYeTni+
pvmCHjzEWEP5u8Qhk/XgIcbyfrdf2rdZDx5irHDejF1xo/TgIco252qWyM7T
g4co211aRs/o6sFDlMkPrj0eu0cPHqJs8rFDymPl9eAhyqbmdQndTPTgIcr8
dgXlGtXpwkOUWTRuHD1Ppd9DlA1NuK0xuUYXHqIsz67eKq5SFx6iTFHt1avO
FF14iLLmcJcLBzN04SHKTIPFPgiDdeEhwj7fFIs/laQLDxE2aq3pndc7deEh
wuT+1Jda936+z0OEmWXpWanu14WHCCsucf9s6awLDxE22Vd/67XTuvAQYYNr
HDdP2aQLDxE2cbla9+99uvAQYW9HxAZX2+nCQ4SpNdirdNnowkOEOXeMpTuX
68JDhCmPJldum+vCQ4Q5LNpf7DlKF/n30KMLhxnNzx6EvHvoqn3K1yaM10W+
PXSd0pvA3ccGIc8euq/Mo6jSoD+/Hlr7uXRTm/sg5NVDNZYMPPTzwiDk0033
+l8d5542CHl00xUWYke2OA1C/d3U01n6q8+BQai3myrofbu50mQQ6uumc6Yf
UL+xcBDq6aYHkxNlLuXroJ+66AJ7PdM9XTrony5aNltxjEqYDvqliw778nel
e5kO+qOL7h66ruCUrQ76oYt6kmZdm2M68O+iVcbfVZNn6sC7k14P3OvluFEH
vp3U95US9TXUgWcnfSovNa0sWRt+nbR79oT0TUN04NVJp+5tnzaSacOnk6b9
Nnh/+JU2PDrpO9uRQXrLteHRQVXNHTbtFtWBRwe9GeAl2CiiDY8OKlbpZVmx
WhseHTRt5JB73jla8Oigma/ubpSfrQ2PDjp1kM8lsWoteLTTWueIMIPnWvBo
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
r3Nqa3VerUjKC8P63G43q+Ke1lK8/pgbkX97ZrhGTRj2x7lPPDzecFkj3v+G
q5gmKX1vSHsY6uM2fz9w/3SISDjq50Y+K8579UUiHPlwczPVPtGNsuHIj5u+
NcAgvEwpHPlyks2zMwrUheHIn7M2y9XZN1YtHD7cQPXSBXJ3NMPhxyUdsz2Q
qa0bDl+ucmfbar0gA3x/DCfxx0Od6pqEoz8423X1ZYESg7Gfr9zz2666I+4N
D0d/cb+Nan8X5o/C/r5zG4MaG6Xfjw1Hf3Ix62O2JZ6yxn7juWkpJeJOjSQc
/c0VBiecWupqi/0ncu2evOC3B2eE4/fBiWyYwdffOxf1JHHGRZEKGeELwvH7
4rquH7lRvXEx6kvmRKX/HXlSsjwcv09ObaL/u38b1qDeVK7YYv6AeGXHcPy+
uRn7Fz+fP9kJ9adxycmGIU4u28NxfeCEPxOXau92RR7pXFr++Ouhx/aE4/rC
qS3bYWd85yDyyeT0rr8UHXz2WDiuT1zeR75y1+NTyCuLWyo6ttn/7/lwXN+4
7bHKPascriK/bC7ddvXk9m/Xw3F95J6cmWgc7nUbeeZw9NyFKeqaD8NxfeWG
ZCwc7jT0KfLN46Z82VBi2uYfjuszV3VyjtVufhDyzucOyGbbP5wVEo7rOyfu
MOUW+cOQfwG3xt+q+VjMl3DcH7iHg+dd+1uWCI8irm7qIRcHnXTUU8Qprjjp
JS/Ih08RlxXc8UbRsBT1FXFu3pPafqpUwauYs9qvt35dQAPqLeZiwp7p+0R2
wK+YOz3vx0D6XDwC90fugXfZoZOt8hG4f3IBpklKwnZhBO6v3DidgIasR1oR
uP9yO1dYHo3zNozA/Zm7MeSO4dqAIRG4f3MfMnxnW+6xjMD9nRtaYXVxtyoX
gfs/J9yvE2B9eVoE5gNOy3NR270N8yMwP3AGT9qHaOUtjcB8wQ2pSO9MX7cu
AvMH99YzO2ix/vYIzCfcj7Ta3Z9P747A/MLVJJ97Z197JALzDXfa9sG78NTT
EZh/uL07SqMEP65EYD7izK7e1ffS9onA/MQNd3n5MD/6QQTmK671RNbsfTbP
IzB/cbVn43yf7g6MwHzG1f7acNpeJiQC8xtX9uRA+J+CyAjMd5yPmlnHpB3f
IzD/ccOkT5VkyqVEYD7k/tnOXyrvmQ2Pv9xDS8HUq9ol8PjLfYx9+n3Tmwp4
/OXWmem8yhtbD49KziY595pxfhs8Krn766+G5K4Uo5hvuW2Vjhvuy8hRzL/c
5Tt75qhtEVDMx9zWGW27JlcNpJifuaI7Ix/81NWnmK85s1NTTjkNMqOYv7lS
/at35UaPoJjPuU8R7XMzx4+lmN+5Sl+3SqfMiRTzPedhX/XWRMuWYv7nLJjm
c+fPMynOB9yGkQZytibzKc4PnOdb58SS8kUU5wuuxeptaZH2MorzB3cktWpz
CHVAPbXcnp+vJ0/6tZbi/ML9mT2y2vyGI+qr5ZRcQkig6yaK8w9X4TT6+MI9
W1BvLRepZ3b5h+92ivMTF9F800OvzAX113Gi075p/HniSnH+4mwiLY7YObkh
jzpOx+PY0STLPRTnN27Ogu+XvHj7kE8dp6HOeRU076c4/3GeZe5l/PKDyKue
s0i4kv/o12GK8yMXvt/l+sCKo8ivnjPRiDnSdegYxfmT++Mj+qjt7HHkWc8l
V008uvrmCYrzKxf5ZugCudcnkW8DZy6V+7ow9hTF+ZdbVx0zKLbkNPJu4LxG
tB58LH6W4vzMvXV3Xb7V9Bzyb+CULl4ol1xwHv3UwBnIte7YfOQCPBq5Jo0N
VadeX4RHIze42lt7frEHPBq5G2opSmzAZXg0cs6jlvz7segKPBq52df3NVnO
vAqPRi6ZN9Zjzt+r8Gjk7ogefmB86Ro8mrjL2o8dI0d4wqOJG6LyYq5Glic8
mrgXmd/5w455waOJaxocf7XL7Do8mrif11STT6Zfh0cTF7nCr4ueuAGPZm7o
dbvVASO84dHMra4Ot1tU4g2PZu6IHuOeXfeBRzP3bMHEly9n3IRHM1ecoKHp
0H0THs2c0dgJhqEfbsGjhXNaqLIm2vk2PFq4G7feOO01uwOPFs4rr6IwuewO
PFq4qWdVd6T5+cKjhbs4MDnosONdeLRw035PX/Hd8B48Wrnlx7dIhPy5B49W
7pnLiyWz/O/Do5U7d9miw2b8A3i0cja66lOM7z6ARyu3ad2tRfmiD+HRyrXM
rT+83ukhPFq538KXih8SHsKjjTNNaLVPG/0IHm3ch0Clh9T3ETzaOEneEm6v
pB882rgrUz8cbnH2g0cbNy/s8ZPJ2X7waOMmdF6XXGr7GB7tXPKhq+WjAh7D
o52TC1lzO0vrCTzaubWjP2yyvfAEHu2c3RF6c2/rE3i0cz/50w87Oz2FRzsX
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
hUoEpNkU0/8Dk3gFtA==
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
jy5ycKTYhjFeDTy6yJ68PW9uV6iCRxdhBW4qsxWpgUcXqQ8/o/qPpQYeXeTm
g+Z3DA9V8Ogilvulel43q4JHJzGUvCh5uUcVPDrJ6HXGEXbHVcGjk7gK76pl
7VYFj04iCvleMqdKBTw6yU2rUWa2Zqrg0Um+lLe7OkurgkcHCXZgFQUVqIBH
B/HZ8Ojnkccq4NFBqmfWFc+OUgGPDmKTdNLJ3ksFPDrIUayeMW6/Cnh0kE9u
GgdMmpTBo4OY7d3hs5mhAh7tpDY4XZw/QgU82knEhwSumCqDRzsZFpA8f+xV
ZfBoJ3P991W5X1cGj3ZyzX/iqWPeyuDRToI3B/NvTFUGjzbizpI1o80jwKON
vHRI1nsxRhk82gb6e5LjpdgR4NFGctZ2HK5qGgEebaQvJVIqzHIEeLSRSaGP
2rYGjQCPVpJoZrHqSf1w8Ggln30W5aQfHQEercSvp2HJZ+/h4NFKri1gXBSP
HAEereRsefzBE8HDwaOV/NhkdCPkwnDwaCFkTk7NhLvDwaOFrLD0zPvDGQ4e
LUR1dF+7u+Nw8GghKWvK2dvCh4FHC1k4fq9rg8Zw8GghnuUxepZ4GHi0ECTj
W3Gjcxh4NBOO06ifU5SGgUczGcPK75ntNAw8msndqp4tW18ogUczsWyfEXNq
zDDwaCb18el8pTNK4NFMruanfO+IUAKPJpJn25M6Z5YSeDSRuxuM7l2wVAKP
JhLxJaBm6kQl8GgiOUXUMFpHCTyaSO/8TfccT4vBo4lIOYdM6fsnBo9GwtD2
ObN5vRg8GsmHKULVW/PF4NFIWl55XAsxEYNHI7ml+zBQSVEMHo1E4jvKeViH
CDwaybnJD5uMP4rAo4Hof6lgL3YXgUcDkWrMEUkHicCjgfQ8mGB3b5MIPBpI
v7WS6YeB40GPBlK/ZP1Shx9C8GggDrETrEfOE4FHA/F86qO23F0I+f8jDK8V
syXFQsj7H1nmmB7lvFsI+f4j+XYPHslHCyHPv0Tb0TwupUgA+f0lFQ+S5Rch
IeT1l4yca53nESaAfOrJcDv3UycMhZBHPTnO9F9+erMA6q8nJ1rT9tu/FUC9
dST5ks6l5IkCqK+O9N7irrM2EEA9dYR7ve3DxdEC6Kda4j1rn1eDjiL0Ty1Z
OeLX+b8ZitAvtaSrc0dqaIoC9EcN2WfWVXR9vgL0Qw2JW8Ywdhk4P1hwDYmM
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
nLq9FyaUg4cSrjnxavs3XE7+ByYkE0g=
       "]]}}, {{}, {}}}},
  PlotTheme -> "Scientific",
  PlotLegends -> {"Gate=0", "Gate=1", "Gate=5"},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Anode Voltage[V]\"", TraditionalForm], 
    FormBox["\"Cathode current[A]\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{329.9999999999999, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, -1}, {0, 6.*^-14}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8130133476540537`*^9, 3.813013355728515*^9}, 
   3.8130134555442247`*^9, 3.813013575700097*^9, 3.8130136190205746`*^9, {
   3.8130136495123186`*^9, 3.8130136941918745`*^9}, 3.8130140189544497`*^9, {
   3.813014121016287*^9, 3.8130142023539395`*^9}, {3.8130144713833275`*^9, 
   3.8130144966527724`*^9}, {3.813014535622001*^9, 3.8130146315344872`*^9}, {
   3.813014761252907*^9, 3.813014766415202*^9}, 3.813014815209993*^9, 
   3.8130149365209312`*^9, 3.8130152659127717`*^9, {3.813015320623901*^9, 
   3.8130153707837696`*^9}, {3.8130154393386908`*^9, 3.8130155416845446`*^9}, 
   3.8130155898042974`*^9, {3.813015787396599*^9, 3.8130157989392586`*^9}, 
   3.8130159247894573`*^9, {3.813015958302374*^9, 3.813016199449167*^9}, 
   3.813016244667753*^9, {3.813016672136203*^9, 3.813016721514027*^9}, {
   3.813016865368255*^9, 3.813016919878373*^9}, 3.813026341045956*^9, {
   3.81302671525136*^9, 3.813026723886853*^9}, 3.8130267795860395`*^9, 
   3.8130268664290066`*^9, {3.8130270029428144`*^9, 3.8130270119853315`*^9}, {
   3.81302708975278*^9, 3.8130271032435513`*^9}, 3.8130271547524977`*^9, 
   3.8130271986190066`*^9, 3.8130290611345367`*^9, 3.813030143196427*^9, 
   3.8200988668254004`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"d466d7b4-0336-495a-936c-63b5aa2188b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"lplot", "[", 
    RowBox[{
     RowBox[{"PdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Gray", "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"lplot", ",", 
     RowBox[{"{", 
      RowBox[{
      "ListPlot", ",", "ListLinePlot", ",", "ListLogPlot", ",", 
       "ListLogLogPlot"}], "}"}]}], "}"}], ",", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{"PdataGate00", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "}"}], ")"}]}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.8130287112995267`*^9, 3.8130288139453983`*^9}, {
  3.813028867358453*^9, 3.813028890398771*^9}, {3.8130289934336643`*^9, 
  3.813028993924692*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"589a1d97-b709-44d3-8864-224e9cfa80db"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`lplot$$ = ListPlot, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"\:65e0\:6807\:9898\"", Typeset`specs$$ = {{
      Hold[$CellContext`lplot$$], {
      ListPlot, ListLinePlot, ListLogPlot, ListLogLogPlot}}}, 
    Typeset`size$$ = {468., {141., 149.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`lplot$$ = ListPlot}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`lplot$$[
        Part[$CellContext`PdataGate00, All, {1, 6}], PlotStyle -> {Gray}], 
      "Specifications" :> {{$CellContext`lplot$$, {
         ListPlot, ListLinePlot, ListLogPlot, ListLogLogPlot}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{531., {199., 208.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
       Part[$CellContext`PdataGate00, All, {1, 6}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8130288764429727`*^9, 3.813028891534836*^9}, 
   3.8130289952217665`*^9, 3.820098866936407*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"49d1345e-51b8-4e9e-8f32-43f06830f9fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ndata04", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dn\\ic-va_soi_dn_gateVar4.csv\>\"\
", "]"}]}], ";", 
  RowBox[{"NdataGate00", "=", 
   RowBox[{"Ndata04", "[", 
    RowBox[{"[", 
     RowBox[{"5", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ndata05", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dn\\ic-va_soi_dn_gateVar5.csv\>\"\
", "]"}]}], ";", 
  RowBox[{"NdataGate01", "=", 
   RowBox[{"Ndata05", "[", 
    RowBox[{"[", 
     RowBox[{"5", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ndata07", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\000_LAB_Result\\SILVACO\\soi_dn\\ic-va_soi_dn_gateVar7.csv\>\"\
", "]"}]}], ";", 
  RowBox[{"NdataGate05", "=", 
   RowBox[{"Ndata07", "[", 
    RowBox[{"[", 
     RowBox[{"5", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"NdataGate00", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", " ", 
          RowBox[{"10", "^", 
           RowBox[{"-", "13"}]}]}]}], "}"}]}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Gray", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate05", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "13"}]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Anode Voltage[V]\>\"", ",", "\"\<Cathode current[A]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gate=0\>\"", ",", "\"\<Gate=1\>\"", ",", "\"\<Gate=5\>\""}],
      "}"}]}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8130291575970535`*^9, 3.8130293069835978`*^9}, {
   3.813029344308733*^9, 3.8130293960236907`*^9}, {3.8130294290625806`*^9, 
   3.8130296401716557`*^9}, 3.813033530549489*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[53]:=",ExpressionUUID->"d3d0c4c0-da27-4c5a-a011-d307e3d34485"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw113c8le//B3CcYxzzDElFQ6FUyijzuC+7vfcen0q7tIfS8CklEu2l0tAk
kQrXJSEiKzNZpRKRvfn5fHv9zj8e53Gc677er+f73Pf7GrJq66w1cjIyMpU8
GZn//v59abIh990DtR7bS5uHL/F72yRhDgaeO5+tnyCtnhk10KtKwoo+Cxw1
pk6Qlu3XfOpaJmHbjPp2fuUmSPPubJMq50nYz8s91f3IBGla6n8vCVPse/Kn
84AJ0vim/xaUsBUpXh7z9SdI/1ttZpSExZd9iDnb4yrtXax3RQmL/HFvkJtw
gjT4v+XuSJhybvp2hVZX6ZXL/70krO7FgS3/NrhKezfXu6CEZbcfunq30FX6
32oDvSRs/dB/VYI+u0oP/Le9/RKWtqcgQJLiKt3+33LbJKzaP+LM3feu0rX/
e0lYbEKfhVeeuUqX/G9BCRuqmTEiIcxVOut/G5Sw7Tr33S0eu0on/K9gCZue
UjJUfNFV+r/lpBKmoVvVcN7bVWr2v5eE/bomCOnf+37E/xaUMO1a36lh+1yl
g/63QQlb86rM23W7q/R/29OUsOUN54+arnD9u5yyhM2KXn0tfYmr9K+HhLk0
6OdUTHeFh5jN/eVxSX+CKzzEbFvHutODxrnCQ8xujBIUHjVxhYeYTRLlsoih
rvAQs6YH54pvS1zhIWabm+xX/tB2hYeYbbE8kllb6wIPMZsRvfXKGp4rPMTs
yP4AV+NyF3j0rqd7cZ9ChQs8xCz9zrTv2Rku8BCzvs2Oli8zXeAhZsIdN8bq
x7nAo/f7zqcnD3vhAg8x2ym/O2Hncxd4iFnP7ouK06+6wEPM4v48nm93wwUe
YvbT/eDIrgMu8BCzhCWTV2zzcYGHmE018TRb3vv5Xw8xWxAk7FyzxgUeYqb9
rFsxwc0FHmJWc1p5mMEsF3iI2cvfied7JrjAQ8zKdkUHNDu4wEPEYppnquma
uMBDxOYMWujR19QFHiK2eO6JUZVaLvAQsclnGwP4/VzgIWK3T8/2SWhxhoeI
lS9SXusvcoGHiP0Ksrmw5ZszPERs3LUiy9gfzvAQsTFXVkpPFzrDQ8RS161P
r/7oDA8RyxT5fGunzvAQMRZ67FZqpDM8ROzt1G3CqFBneIiYYanrXcXbzvAQ
sbu8mJ3q553hIWJk7fW3Jd7O8BCxlIBb5PwxZ3iIGL9sRN62A87wELG4yrqo
i6uc4SFike1PHmSvdoaHiC2xqTOxn+kMDxE7MDdtZPZ0Z3iIWI0HJzhv4wwP
EQt/uX/8SjNneIiY1ga6xMHIGR5CdmpsZ6fKcGd4CNnBLrVIM2VneAiZz9nP
Q2PUnOEhZCo55hNbGp3gIWTDPkuf+tQ5wUPICg967x/+0wkeQnZsF1+0Kc8J
HkIWMX1mqE2uEzyEbOIZj8Cfb53gIWS6xR5a/0Y5wUPIAn8Pmnk2xAkevdfP
GDjn+3UnePSuN/dYvuCyEzyErDmx7PhvTyd4CJmdrdD57UEneAjZgVUv7O5v
cIKHkHnNbJ22cb0TPIRMdUH9lIhZTvAQsu+XfZqWTneCh5Dl5WwbMoA4wUPI
vEUvr6WZO8FDyJr47n7LjZzgIWSLzOjHVgMneAhZUmFp9HclJ3gI2RN5g1hl
bSfkr8Fe3844uu63I/LWYAfOFloGdDoiXw1W4W38dXOxI/LUYN9dTn799cUR
+Wkwfkv4Ut8PjshLg/30OvbCLd0R+Wgwi9CIvqGPHZGHBovfcOeY83NH1K/B
tj3NTz1x1RH1arC8vVcjN9xxRH0abGP7t2W2hx1Rjwab+VNH22C/I/pJnRWb
WYoMtjuif9TZ+4dPvX+5OaJf1FmBzNZnVgsc0R/qTOuBNMJjoiP6QZ197Ykg
AmdH+Kszy5ric/dHOcJbnfGMzr+5Z+IIX3XmYlmau0viCE915tU5LWBV7/u/
G1Rnxop68VtbHOClzhK6VitpdDvAR505PVdY41nuAA91liab5uP10wEeaqy5
a/pKuwQHeKgx6z0jZmhnOMBDjdWOvnJ27XMHeKixuuF7r9MXDvBQYy9J3WDb
IAd4qDHP20/O9bnoAA819tHaJnhGoAM81Ni/S7KHj9ntAA81ts3EhlvZ+/6v
hxpryU8tvOrmAA81prNI/1fUfAd4qDGV+erOrfMc4KHKgnX3/TxMHOChytSb
tu/14hzgocpYXIXnbX0HeKiyZanti+yMHeChyt6o1YvnCxzgocpihkvD7EUO
8FBlkrzTpdG/7eGhylqaRDIrGu3hocpm1tzRtSyyh4cqW+H4+1BF7/u/Hqos
oSIpkETbw6P3//0+jXz6xh4eqqx2SVGMRqg9PFTYzMYcZ4Wb9vBQYdtvlqTK
+dnDQ4XNyBvnt/SsPTxU2M5HFoMEW+zhocIczr85PWCHPTxUWPLPhFmPltnD
Q4UNGWIacG+mPTxU2OX4eTsKrO3hocL4kVduJdvbw0OFDS4oGn1mqD08VNiH
ko2xGnr28Oi9XnyZl6L8/8+HyqxpnueP4j728FBmSft6vjxqJvBQZtZDryWl
VhB4KLP5cVsf3Csm8FBmIQG5F6PSCTyU2f68oB1mHwk8lFmq9bg/z0IJPJTZ
7edcfVQkgYcy450+tXLnTQIPZabvMDul7iKBhzKzCF/mO9KPwEOZHZXITs7e
ReChzNrEQfysvQQeAjZlzezHBnMJPARsuHmew7OlBB4CNmNG0oM2jsBDwJ7E
vje0tyfwELDQz7LTtxoQeAiYvv/S/qKBBB4CljnH5ZFQh8BDwIKnPPpd2MjB
Q8ACJleuyG/n4CFgGUNvShd/5OAhYNeH0vK4JxzKFbDXY06Ua17n4KHEpDtk
I0M2cPBQYqemjUta58bBQ4mlDuzMWeTKwUOJfTq7cN+k4Rw8lJjW6l1BHWoc
PJTYAjPbZzXVdvBQYpOmLjNZkmkHDyV2+fsqRasYO3goMY+BM23PBtjBQ4nF
VI94y523g4cSK88wzm5eYQcPJfbOi7/j0Tw7eCgxGsiL0Tewg4ci2+u/Y4qL
sR08FBnvZ/mKNxVSeCiyG59KqWqdFB6KzFpVdfnmRCk8FNkP3YMecyKk8FBk
FSe1pjcdl8JDkXmfWqZY4SmFhyLL2TD1YPosKTwU2ejtjf5bJ0vhocj8E2OL
jw+XwqP3+jsn7RXw/7/9FJluc2iFR48tPBRYirqJ5/RkW3goMH6q3LRVsbbw
UGBNKQUmFVds4aHAFPx8dz/xtIWHAmt27x/tPNcWHgosQeCrPd3BFh4KbIdt
uc96fVt4KLAy0xHZDwS28FBgh9PStjrX22CDCizJyls7MM0GHgpM005DanjX
Bh4KTOtf6bW9oTbwUGBVIaozBy21gYc82+Qrz72ebgMPeXZZ9NzRYYQNPOTZ
S4dal0XjbeAhz0ZbJ4RlZVjDQ55V2EbsmllmDQ95FhGUUHT+rTU85Jk9b0DB
7LvW8JBnycHVkR4nreEhz7RMAku3LrKGhzybJD/krfEka3jIs1TZD3tG9LWG
hzzTODV26OYh1vDgM1duxYO4DCt48Jm12ddt6dVW8OCzs3ujFk8OsoIHn02a
vdZe55oVPPjMZpZU/+ZeK3jw2VaDFIVlblbw4DPTC+rdGsQKHnzmte3rw3gt
K3jwWerqiYHpXZbw4LNKs/Kb/DpLePDZyCpTrbVxlvDgsw/xi2nxY0t48Fni
LbOQdQGW8OCxaqP2XQZulvDgMZ347d+s7S3hwWOpVqHaOpMs4cFjkk8lSd87
LeDBY2ZfCqtnNFnAg8fqR5mtXp5rAQ8eC5s4/NuDRxbw6F1PPSg/8b4FPHgs
5NDoPV2bLODBY4cXDuPPnmcBDx4LnXngsnYfC3jw2MYO2UGthhbwkGOzKqs+
zPwyHh5y7MYHrVyNrPHwkGM2Zyw9h18dDw85lrdedcG98+PhIcdq1p/keU8Z
Dw85ZqvDc29xGQ8POba4x2hWhdZ4eMix6s6uoUsVx8NDjo02mX5S4fM4eMix
L22X3FXjxsFDjs3wHtJmcnYcPOSYen2tYtbhcfCQY+knrCcsmzgOHrJst/Dx
WF2HcfCQZWum7379RG0cPGTZ/W8btaw7zOEhy1bmpcRvyDSHhywzVh36T22E
OTxkWYJw08B9vubwkGXpz5cXOR03h4csOxywyPehkzk8ZJnO/vyo667m8JDt
zZMcMuWZw0OW6RsOPlfcZQYPWTY9I6uEJJvBQ4apssljbrwzg4cMO+n3+KXy
ETN4yDAy189suocZPGRYoV5KsrqNGTxk2J4ImRCBnRk8ZFhtI39H9ldTeMiw
04ZLRurKmsFDhr0b9loj/o0pPGSYY4DjtZpAU3jIsCVbmwJSDprCQ4Z5ZUX0
fbbcFB4yrG5t2a31NqbwkGF6dTw/XpcJ8u+hJsv0Y/PbTZB3Dx3yQLjcM8YE
+fbQ6KsDraPvmCDPHhr1wyh12wkT5NdDP2e+D9zGmSCvHlozVP7cUQcT5NNN
L8eSQ++/jkUe3fRZUIGVR9dY1N9Nm/2SWstujEW93XSfXsTYBS/Gor5uWvh7
zo9L0rGop5uOXxPafuDAWPRTF3009dYt309j0D9dNGf2tFzPgWPRL110Wsry
e6s2jkF/dNFJB04uuvV0DPqhi7Kg41T+szH8u+jLfXrzZnQaw7uTHhmgmzVq
hzF8O+n1+U//vCLG8OykmpaTFuysHQ2/Trr4ppZ4/4XR8OqkO8SRczIPjYZP
J71bVe5/KnEUPDrp0zFmsXvbRsGjg+YG/5noMG0UPDpoY23/h2cWjIJHBx0X
Pl5GIX8kPDromM+PykWRI+HRQS9tVd5utHgkPDromYfNSfOnjYRHOzUtmsXb
88oIHu003mjT67JZRvBop00rVUdHTDCCRzsNsuiXuvLzCHi00wPD7i8ovTMC
Hu10u8Pd6k8OI+DRRi1O3ZcvkB8Bjzb6zXfTRufzw+HRRp9qMp8k/+HwaKPX
Jl+JE2QZwqON2u3NC9NpNIRHG905LeO4+wBDeLTSkI0zLryYZAiPVvrIu2Lf
rNsG8GilBz287lxcbQCPVlr/cPvSSQMM4NFKO75nmv96qw+PVlpXtXDs1Nn6
8Gilmz0r5WcP1IdHCx0Q4jzALXwYPFqoWt/3G6MODINHC/VpNz5zmDcMHi30
2L5M7fnRQ+HRQpWeffnxr+9QeLRQK7eqm3ZaQ+HRTLMuh55+8V4PHs10RNXG
Zfvu68GjmXbtNzPYa6wHj2a6tj3A5Z6yHjya6bFTA4OvnhsCj2ZqJbQ/NHb9
EHg0UQ/Lfc2mE4bAo4kuGOK3QPnDYHg0Ud9lxrVTXw+GRxN1+9X3eKXbYHg0
0YxH90ta5w2GRxP9+jKn+sGRQfBopMXZh2uvhw6CRyPtXGujsSR4IDwaqazW
zn4HqgfCo5Fm3asI2TdyIDwa6fosp3L+G114NFLFJuXjMjd04dFIH4kl/ce1
6sCjgea+dHPWa9eBRwNt7eu7MUZbBx4N1Lryarlvpg48Gqi5Z6ZXm9kAeDTQ
lvTlqpvUdODRQO893nfYLbE/POpp4NW3jRa6A+BRT69abfd5faE/POpp8amO
vuem94dHPZ1e6ecwrKcfPOrpds1Lu7ID+8Gjnt46p3fixbZ+8Kijvr/b2/uV
asOjjk6u0bxQXagNjzq6sGlOlryzNjzq6KUzY33WqGnDo47qZh9eM/tTX3jU
0UVDR7OV/n3h8Yeu2FyufXBGX3j8oc1ba6WmCn3h8Yfua2gyXHRZCx5/aHTx
4AV6/2jB4w8dqPdaNH6rFjz+UEHrvGIN2gcef2i/hw3iuMg+yL+WXoyP9Zt1
qw/yrqUOufm7rSb0Qb61tHVrpJfZwj7Is4aWTbk0/3qFJvKrocbJnbsz32oi
rxr6INUrwZxqIp/fdFF5ZtNtN03k8Zu28i9dvDFZE/X/pvuv8G9sFmui3mpq
v/H1yWBrTdRXTY+vCr107IUE9VRTJRVjlaguCfqpiiZsVE0QrJKgf6poiuXu
D999JOiXKhqjJzuudpEE/fGLOi7xMk50l6AfflGdHRoX+6WJ4f+LRshNiAoZ
LYF3JS2hZnfenRHDt5JOvbD4H7nnYnhWUpvMJ/FVFmL4/aTbDOPr2TgxvH7S
+zcrxnzOEMHnJ72+dNDdGQpiePykRhomFddHiODxgz4ynHV5zBIRPH7QE2Fh
PutuC+Hxg87TnDxG+bwQHt+p3em0u/+YCeHxnb5qvvPlzR0NeHyng78W/rPM
XQMeFVTgcvve7Fx1eFTQ7yMu9Dm+WB0eFVR0fPa6BVZq8PhGFU6v4Q8yVYPH
N/rlcPmy0bWq8PhG81LUtQ/pqcLjK2XLtN9eqFKBx1dq47Xgh51UBR5f6U7j
GJ+Dve//epRT+W6ZGS6FyvAop5/3ru5fukUZHuW0KGLbqv7HlOFRRpdoyrwb
t0IAjzKaPeD63BWjleFRRjWG6czULRHAo5T23lo/vLoigEcp7XN5b07KIQE8
Sumk2jP8oIMCeJTSxV9jFos7lJB/Cd1RvGZwcZsS8i6mS6u9F22sUkK+xfTw
aVFZ9zAl5PmFyubs7AqPVkJ+RTToovS9ibci8iqi83fGL242VUI+n+nunHOT
/AWKyKOQyj0M7Kc3RhH1F1JzD4N9tdXyqLeAyiyY/Vw6RwH15VP3RjlzX04e
9eRTcXfVtIJaPvopj/qquQf1mc1H/+RR0zmpEwed4KFfcml6/r6Y4r489EcO
TTZP+DD7oSz6IYeea3uWu2OoHPw/0fBFYT8zwmTgnU1XDzQ8M6BCBr7ZtLnj
hIuOSY/tX88seuaG/NjOsTLwy6Rl9083f0/qsv3rlUnPrHi6YsGUbtu/Phl0
jd/HkwX8Ltu/Hhl0vWy9cfzjdtu/+X+kvza42ESc67T9m3canTZtj8MpvXbb
v/mm0nGBeqOOsnbbv3mm0CGJKlPyjdts/+aXTH9599843rLd9m9e7+l28xcd
7hmttn/zSaLrl2bfO7S21fZvHgk0oWV1W9vsFtu/9b+jquPkXriFtdj+rTee
yhwo2Pb7erPt3/ri6KfwB4s8IptRD6PH9TXe3E1swv5jqYzRPe0zvxqx32g6
RTOm8uqwRuzvFdX5M2Lu2I0N2M9LGqxZvKtsZD2u/4KuN9+QuPtwHa4XRiVR
FybJfajB+k9p8dGvBeEDarBeCD3kGN4anl6J7wfTrKMp5E1VBf7/Bp3a8KTg
IS3B54E07PGUHLvdxXh/nN7Z59VvsjTZ9vopk9jRn/rEWHcGL7P6fef/P+e+
XvqgkDQuMxrf5+RX+PpPFJdEY33ugaWb+4q4GnwezNVNTXPp21MXjf1xH5T8
Slfqd+L/n3L5rleK5i+WjUF93NKT+abrjRVjUD+XMmiP1esZqjHIhzO9Pcvf
7bsoBvlxi7zSCvx39IlBvlzUQ/cAk/39Y5A/N/HbKkefr4Ni4MNZ/d7N81k2
FNeL44YfHpVnZGYYA1/u6ce6rjkfR+L677iSDt2xRffGxqA/uHOuK/QHVplh
P0ncK5Wqx9oJFjHoL85y100j29222F8yp3PO5NT6NhKD/uRsBphlD5vuhP2m
cgrGsXf5ThNi0N+c+dGz25d0TcH+P3L/PDLf6rd0Zgx+H5zxAIeXS7PnoJ4M
LtLGU9ulaUEMfl/cSSedkzltS1FfJnf4tf29RcqrYvD75MYGlc0Ji1qDerM5
k5C3dkHSDTH4fXOxB16eWfhuK+r/xK0ePnRLlMOOGNwfuLp1IzwC3PcgjxxO
5lFY2rSrB2Nwf+HG+e45bHDsCPLJ4xpUz30K9/KKwf2Jq3H6V9HN7xTyyucG
y2Rd+7j7bAzub1yn/7qs+8cCkV8Bd82Syz354nIM7o/cPN/rHdvMg5BnIdev
bt4IgX9wDO6vnMWpCy9VJj9EvkXckW4jTqc2NAb3Z+5kddIJra4I5P2F85w+
0bEoOToG93ducJzP2Fey8ci/mHv3c6dq0vTkGDwfuNEmR5d692TAo5RLcN6+
zV0+D/WUcolp4QNXbymBTykn7tasmX2zAvWVclETKj8at/yGVxmn+uxXecCP
RtRbxk0euvShzcIu+JVxu61GtVS+5Mfi+cg9s9wkzVirFovnJ+fEF03s06QZ
i+crV9gcFbe9RzcWz1+O+L0QRp7Wj8XzmQvQfFDarTImFs9vTjPZKadh8/hY
PN+5IivfTd+kJBbPf05m+NkfV/1dYzEfcJ+NLJ7KDJkZi/mBC36q71r4YHEs
5gvuLb3idNPwn1jMH1xQ9X69Bas3x2I+4W7oXz33ZvOuWMwvXFqm37VV0sOx
mG+4XSe+Oixi/8Zi/uHmH37KNzx9NhbzEdf6pI5/V+ZSLOYnbvmg0UdHLb4V
i/mK6zfVaPv9ngexmL+4BUp5VjOrwmIxn3GVC/MH3PJ7FYv5jbNXyXCoN3gb
i/mO+3A9yGJ2WHIs5j/uev3ZDlP9rFjMh5xIb1b06OsF8PjF2Uq4JTe1yuHx
i3ubdWnumcBKePziCqRLFOx16+FRxT0qCFYmz9rgUcUJRl9YeclCjmK+5fY/
DPFwyRJQzL/cwfeK4RX2Yor5mCtZ1i48HNGPYn7mzP2WP7jdMYRivuZi9UM6
l9YMp5i/udMzlIcHa5pQzOfcq4ArcnliC4r5nduzY+e+zQ/sKOZ77lpRm99z
GSeK+Z+T072YJr02keJ8wBV9H7G0q88MivMDVy7nGGmQO5vifMHpvHql/VOw
gOL8wV1+tIsX83AJ6vnDnRhiWbowfwXF+YWb2qMkX+u9GvX94diebW5j166l
OP9wdwsUtl5avx71/uHG9AtzKTm7ieL8xBVfj9YVFGxF/XWczIYLvkk3t1Oc
vzgD7s6T/it3II86rnPMstZ/x+yiOL9xTY9fuZor70E+dVzxG5Gi25+9FOc/
zknDYszRsv3Iq55b6mJT2FJ0kOL8yIW/X105o/wQ8qvnVn7gXLz3elKcPzmZ
7AuSncePIM967rZHtGNi4FGK8yuXEDBEuCzkGPJt4MQxZoKBb49TnH+5civV
qOpiL+TdwJ1Lj6kP7/mX4vzMafDuzlkx7CTyb+BC7Y+plU3xRj81cCX0+DrD
fafg0cidUxHvMAg5DY9Gbm/jjm9ZRT7waOQW3g5P1dP0hUcjt6Fkwiq16X7w
aOTs/VdvSHA5C49G7tKqAUNSfpyFRyOn2Kd/tP8pf3g0cVs1PLb2G3MOHk3c
jPtzI5flnINHE5d/6LbLco8AeDRxjcqVvH6GgfBo4pbv3N/inRUIjybu5mtu
eujh8/Bo5jRv3pt7yvgCPJo5mT0bNmiVXIBHM3fmiU73LP+L8GjmsrSt/Oyc
L8GjmcsMP/M4r/0SPJo5z3T6S+f5ZXi0cOkVeRWqG6/Ao4W7P/iG7T39q/Bo
4ar4/wb8KLsKjxZuf5TLufSb1+DRwpms3Vi6ZPl1eLRwv0fwDHwH34BHK+fr
UClY9fUGPFq5hppW07z7N+HRynk8mzCseXwQPFq5eNmqlvQrQfBo5WwdeGv3
9gTBo5VbMqWW1vxzCx6t3MXRc+eafrgFjzaurGznbgfT2/Bo48aeXOQ+8Mpt
eLRx7ZODLybI3YFHGzd+q5G5xaY78GjjljqPPO+eewcebdw6s8mKe+yD4dHO
fbzqlOf4JBge7ZygLHNmfr+78GjnArbOjTc7cRce7VxFuMneuU134dHO7R10
Pdr2n3vwaOd23BMFp2bfg0cH92RtdISO0314dHDj9Ie/MI64D48OTqVuyHdZ
wwfw6ODGpn88d/7yA3h0cHdfP5KtVA2BRwe3PvjM/g7PEHh0cu1rNVxSm0Lg
0cnl5bU8XrTxITw6OY/wyta7ZQ/h0cm5XfLb+WTBI3h0cuIB1Ru2ZTyCRye3
51WSYc2Ex/Do5ISlx1v03z6GRxc358c4w762T+DRxb0RNPHjIp/Ao4uzPVxf
rGf6FB5d3JRFD/i2T5/Co4srvjAvUWXkM3h0cWv683b5P3gGj27u4ZcBJmsl
ofDo5nwHjP7zZVYoPLq5PJ1xt56dC4VHN9fxcEhNYVYoPLo5M+++R5ZLwuDR
zfHW7+rnOCcMHj3cbo1dQ3ecD4NHD6dZeWCOSl4YPHo4FyeH/N/az+HRw00d
8Txff/FzePRwhXM+x8dffw6PHq4ur+fM09Ln8JAhsT5e0oah4ahHhviHT9Y9
vS4cPjJkwIlKzQOPwlGfDIn40bTkZW04vGSI9bDty6ebv0C9MiRhdHC3y74X
8JMhkw8ODz0e+wL1y5Dygm+H+/Ej4ClDRpq5HRRPikAeMiS0SPfBtLMR8JUh
B+3kdL/kRiAfGZJVmrk9TjcS3jJExy/1veKaSOQlS/4ElvgefBwJf1mi9qWy
z7LGSOQnS2zXRegesX2JfpAlW4+UZnUdf4k8ZcmWe22myWkv0R+yZIfc7Lof
WlHIV5Y4N/zqmrMiCv0iSx7sbdij8jAKecuSu1K375qNUegfWfL8j8row3av
kL8seWar12Xo/Qr9JEuq8kZcGvHpFTzkyKqXVyxXD3oNDznST229m9rG1/CQ
I+ODd+p9j3wNDzliErVQoMp7Aw85cl0UfOna9DfwkCNDKzd2r7n2Bh5ypFAy
KdGj8g085MhC4ys6xeOj4SFHzn6qtbh6PBoecsQi9djBS1nR8JAjgx9WtXwZ
HAOP3u9PMf+yZWsMPOTIB/3mMy6xMfDgkZa6XNU9arHw4JHq1ujzzUti4cEj
OW063ncex8KDR9S371K43RkLDx6JPPRzXPcUCg8ecVC9f97/OoUHj+g2jlt9
tIbCg0eOn9I4nT6IwYNHxveML/eawODBI1c/Brlv3M7gwSNPd2jed7vC4MEj
s/eHKJyMZ/Dgk6+7kvSSqxk8+GTHmpwUK604ePCJ/rOFm99zcfDgk4PLjQzd
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
g4eEJBntvZ49qgwemuSedNtlvm0Z/T82oB+c
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
+EuMhPd3ZlPz9lPpGX34fmeDJtOI1cv14fmd7YgMSLSQ1odfNfsWuCGuoFcP
XtWs3wjVwcEeevCpZoJFkzP7bdWDRzU7nr6kWTp+BDy+Mf8dxzOnF4yAxzfm
8WPlPTWzEfD4xiKGDA40mDYCHl/ZF+shD4ftGQ6Pr6ymVjBs9ZXh8PjKyg5t
6XTLGQaPLyx4Dc/pVB8Ojy9MMnPn+XKTYfD4wtL2JP3a4zUMHp/ZV2H+0LyD
Q+HxmfXfPP9V+qWh8PjM8r/6nTLr1IVHFVPV//Xo+WtdeFQx5/pBt9uJLjyq
WF6FwnEDWV14VDJWEfBy/jwdeFQym6bm2OtB2vCoZLp+s4TVg7XhUcHWajyy
iLAfAo8K5lYb7VP2fjA8KtjgjoQNg34Mgkc5azcKWfAjcRA8ytmUh+umjN8w
EB7lTCn997c1CwfCo5y9ndWTOsRnAPIvYwPLdnUvMxmAvEvZXavShr0CLeRb
ynJkbkuE1msizxIW573zhltBf+T3iR1utVIK/NgfeX1i3Y3uixjXQD4fma/z
3e7vIRrIo5gNM7waMPlZP9RfzHqjLXevmdoP9X5gMqMVs4LOiFFfEfv6RmLU
p35i1FPETrEA1cyDIvRTIdPaeKKmIkqI/ilk5J54ZdRWIfqlgH022fzPz1cC
9Ec+G7dc/8aWbHX0Qz6bnDWv7vx2dfjnMYuV2v+6HVGFdy6rF13P1J2oCt9c
liQq0NmmrgzPHCbtfX1WzEQl+GUzz8QJ57doKsIrm73z0t7THakAnyx2ynKB
9dhyWXhksfiNjfMPjpdD/pmsHzd3uDRcFnm/YzdPRi0YXy6NfDPY442DR0ws
kkKe6WyW6+iBOmOlkF8a0/wpDt06SxJ5vWGzGgcWdClIIp/XLC7c+1hYT4/d
nzxeMbfjmkZv3bvt/tSfwjR0Vku+2NVj96feZOY0ftU+7xmddn/qe8k8r/SM
qXHttPtTD2eOC1VO/7jdZvdn/4ms3XZiiv7bNrs/+41nhts1358+22L3Z3/P
2Labl4wWz2q2+7OfJ2z+2c4rTQ3N+P6H7MCImY6rD/3G98Wy7u++DYdLG7B+
DOs35d24wGe1WO82639hTOOJzz/x+essN9FurWFaDf7+Itt+ZYOqdFgV3j/B
/JbpB4WGFuF6N9ssqbTp9rksuwthpomGeRoJM58c9n6Sc/j/3yc7X6bpHUrJ
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

       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
vjSfadC9NTwR9XGl+R+6RkeNxf2x3KvmRpf+30ci8uFGL1apGSWjh/ESuLsF
tWM0LAwTkS834Ir0xmJfM4yfxIUUKxW9PsUlwocbt2bp7rgrtvi+ZG7hpO6O
IGOnRPhy1ZarRkTlu+P707i6j28MC2ZOT0R/cLGrLt4sDvLBfF5zG1cLRow8
6JuI/uI23SsJDMpZiPm95VzLrg9+ELokEf3JzYpPnauhshLzzeS22Rwp551b
m4j+5ibYdVjb3QjA/D9wop2svDpucyJ+H5yxpmqD45Mg1JPNJa8ZHHvy455E
/L64cXs+m5ReCEZ9OdxNF/XUo1qHEvH75CIjMnWuxB1DvXncBOd9X1XTTybi
9809sfW797zlLOrP5+6NsDtkMPhyIp4P3GGLTidt4xvIo4AbJ5z14/bg24l4
vnCKnff26X2+j3yKuLNLp8+TzHyUiOcT9/uddrHskRjkVcwV7m68GaMUn4jn
Gxe5d9WKQ1cTkV8Jd99o/6P5timJeD5yn4MuxM4KfYU8SznBx6W32z69S8Tz
ldv764bNFYcc5FvOFfdVjr29oSARz2fukyIv9MbDUuRdwfm2HZCxv1WdiOc7
Zz8qq8Iy+zPyr+QWLTmhdHXkt0SsD5zeG8nm84GN8KjmAlyHzZua04J6qrk1
b5VE7wK74FPN5a+KoCu/8JKwPnE7ArPmiGJkkrB+cZMdXsfNlVdOwvrG5Yyp
8N1rKkzC+sft3aqdUFQ0KAnrI7cnjFcfuGpkEtZPbnOfydRBxZpJWF+54W8E
7jrlk5Kw/nK6Bl7rNZKnJmF95rSyf57cttYsCes3Z65b4bpsnnUS1ndu91+v
upSrHZOw/nMhvAnF3cFeSdgfcMrNy8aeGjg3CfsH7oCHTYXkBf8k7C84F6JV
o/9hRRL2H9yadX6npx7bkIT9CXfi4gOfNb+2JmH/wu3r0Wp6kbw3Cfsbri7k
+N9ePoeSsP/hFqd8N5XXOJmE/RG3qyVgmlXRhSTsnzhuttmt0LU3k7C/4pKN
f2xbbxmRhP0XVxgaFuN6/UkS9mdcpMm65q9+z+HR/3n3dFubiynwqOdqT7fq
TzXKgEc9N8xBTSo2IBce9dyemJurmrtL4PGNu6c/ZYjRjI/w+MZVb/9l6/yl
Hh7fuClzOx2zZzbBo4Frf/0156+eTng0cHLpg2QHrJOk2N9yc1zP5NqOVqTY
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
9zDMgYcSycoe5eDgkQOP/vF2Xah3XZEDDyUyOXKekv++HHgoETnNnYa7LufA
Q5lcXXvJ60ZcDjyUyYLtETq52TnwUCZ79VrdBjbkwEOZPLA8F7FWJhceymTR
BrY5fWQuPJTJm9ZTeQPMc+GhTG67t47bPDMXHsrk4/ExG7+vzYWHMinzSbNd
fygXHspkptSiMx23cuGhTFYWT1U/mpQLD2XyOPxWu3ZJLjyUSYyUvEJecy48
VMh78/igA6p58FAh+g92SVtr58FDhUx2vDVLwi4PHirE/bB+5av5efBQITev
Oky8ty0PHipEONDs58nTefDoH3/R4qwtj/LgoUI2RpQeWpmRBw8VEjLv67m1
X/LgoUJil54P28HLh4cKKX/2SePo0Hx4qJBdm0dcvWucDw9VsvxYTl2Wdz48
VMn08r25Emvy4aFKNGadumR2MB8eqmSZe2pd0K18eKiS0PX81ldJ+fBQJTyO
uzG4NB8equTn9Zv7Alvz4aFKRva1Ty3hF8BDlbx3UNL30CmAhypRu5hXnedY
AA9V4rV7vJn/4gJ4qJKYuaW5v3YVwEOV/HNuvH/gxQJ4/Ptfpf/kysQVwEON
NKrZSibkFMBDjXQdrsvc+KMAHmrkrznNbJRCITzUyPXFcpVFmoXwUCOZusIn
EaQQHmpEewkzDfErhIcaKbjXUeOztRAeauTnneayqacL4aFGEk4lyWk9LoSH
Gomb37F2ZGYhPNTI5Wnz0tS/FsKDT0pGFp8WSRehHj4Z88UiQWtUEXz4ZFUr
t59MK0J9fBKq03hw9pwiePHJ6yCBwtbAItTLJxndQ7rvnyiCH5+E3/GVrI8s
Qv18cpf+2Db8bRE8+WTR4MbGeV+KkAeftN9Ie/dYohi+fLJ8/EczpRHFyIdP
BvofOrvYvBjefBLj+ORIuk8x8uqfT1uXut7GYvjzyTOVFXIRx4uRH5/clz+w
QDuyGP3AJ1s2hfTcf1OMPPlE02XfAYMvxegPPml6lm/6RqIE+fLJTtM5o5eM
KEG/8MnVC+sWS1uUIG8+2WjfOuPh7BL0D58YZqpPmB9Ygvz55OzDM3kDwkrQ
T3zi3zC9NP9hCTwEhNceU3gpowQeApK5w3v/33Ul8BCQJwbjTO2lS+EhIF9L
8mo1R5fCQ0BmazsfV7AqhYeAtA0QPfv8Vyk8BCR+zJcnr7eUwkNA3uoPUnh/
uhQeAqJ2vuFSSXQpPPo/b+onlfOhFB4C8ipiy6PshlJ4CEh2nLdPo3wZPPrH
85TLGDiuDB4CslBLOWaibRk8BETzTEmqw8IyeAhI7Oegd7t3lsFDQLhu45X0
Yhk8BGTQtDXTfz0rg4eA6NXtHT++oAweAiLft3jBtqYyeAhIX5NzbY5aOTwE
JK/qvoKmbjk8BORM3ZaPO13K4SEg4z3zMr4uL4eHgJyPnNEwN6QcHkLy5Jdh
9aub5fAQkm9rjb0sWDk8hOR5uCIvqaIcHkKiKl311KG7HB5Ckm5lVPNeowIe
QuK4e4GXn3EFPISksveZcduMCngISdJtZYvTGyrgISTP3oV6Gx+vgIeQzK+a
ebIqsgIeQlIT5zzzWEYFPIQkYpr6PLuvFfAQkivcuY4emUp4CEnW8+AZdGwl
PITk8sUcw2DrSngIyQX3Vi3vBZXwEJKwTcYJI3dWwkNI2o/PetR1sRIeQhLV
+VxYEV8JDyFpTemsf15YCQ8hEc5QuHW1pRIeQsKXf3UyTFgFDyF5GfEm8ohe
FTyExD5Qefkujyp49Nf/fuTZLX9XwUNEJm9319p7uAoeIqKtcOJZ2L0qeIiI
rJTf0QuvquAhIosttCvufq6Ch4jcaip6uFiiGh4i8tWhl27mV8NDRMJ1y7VD
RlbDQ0RW7UouODu5Gh4iMlp1z5Boy2p4iMjTGwYHP7hVw0NE2sofLqzzrYaH
iJhk7N8stboaHiKy5sa8ivHbq+EhIjm8EmfPQ9XwEJEUdamAgPPV8BCRLQed
Zly4Ww0PEflZ78R7HVcNDxHR+ZFa15ZeDQ8RyXTdP027oBoeIkLyw3TnfK6G
h4jsVD3hfqi5Gh4i0p12wDtdsgYeIuI6YPxIaWENPPqv101QmDa6Bh4iYsRX
atysVwMPdaIxcpvJS66G/g/xECvF
       "]]}}, {{}, {}}}},
  PlotTheme -> "Scientific",
  PlotLegends -> {"Gate=0", "Gate=1", "Gate=5"},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Anode Voltage[V]\"", TraditionalForm], 
    FormBox["\"Cathode current[A]\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{315.83333333333474`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{-5, 1}, {0, 
      Rational[3, 10000000000000]}}, {{-5, 1}, {0, 3.*^-13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.813029228812127*^9, 3.8130293012142677`*^9}, 
   3.8130293350742044`*^9, {3.813029378674699*^9, 3.813029398233817*^9}, 
   3.8130294347349052`*^9, 3.813029466871743*^9, {3.813029504686906*^9, 
   3.813029539945923*^9}, {3.813029583731427*^9, 3.81302964112471*^9}, 
   3.8130335333476486`*^9, 3.8200988675474415`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"7311d780-2bfe-4353-bc72-19eb594d6b9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Gray", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 0 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 1 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate05", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 5 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 0 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 1 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate05", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 5 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "13"}]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Diode Reverse Voltage[V]\>\"", ",", 
      "\"\<Diode Reverse current[A]\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*StyleBox[\"I\",FontSlant->\"Italic\"]\)-\!\(\*StyleBox[\"V\",\
FontSlant->\"Italic\"]\) Charateristics of SOI-Dn & Dp device model with \
SILVACO TCAD\>\""}]}], "]"}]], "Code",
 CellChangeTimes->{{3.8130301814116125`*^9, 3.8130301837907486`*^9}, {
  3.813030289160775*^9, 3.813030318479452*^9}, {3.8130305771554203`*^9, 
  3.8130307740850363`*^9}, {3.813030885104821*^9, 3.8130309109366693`*^9}, {
  3.8130309602328167`*^9, 3.8130309690843053`*^9}, {3.8130323324583545`*^9, 
  3.8130324216859407`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d64dbf4b-15a5-4822-8a62-6e82e1b95585"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1: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
i3ubdWnumcBKePziCqRLFOx16+FRxT0qCFYmz9rgUcUJRl9YeclCjmK+5fY/
DPFwyRJQzL/cwfeK4RX2Yor5mCtZ1i48HNGPYn7mzP2WP7jdMYRivuZi9UM6
l9YMp5i/udMzlIcHa5pQzOfcq4ArcnliC4r5nduzY+e+zQ/sKOZ77lpRm99z
GSeK+Z+T072YJr02keJ8wBV9H7G0q88MivMDVy7nGGmQO5vifMHpvHql/VOw
gOL8wV1+tIsX83AJ6vnDnRhiWbowfwXF+YWb2qMkX+u9GvX94diebW5j166l
OP9wdwsUtl5avx71/uHG9AtzKTm7ieL8xBVfj9YVFGxF/XWczIYLvkk3t1Oc
vzgD7s6T/it3II86rnPMstZ/x+yiOL9xTY9fuZor70E+dVzxG5Gi25+9FOc/
zknDYszRsv3Iq55b6mJT2FJ0kOL8yIW/X105o/wQ8qvnVn7gXLz3elKcPzmZ
7AuSncePIM967rZHtGNi4FGK8yuXEDBEuCzkGPJt4MQxZoKBb49TnH+5civV
qOpiL+TdwJ1Lj6kP7/mX4vzMafDuzlkx7CTyb+BC7Y+plU3xRj81cCX0+DrD
fafg0cidUxHvMAg5DY9Gbm/jjm9ZRT7waOQW3g5P1dP0hUcjt6Fkwiq16X7w
aOTs/VdvSHA5C49G7tKqAUNSfpyFRyOn2Kd/tP8pf3g0cVs1PLb2G3MOHk3c
jPtzI5flnINHE5d/6LbLco8AeDRxjcqVvH6GgfBo4pbv3N/inRUIjybu5mtu
eujh8/Bo5jRv3pt7yvgCPJo5mT0bNmiVXIBHM3fmiU73LP+L8GjmsrSt/Oyc
L8GjmcsMP/M4r/0SPJo5z3T6S+f5ZXi0cOkVeRWqG6/Ao4W7P/iG7T39q/Bo
4ar4/wb8KLsKjxZuf5TLufSb1+DRwpms3Vi6ZPl1eLRwv0fwDHwH34BHK+fr
UClY9fUGPFq5hppW07z7N+HRynk8mzCseXwQPFq5eNmqlvQrQfBo5WwdeGv3
9gTBo5VbMqWW1vxzCx6t3MXRc+eafrgFjzaurGznbgfT2/Bo48aeXOQ+8Mpt
eLRx7ZODLybI3YFHGzd+q5G5xaY78GjjljqPPO+eewcebdw6s8mKe+yD4dHO
fbzqlOf4JBge7ZygLHNmfr+78GjnArbOjTc7cRce7VxFuMneuU134dHO7R10
Pdr2n3vwaOd23BMFp2bfg0cH92RtdISO0314dHDj9Ie/MI64D48OTqVuyHdZ
wwfw6ODGpn88d/7yA3h0cHdfP5KtVA2BRwe3PvjM/g7PEHh0cu1rNVxSm0Lg
0cnl5bU8XrTxITw6OY/wyta7ZQ/h0cm5XfLb+WTBI3h0cuIB1Ru2ZTyCRye3
51WSYc2Ex/Do5ISlx1v03z6GRxc358c4w762T+DRxb0RNPHjIp/Ao4uzPVxf
rGf6FB5d3JRFD/i2T5/Co4srvjAvUWXkM3h0cWv683b5P3gGj27u4ZcBJmsl
ofDo5nwHjP7zZVYoPLq5PJ1xt56dC4VHN9fxcEhNYVYoPLo5M+++R5ZLwuDR
zfHW7+rnOCcMHj3cbo1dQ3ecD4NHD6dZeWCOSl4YPHo4FyeH/N/az+HRw00d
8Txff/FzePRwhXM+x8dffw6PHq4ur+fM09Ln8JAhsT5e0oah4ahHhviHT9Y9
vS4cPjJkwIlKzQOPwlGfDIn40bTkZW04vGSI9bDty6ebv0C9MiRhdHC3y74X
8JMhkw8ODz0e+wL1y5Dygm+H+/Ej4ClDRpq5HRRPikAeMiS0SPfBtLMR8JUh
B+3kdL/kRiAfGZJVmrk9TjcS3jJExy/1veKaSOQlS/4ElvgefBwJf1mi9qWy
z7LGSOQnS2zXRegesX2JfpAlW4+UZnUdf4k8ZcmWe22myWkv0R+yZIfc7Lof
WlHIV5Y4N/zqmrMiCv0iSx7sbdij8jAKecuSu1K375qNUegfWfL8j8row3av
kL8seWar12Xo/Qr9JEuq8kZcGvHpFTzkyKqXVyxXD3oNDznST229m9rG1/CQ
I+ODd+p9j3wNDzliErVQoMp7Aw85cl0UfOna9DfwkCNDKzd2r7n2Bh5ypFAy
KdGj8g085MhC4ys6xeOj4SFHzn6qtbh6PBoecsQi9djBS1nR8JAjgx9WtXwZ
HAOP3u9PMf+yZWsMPOTIB/3mMy6xMfDgkZa6XNU9arHw4JHq1ujzzUti4cEj
OW063ncex8KDR9S371K43RkLDx6JPPRzXPcUCg8ecVC9f97/OoUHj+g2jlt9
tIbCg0eOn9I4nT6IwYNHxveML/eawODBI1c/Brlv3M7gwSNPd2jed7vC4MEj
s/eHKJyMZ/Dgk6+7kvSSqxk8+GTHmpwUK604ePCJ/rOFm99zcfDgk4PLjQzd
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
g4eEJBntvZ49qgwemuSedNtlvm0Z/T82oB+c
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
+EuMhPd3ZlPz9lPpGX34fmeDJtOI1cv14fmd7YgMSLSQ1odfNfsWuCGuoFcP
XtWs3wjVwcEeevCpZoJFkzP7bdWDRzU7nr6kWTp+BDy+Mf8dxzOnF4yAxzfm
8WPlPTWzEfD4xiKGDA40mDYCHl/ZF+shD4ftGQ6Pr6ymVjBs9ZXh8PjKyg5t
6XTLGQaPLyx4Dc/pVB8Ojy9MMnPn+XKTYfD4wtL2JP3a4zUMHp/ZV2H+0LyD
Q+HxmfXfPP9V+qWh8PjM8r/6nTLr1IVHFVPV//Xo+WtdeFQx5/pBt9uJLjyq
WF6FwnEDWV14VDJWEfBy/jwdeFQym6bm2OtB2vCoZLp+s4TVg7XhUcHWajyy
iLAfAo8K5lYb7VP2fjA8KtjgjoQNg34Mgkc5azcKWfAjcRA8ytmUh+umjN8w
EB7lTCn997c1CwfCo5y9ndWTOsRnAPIvYwPLdnUvMxmAvEvZXavShr0CLeRb
ynJkbkuE1msizxIW573zhltBf+T3iR1utVIK/NgfeX1i3Y3uixjXQD4fma/z
3e7vIRrIo5gNM7waMPlZP9RfzHqjLXevmdoP9X5gMqMVs4LOiFFfEfv6RmLU
p35i1FPETrEA1cyDIvRTIdPaeKKmIkqI/ilk5J54ZdRWIfqlgH022fzPz1cC
9Ec+G7dc/8aWbHX0Qz6bnDWv7vx2dfjnMYuV2v+6HVGFdy6rF13P1J2oCt9c
liQq0NmmrgzPHCbtfX1WzEQl+GUzz8QJ57doKsIrm73z0t7THakAnyx2ynKB
9dhyWXhksfiNjfMPjpdD/pmsHzd3uDRcFnm/YzdPRi0YXy6NfDPY442DR0ws
kkKe6WyW6+iBOmOlkF8a0/wpDt06SxJ5vWGzGgcWdClIIp/XLC7c+1hYT4/d
nzxeMbfjmkZv3bvt/tSfwjR0Vku+2NVj96feZOY0ftU+7xmddn/qe8k8r/SM
qXHttPtTD2eOC1VO/7jdZvdn/4ms3XZiiv7bNrs/+41nhts1358+22L3Z3/P
2Labl4wWz2q2+7OfJ2z+2c4rTQ3N+P6H7MCImY6rD/3G98Wy7u++DYdLG7B+
DOs35d24wGe1WO82639hTOOJzz/x+essN9FurWFaDf7+Itt+ZYOqdFgV3j/B
/JbpB4WGFuF6N9ssqbTp9rksuwthpomGeRoJM58c9n6Sc/j/3yc7X6bpHUrJ
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

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
vjSfadC9NTwR9XGl+R+6RkeNxf2x3KvmRpf+30ci8uFGL1apGSWjh/ESuLsF
tWM0LAwTkS834Ir0xmJfM4yfxIUUKxW9PsUlwocbt2bp7rgrtvi+ZG7hpO6O
IGOnRPhy1ZarRkTlu+P707i6j28MC2ZOT0R/cLGrLt4sDvLBfF5zG1cLRow8
6JuI/uI23SsJDMpZiPm95VzLrg9+ELokEf3JzYpPnauhshLzzeS22Rwp551b
m4j+5ibYdVjb3QjA/D9wop2svDpucyJ+H5yxpmqD45Mg1JPNJa8ZHHvy455E
/L64cXs+m5ReCEZ9OdxNF/XUo1qHEvH75CIjMnWuxB1DvXncBOd9X1XTTybi
9809sfW797zlLOrP5+6NsDtkMPhyIp4P3GGLTidt4xvIo4AbJ5z14/bg24l4
vnCKnff26X2+j3yKuLNLp8+TzHyUiOcT9/uddrHskRjkVcwV7m68GaMUn4jn
Gxe5d9WKQ1cTkV8Jd99o/6P5timJeD5yn4MuxM4KfYU8SznBx6W32z69S8Tz
ldv764bNFYcc5FvOFfdVjr29oSARz2fukyIv9MbDUuRdwfm2HZCxv1WdiOc7
Zz8qq8Iy+zPyr+QWLTmhdHXkt0SsD5zeG8nm84GN8KjmAlyHzZua04J6qrk1
b5VE7wK74FPN5a+KoCu/8JKwPnE7ArPmiGJkkrB+cZMdXsfNlVdOwvrG5Yyp
8N1rKkzC+sft3aqdUFQ0KAnrI7cnjFcfuGpkEtZPbnOfydRBxZpJWF+54W8E
7jrlk5Kw/nK6Bl7rNZKnJmF95rSyf57cttYsCes3Z65b4bpsnnUS1ndu91+v
upSrHZOw/nMhvAnF3cFeSdgfcMrNy8aeGjg3CfsH7oCHTYXkBf8k7C84F6JV
o/9hRRL2H9yadX6npx7bkIT9CXfi4gOfNb+2JmH/wu3r0Wp6kbw3Cfsbri7k
+N9ePoeSsP/hFqd8N5XXOJmE/RG3qyVgmlXRhSTsnzhuttmt0LU3k7C/4pKN
f2xbbxmRhP0XVxgaFuN6/UkS9mdcpMm65q9+z+HR/3n3dFubiynwqOdqT7fq
TzXKgEc9N8xBTSo2IBce9dyemJurmrtL4PGNu6c/ZYjRjI/w+MZVb/9l6/yl
Hh7fuClzOx2zZzbBo4Frf/0156+eTng0cHLpg2QHrJOk2N9yc1zP5NqOVqTY
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
9zDMgYcSycoe5eDgkQOP/vF2Xah3XZEDDyUyOXKekv++HHgoETnNnYa7LufA
Q5lcXXvJ60ZcDjyUyYLtETq52TnwUCZ79VrdBjbkwEOZPLA8F7FWJhceymTR
BrY5fWQuPJTJm9ZTeQPMc+GhTG67t47bPDMXHsrk4/ExG7+vzYWHMinzSbNd
fygXHspkptSiMx23cuGhTFYWT1U/mpQLD2XyOPxWu3ZJLjyUSYyUvEJecy48
VMh78/igA6p58FAh+g92SVtr58FDhUx2vDVLwi4PHirE/bB+5av5efBQITev
Oky8ty0PHipEONDs58nTefDoH3/R4qwtj/LgoUI2RpQeWpmRBw8VEjLv67m1
X/LgoUJil54P28HLh4cKKX/2SePo0Hx4qJBdm0dcvWucDw9VsvxYTl2Wdz48
VMn08r25Emvy4aFKNGadumR2MB8eqmSZe2pd0K18eKiS0PX81ldJ+fBQJTyO
uzG4NB8equTn9Zv7Alvz4aFKRva1Ty3hF8BDlbx3UNL30CmAhypRu5hXnedY
AA9V4rV7vJn/4gJ4qJKYuaW5v3YVwEOV/HNuvH/gxQJ4/Ptfpf/kysQVwEON
NKrZSibkFMBDjXQdrsvc+KMAHmrkrznNbJRCITzUyPXFcpVFmoXwUCOZusIn
EaQQHmpEewkzDfErhIcaKbjXUeOztRAeauTnneayqacL4aFGEk4lyWk9LoSH
Gomb37F2ZGYhPNTI5Wnz0tS/FsKDT0pGFp8WSRehHj4Z88UiQWtUEXz4ZFUr
t59MK0J9fBKq03hw9pwiePHJ6yCBwtbAItTLJxndQ7rvnyiCH5+E3/GVrI8s
Qv18cpf+2Db8bRE8+WTR4MbGeV+KkAeftN9Ie/dYohi+fLJ8/EczpRHFyIdP
BvofOrvYvBjefBLj+ORIuk8x8uqfT1uXut7GYvjzyTOVFXIRx4uRH5/clz+w
QDuyGP3AJ1s2hfTcf1OMPPlE02XfAYMvxegPPml6lm/6RqIE+fLJTtM5o5eM
KEG/8MnVC+sWS1uUIG8+2WjfOuPh7BL0D58YZqpPmB9Ygvz55OzDM3kDwkrQ
T3zi3zC9NP9hCTwEhNceU3gpowQeApK5w3v/33Ul8BCQJwbjTO2lS+EhIF9L
8mo1R5fCQ0BmazsfV7AqhYeAtA0QPfv8Vyk8BCR+zJcnr7eUwkNA3uoPUnh/
uhQeAqJ2vuFSSXQpPPo/b+onlfOhFB4C8ipiy6PshlJ4CEh2nLdPo3wZPPrH
85TLGDiuDB4CslBLOWaibRk8BETzTEmqw8IyeAhI7Oegd7t3lsFDQLhu45X0
Yhk8BGTQtDXTfz0rg4eA6NXtHT++oAweAiLft3jBtqYyeAhIX5NzbY5aOTwE
JK/qvoKmbjk8BORM3ZaPO13K4SEg4z3zMr4uL4eHgJyPnNEwN6QcHkLy5Jdh
9aub5fAQkm9rjb0sWDk8hOR5uCIvqaIcHkKiKl311KG7HB5Ckm5lVPNeowIe
QuK4e4GXn3EFPISksveZcduMCngISdJtZYvTGyrgISTP3oV6Gx+vgIeQzK+a
ebIqsgIeQlIT5zzzWEYFPIQkYpr6PLuvFfAQkivcuY4emUp4CEnW8+AZdGwl
PITk8sUcw2DrSngIyQX3Vi3vBZXwEJKwTcYJI3dWwkNI2o/PetR1sRIeQhLV
+VxYEV8JDyFpTemsf15YCQ8hEc5QuHW1pRIeQsKXf3UyTFgFDyF5GfEm8ohe
FTyExD5Qefkujyp49Nf/fuTZLX9XwUNEJm9319p7uAoeIqKtcOJZ2L0qeIiI
rJTf0QuvquAhIosttCvufq6Ch4jcaip6uFiiGh4i8tWhl27mV8NDRMJ1y7VD
RlbDQ0RW7UouODu5Gh4iMlp1z5Boy2p4iMjTGwYHP7hVw0NE2sofLqzzrYaH
iJhk7N8stboaHiKy5sa8ivHbq+EhIjm8EmfPQ9XwEJEUdamAgPPV8BCRLQed
Zly4Ww0PEflZ78R7HVcNDxHR+ZFa15ZeDQ8RyXTdP027oBoeIkLyw3TnfK6G
h4jsVD3hfqi5Gh4i0p12wDtdsgYeIuI6YPxIaWENPPqv101QmDa6Bh4iYsRX
atysVwMPdaIxcpvJS66G/g/xECvF
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
crP6pCyA/w963NvSsWUsH97VtNb5alTlcz58q+nJ0cvf3v6jBs9quqjj9Jv2
GjX4VVF/v0kfD5qqwauK+vU8lPaYrwafKhp07o2bsb8qPKqoXYtW9fwPqvD4
ToeNKZ5oZKkCj+90ycPKKLeRqvD4Tm+/l/XMf64Mj280tqmkKKZAGR7fqE3B
fO/ipcrw+EY9rL3uv/xHGR5f6dzxN0NPeyvB4yud3aFt77tSCR5f6cJF5RVR
vdd9Hl9o6LET3XcaFOHxhSqWSw73D1SExxdaUJAlueSsAjwqqZ1ksnxoniI8
KmnP2jPJOu4K8Kikg9rvuVyTVYTHZ5ov23Or85Q8PD5TvR7FK/deKMDjM23r
8n9IZ8nDo4IG6o4yOKygAI8Kuq6mYKxdmhw8Kmhe0JfJe4vl4VFOdZ+HWsl4
ycGjnB6+OWfwxjny8CinfM1hL6f4ycKjnAauDMpQDZND/mU0x9Rl+1tbWeRd
Sn03esx3WSKHfEvpubPNG3X8ZZBnCe3aap3fNFoW+RXT2dKakQE2MsirmA5w
/W477oAM8imiml67bfZOkkYehVSjijveIJZG/YW0NXF16ccuKdRbQMsdOcuR
l6VQXz5d3+3YXf6Mh3ryad31HRPYJh766RMdMuyRnf5+HvrnE037+CNIO18C
/fKRTvW1az25VhL9kUeH/LN+UcsqCfRDHi2cPL9i6g4J+OfSsrgTQ4odu+37
lsuhm5Zzg5Oe99j3+ebQrXKL1edf77Tv88ymY/TVxuhoddn3+WXRnqJ/Kr/H
dtr3eWVRTVf/R4bkj32fTya1/hyx5KryH/s+j0zqOi54+datHfZ9+WdQ2zM2
3qOr2+378k6nQw0+JxZvbLfvy/c9TWp+YuC9rc2+L880+lGP2M6f0Wbfl18q
tbuhtW3h91b7vrxS6MbufSVyF1rt+/JJpratJenKs1rt+/JIpIYtQ5q4mmb7
vvoT6Lzqrx7Kz5tRbzx93JUS1fi1GfXF0oBH79fH7GlCPYyWJsQuWR/chP3H
0N/71slt+7cR+42ivCfdWnMXNWJ/kXRXXYurN+839hNOT59XGDnDuwHfH0Zl
58S/HLriF77vJT1sc6ZZZVkd1n9G5RxSFNLH1GC9R9QinJe+ovwb/j+Qpite
Mc6Ir8Tnb9It+rcTqypK8P4FKvruddOvKh/Xh2j1Mmu27BOzv3HcJmZQrka0
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
zqzI0kEV8FAn21fe36PtUEH/Byas8rY=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF2HVUVN/XBnC6Y4JQSjptxUDwHhU7MLAxUTFBxC7sxAIFAxNbVBADEDiH
MhCQ7hYUJKQ7Xr4/HtY7/7BmzcyZs5/Pnnv3QW+9y8KNYiIiIhXiIiL//e17
qDDv+f7aauH6Ns2mDleimoSMb9epXLbAwqZqQbDO6UohOzJk3xnPQnOb4oMq
b6YXC9mna4eGGq+3sMn022kjlylkjbtDAq2WWNgkxP/3ELL0zhih22ALm+im
/xYUsqzNF/R32FjY/LfagmAhS+1yzttVam7Tu1jvikJ2vL3Iw0XOwubxf8v5
CdnmFfsUfMUsbG7f+u8hZJeG5439ZWRh07u53gWF7NHrZcmKReY2/62mc1rI
Jr3Kb18raWFz6L/tHRSyKYMf7pvau1/X/5bbKWSfXZeLXqg2t9n0v4eQJVv8
Kqn5bG7j8L8FhUxtWE7JjHxzm4X/26CQbTSZrmnJzG1m/K9gIRudOZyX1Pv+
/y1nI2Qee6wtL/mZ24z630PI7rZtcIyKNrcx+9+CQuajlzM18aG5zaD/bVDI
nluU/7p8y9zmf9tTEbJRQbfWmnw071tOTsi+VL1/8eyMuU2fh5AdnO7zx+Cp
OTwEbJro6lGebubwELAJi5n+gj39HgIWPaVkods6c3gIWIzTATEtJ3N4CFjg
xcKtmdPM4SFgQ0zX3LC4aw4PAStwd3MVGdbvIWApwa7cX1tzeAjYiOqsaaHW
5vDofb3p6FnD5ebwELALCs/LV3abwUPA6kfab2qabQ4PAQszT4m6W2YGDwET
n3bD8/yqfg8BCx0U+OpMjRk8BMw/Mdg5mNfvIWA163ZZuuaawaN3/efNP6KG
9nsIWEPWspUnfpnBQ8DOpoV5fftjBg8BO7kqY8enQjN4CFg8b2bgh0wzeAjY
arUL5OdrM3j05vepXS2/9/v6PARMJGCMTN5NM3jw2RnjbzOrY8zgwWdLjg1d
HXbXDB589qBd/pTJVzN48Nkx/vDSiMtm8OCzq6Pfa/BvmMGDz7Zuf7zT9rwZ
PPhsrYwltfc2gwefBV+Km33MxQwefPbH8EdT/XIzePDZoDc8tWG3zeDBZ0Mf
LCxdNaHfg89GiMwVTurdX58Hnw2f+ppXqdHvwWc2Lvm508+awaN3/QmfqnRF
+j34rDIrwnHiXjN48FnDH/uudd2m8OAztyVt1+giM3jwWd1943u8BlN48Blf
XDuxelG/B5/ZmtZev19lCg8+S5xuP6TMpt+Dz7Lebf9hW2IKDz5TiP0R66LR
79H7/fYxaSu/msKDxyoE3TOTO03hwWP2Sk4nPxWYwoPHakatu6LWu16fB4/d
HnFERshM4cFjh0f5tdMIU3jwmExhpbFosSk8eOxgSrdY/mNTePBYwEa9g1Uf
TeHBY9balmdsz5nCg8d2z2+Jff/EFB48pvpoz9Cdp03hwWNrPnpsWeBjCg8e
s5pWY3r9oik8eCzWQ2PU7Hmm8OCxEzXc4kMepvDgsR8mN2UkHUzhwWPHBrds
/LCs34PHNmk+/UUmm8KDxwxIRPiY7f0ePPbae0jKKwNTePDYBD+N5p9r+j14
7FnmgLkzeabw4LEV545uu7aw34PHEu6btqhqmcKDx8SabYwrB/bnr8xe8evN
dSX681Zm83+dn84k+/NVZnMTpg/0VO/PU5lJfex0m1tmgvyU2a6CYZVvf5sg
L2V2TpDmcD7fBPkos08aYTJ3M0yQhzJzGumZ41xugvqV2T2bqeRKqAnqVWY2
OUa7emJNUJ8ys5uaJe2XaYJ6lNniaCcNw2sm6CclJvHMceSV5yboHyUWEW+U
fuqCCfpFiXXOVb350d8E/aHEnisZft+/1wT9oMRyaMEPdt0E/kos7eW0TZ6r
TeCtxNYfNJ58+IwJfJXYaYclc3OWmcBTiT20U7ZVczSBnxJbOall8JNZJvBS
Yvxn7cfHrTOBjxK7wxzmuUmYwEOJdZS37hk81wQeiuyMY8/4WXIm8FBkEVW2
K870rtfnociUisdv/vHHGB6KzET5wOv9C/s9FJlKhbGqe4QxPBTZZRbb/X12
v4ci+2C+3u3wC2N4KDK3994unSP7PRTZwqCaHtHHxvBQZF8ub9MKkO33UGSJ
E4KaaqkxPBRZXYCb2eLvxvBQYMq7yL8dH43hocAuSRp3uvW+3uehwNZtvDg6
6I4xPBTYUg1PzcWfjOGhwDInHn3bddMYHgos/sBWKQsPY3goMC9fi2dnrhnD
Q4FJqx40r9ltDA8FNrna27vS1RgeCuyg5VLbacuM4aHAxD7J3nU+ZAwPBZYm
pjk82toYHgosee6Rtn2bjeEhz7YKUhUbFxjDQ57tkY/cOWS5MTzkWeD8ue8N
B/V7yLNb+a9dE8YYw0OezTjlO6l7fL+HPHN93/ZTm28MD3m2W5cWqOv3e8gz
qRU5JjfrjeAhzyalx31ZrtnvIc8qRk7f11RtBA95Fum/SUau0Qge8uzO5dQj
rrFG8JBjdy+ZfXBV7PeQYx93jPsZFWEEDzm2syu5xTnNCB5yTDbKRKEy3Age
cmxc4K1BO54bwUOOpWR4WcS/MoKHHPN4K3n4+ykjeMixExsUHLc9MIKHHJvZ
aJ3LnI3gIcd6vOfuv3zLCB5yTPGRZOG8mUbwkGOT1y83WPzYCB5y7ELAW9vv
1kbwkGXn6gvcX84zgocsC165zeDhOiN4yLJdo/Pd7lkZwUOWBepbK8UZGcFD
lvkb7dw/ZJoRPGTZKFnXa+MmGMFDlsUGDyVnagzhIctKQ4/tP2bZ7yHLJnjq
fU6qNISHLMtTKbn4dni/hyw7oHxr0cpvhihXlonKb7JuFfZ7yLC02oDSqHBD
eMiwmX+u6U9T7veQYe+MdiR5XjOEhwwT+ZPoYafU7yHDFutGXDnhbQgPGaaj
Km++PsYQHv//+T4PGbZm9k2DwlBDeMgwk6iF4n4HDeEhw3jPDM1XehrCQ4ad
N9qVPNLFEB4yjKwPO7n3hCE8ZJg9HXjz/mFDeEizwit+1ucdDOEhzT4rR9Up
9j7v85Bme1Mt03S3G8JDmh291TC1YbghPKTZne8hp7bYGcJDmjXE1O1dL28I
D2lmL1NPa7l+D2kmeLm4yqDbAB7S7K1/p4yOXr+HNNujpdTpOswQHtJMM/nT
4uw8A3hIs6sXLs7W1zCEhxSzu+TlMq7eAB5SLGrlxtRtrQbwkGJZWcXbvd8Z
wEOKaY10mBvWbAAPKSZ5zEjv6zUDeEix9FFniWyqATykWP3B8Xtf+xjAQ4p1
Lov+xA8ygIcUK5HbWL3+nAE8pFjPs9viqS4G8JBiJxZbbXnz0QAeUixnbGeU
6gYDeEix8CDrqWMvGsBDkrW92j9mzAwDeEiyEZYRS3b1rt/nIcnctFwdvBQN
4CHJbJ1Pfa4/bAAPSXacZxNvpG4AD0k21tBy2/X5BvCQZKuntn1q+qsPD0nW
NSG9MWt1v4ck+xu972lotT48JNmX9vBRNWYG8JBkkQtvPAkJ04eHJOuMDN2w
YYwBPCTYscJ2R7F3+vCQYLEOCo1JHfrwkGAlmwKLrfz14SHBatS+ahnU6sND
gj1OP6oy+4Y+PCTY065LNbeL9OEhwRz2SvI+LNWHR+/z7FEvOrL14SHBGhMq
54zdrw8PCRadukz/nrc+PCSY082pZ6LH6cNDgo1e0Wl87Jo+PCTYsME1pmyO
PjzE2YuQNP6STfrwEGcq0jNF1xnpw0OcjXK3uW9qpw8P8d7rxdVSjan68BBn
tr/3yRlp6sNDnLWKzxVxMtaHhzizkBWdrN6jBw9xdtQmuc1moj48xFnaqlkb
Cj/pwUOcKZ2eFDOu9/N9HuKs0W9h8skYPXiIswtelWZBA/v/vyDG/Hk9grMe
evAQY4JdcXbq/H4PMXbSJnGB33k9eIixL1n7drws1IOHGAv2M7445rAePMRY
y+nQqbOD9eAhxi5eqlj1fJsePMTY4CqBe8FLPXiIMc305aZ+i/TgIcYeTni+
pvmCHjzEWEP5u8Qhk/XgIcbyfrdf2rdZDx5irHDejF1xo/TgIco252qWyM7T
g4co211aRs/o6sFDlMkPrj0eu0cPHqJs8rFDymPl9eAhyqbmdQndTPTgIcr8
dgXlGtXpwkOUWTRuHD1Ppd9DlA1NuK0xuUYXHqIsz67eKq5SFx6iTFHt1avO
FF14iLLmcJcLBzN04SHKTIPFPgiDdeEhwj7fFIs/laQLDxE2aq3pndc7deEh
wuT+1Jda936+z0OEmWXpWanu14WHCCsucf9s6awLDxE22Vd/67XTuvAQYYNr
HDdP2aQLDxE2cbla9+99uvAQYW9HxAZX2+nCQ4SpNdirdNnowkOEOXeMpTuX
68JDhCmPJldum+vCQ4Q5LNpf7DlKF/n30KMLhxnNzx6EvHvoqn3K1yaM10W+
PXSd0pvA3ccGIc8euq/Mo6jSoD+/Hlr7uXRTm/sg5NVDNZYMPPTzwiDk0033
+l8d5542CHl00xUWYke2OA1C/d3U01n6q8+BQai3myrofbu50mQQ6uumc6Yf
UL+xcBDq6aYHkxNlLuXroJ+66AJ7PdM9XTrony5aNltxjEqYDvqliw778nel
e5kO+qOL7h66ruCUrQ76oYt6kmZdm2M68O+iVcbfVZNn6sC7k14P3OvluFEH
vp3U95US9TXUgWcnfSovNa0sWRt+nbR79oT0TUN04NVJp+5tnzaSacOnk6b9
Nnh/+JU2PDrpO9uRQXrLteHRQVXNHTbtFtWBRwe9GeAl2CiiDY8OKlbpZVmx
WhseHTRt5JB73jla8Oigma/ubpSfrQ2PDjp1kM8lsWoteLTTWueIMIPnWvBo
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
r3Nqa3VerUjKC8P63G43q+Ke1lK8/pgbkX97ZrhGTRj2x7lPPDzecFkj3v+G
q5gmKX1vSHsY6uM2fz9w/3SISDjq50Y+K8579UUiHPlwczPVPtGNsuHIj5u+
NcAgvEwpHPlyks2zMwrUheHIn7M2y9XZN1YtHD7cQPXSBXJ3NMPhxyUdsz2Q
qa0bDl+ucmfbar0gA3x/DCfxx0Od6pqEoz8423X1ZYESg7Gfr9zz2666I+4N
D0d/cb+Nan8X5o/C/r5zG4MaG6Xfjw1Hf3Ix62O2JZ6yxn7juWkpJeJOjSQc
/c0VBiecWupqi/0ncu2evOC3B2eE4/fBiWyYwdffOxf1JHHGRZEKGeELwvH7
4rquH7lRvXEx6kvmRKX/HXlSsjwcv09ObaL/u38b1qDeVK7YYv6AeGXHcPy+
uRn7Fz+fP9kJ9adxycmGIU4u28NxfeCEPxOXau92RR7pXFr++Ouhx/aE4/rC
qS3bYWd85yDyyeT0rr8UHXz2WDiuT1zeR75y1+NTyCuLWyo6ttn/7/lwXN+4
7bHKPascriK/bC7ddvXk9m/Xw3F95J6cmWgc7nUbeeZw9NyFKeqaD8NxfeWG
ZCwc7jT0KfLN46Z82VBi2uYfjuszV3VyjtVufhDyzucOyGbbP5wVEo7rOyfu
MOUW+cOQfwG3xt+q+VjMl3DcH7iHg+dd+1uWCI8irm7qIRcHnXTUU8Qprjjp
JS/Ih08RlxXc8UbRsBT1FXFu3pPafqpUwauYs9qvt35dQAPqLeZiwp7p+0R2
wK+YOz3vx0D6XDwC90fugXfZoZOt8hG4f3IBpklKwnZhBO6v3DidgIasR1oR
uP9yO1dYHo3zNozA/Zm7MeSO4dqAIRG4f3MfMnxnW+6xjMD9nRtaYXVxtyoX
gfs/J9yvE2B9eVoE5gNOy3NR270N8yMwP3AGT9qHaOUtjcB8wQ2pSO9MX7cu
AvMH99YzO2ix/vYIzCfcj7Ta3Z9P747A/MLVJJ97Z197JALzDXfa9sG78NTT
EZh/uL07SqMEP65EYD7izK7e1ffS9onA/MQNd3n5MD/6QQTmK671RNbsfTbP
IzB/cbVn43yf7g6MwHzG1f7acNpeJiQC8xtX9uRA+J+CyAjMd5yPmlnHpB3f
IzD/ccOkT5VkyqVEYD7k/tnOXyrvmQ2Pv9xDS8HUq9ol8PjLfYx9+n3Tmwp4
/OXWmem8yhtbD49KziY595pxfhs8Krn766+G5K4Uo5hvuW2Vjhvuy8hRzL/c
5Tt75qhtEVDMx9zWGW27JlcNpJifuaI7Ix/81NWnmK85s1NTTjkNMqOYv7lS
/at35UaPoJjPuU8R7XMzx4+lmN+5Sl+3SqfMiRTzPedhX/XWRMuWYv7nLJjm
c+fPMynOB9yGkQZytibzKc4PnOdb58SS8kUU5wuuxeptaZH2MorzB3cktWpz
CHVAPbXcnp+vJ0/6tZbi/ML9mT2y2vyGI+qr5ZRcQkig6yaK8w9X4TT6+MI9
W1BvLRepZ3b5h+92ivMTF9F800OvzAX113Gi075p/HniSnH+4mwiLY7YObkh
jzpOx+PY0STLPRTnN27Ogu+XvHj7kE8dp6HOeRU076c4/3GeZe5l/PKDyKue
s0i4kv/o12GK8yMXvt/l+sCKo8ivnjPRiDnSdegYxfmT++Mj+qjt7HHkWc8l
V008uvrmCYrzKxf5ZugCudcnkW8DZy6V+7ow9hTF+ZdbVx0zKLbkNPJu4LxG
tB58LH6W4vzMvXV3Xb7V9Bzyb+CULl4ol1xwHv3UwBnIte7YfOQCPBq5Jo0N
VadeX4RHIze42lt7frEHPBq5G2opSmzAZXg0cs6jlvz7segKPBq52df3NVnO
vAqPRi6ZN9Zjzt+r8Gjk7ogefmB86Ro8mrjL2o8dI0d4wqOJG6LyYq5Glic8
mrgXmd/5w455waOJaxocf7XL7Do8mrif11STT6Zfh0cTF7nCr4ueuAGPZm7o
dbvVASO84dHMra4Ot1tU4g2PZu6IHuOeXfeBRzP3bMHEly9n3IRHM1ecoKHp
0H0THs2c0dgJhqEfbsGjhXNaqLIm2vk2PFq4G7feOO01uwOPFs4rr6IwuewO
PFq4qWdVd6T5+cKjhbs4MDnosONdeLRw035PX/Hd8B48Wrnlx7dIhPy5B49W
7pnLiyWz/O/Do5U7d9miw2b8A3i0cja66lOM7z6ARyu3ad2tRfmiD+HRyrXM
rT+83ukhPFq538KXih8SHsKjjTNNaLVPG/0IHm3ch0Clh9T3ETzaOEneEm6v
pB882rgrUz8cbnH2g0cbNy/s8ZPJ2X7waOMmdF6XXGr7GB7tXPKhq+WjAh7D
o52TC1lzO0vrCTzaubWjP2yyvfAEHu2c3RF6c2/rE3i0cz/50w87Oz2FRzsX
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
hUoEpNkU0/8Dk3gFtA==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
jy5ycKTYhjFeDTy6yJ68PW9uV6iCRxdhBW4qsxWpgUcXqQ8/o/qPpQYeXeTm
g+Z3DA9V8Ogilvulel43q4JHJzGUvCh5uUcVPDrJ6HXGEXbHVcGjk7gK76pl
7VYFj04iCvleMqdKBTw6yU2rUWa2Zqrg0Um+lLe7OkurgkcHCXZgFQUVqIBH
B/HZ8Ojnkccq4NFBqmfWFc+OUgGPDmKTdNLJ3ksFPDrIUayeMW6/Cnh0kE9u
GgdMmpTBo4OY7d3hs5mhAh7tpDY4XZw/QgU82knEhwSumCqDRzsZFpA8f+xV
ZfBoJ3P991W5X1cGj3ZyzX/iqWPeyuDRToI3B/NvTFUGjzbizpI1o80jwKON
vHRI1nsxRhk82gb6e5LjpdgR4NFGctZ2HK5qGgEebaQvJVIqzHIEeLSRSaGP
2rYGjQCPVpJoZrHqSf1w8Ggln30W5aQfHQEercSvp2HJZ+/h4NFKri1gXBSP
HAEereRsefzBE8HDwaOV/NhkdCPkwnDwaCFkTk7NhLvDwaOFrLD0zPvDGQ4e
LUR1dF+7u+Nw8GghKWvK2dvCh4FHC1k4fq9rg8Zw8GghnuUxepZ4GHi0ECTj
W3Gjcxh4NBOO06ifU5SGgUczGcPK75ntNAw8msndqp4tW18ogUczsWyfEXNq
zDDwaCb18el8pTNK4NFMruanfO+IUAKPJpJn25M6Z5YSeDSRuxuM7l2wVAKP
JhLxJaBm6kQl8GgiOUXUMFpHCTyaSO/8TfccT4vBo4lIOYdM6fsnBo9GwtD2
ObN5vRg8GsmHKULVW/PF4NFIWl55XAsxEYNHI7ml+zBQSVEMHo1E4jvKeViH
CDwaybnJD5uMP4rAo4Hof6lgL3YXgUcDkWrMEUkHicCjgfQ8mGB3b5MIPBpI
v7WS6YeB40GPBlK/ZP1Shx9C8GggDrETrEfOE4FHA/F86qO23F0I+f8jDK8V
syXFQsj7H1nmmB7lvFsI+f4j+XYPHslHCyHPv0Tb0TwupUgA+f0lFQ+S5Rch
IeT1l4yca53nESaAfOrJcDv3UycMhZBHPTnO9F9+erMA6q8nJ1rT9tu/FUC9
dST5ks6l5IkCqK+O9N7irrM2EEA9dYR7ve3DxdEC6Kda4j1rn1eDjiL0Ty1Z
OeLX+b8ZitAvtaSrc0dqaIoC9EcN2WfWVXR9vgL0Qw2JW8Ywdhk4P1hwDYmM
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
nLq9FyaUg4cSrjnxavs3XE7+ByYkE0g=
          "]]}}}, {{}, {}}}}, {PlotRange -> NCache[{{-5, 0}, {0, 
         Rational[3, 10000000000000]}}, {{-5, 0}, {0, 3.*^-13}}], Frame -> 
     True, PlotTheme -> "Scientific", FrameLabel -> {
       FormBox["\"Diode Reverse Voltage[V]\"", TraditionalForm], 
       FormBox["\"Diode Reverse current[A]\"", TraditionalForm]}, PlotLabel -> 
     FormBox["\"\\!\\(\\*StyleBox[\\\"I\\\",FontSlant->\\\"Italic\\\"]\\)-\\!\
\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) Charateristics of \
SOI-Dn & Dp device model with SILVACO TCAD\"", TraditionalForm], 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5., 5.}, {-0.5385764119, 1.734636149*^-13}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 0 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 1 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 5 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 0 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 1 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 5 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8130305920716696`*^9, 3.8130306411764092`*^9, {3.813030698541828*^9, 
   3.8130307251171107`*^9}, {3.8130307666026087`*^9, 3.813030776864196*^9}, 
   3.813030912360751*^9, {3.813030962386922*^9, 3.813030970236371*^9}, 
   3.813032345156658*^9, 3.8130324420768824`*^9, 3.813033835150216*^9, 
   3.820098867923463*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"b9eedec7-5112-4237-870c-a1def48ef71a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Gray", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 0 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 1 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"NdataGate05", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 5 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate00", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 0 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate01", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 1 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PdataGate05", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 5 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "3"}]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Diode Reverse Voltage[V]\>\"", ",", 
      "\"\<Diode Reverse current[A]\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*StyleBox[\"I\",FontSlant->\"Italic\"]\)-\!\(\*StyleBox[\"V\",\
FontSlant->\"Italic\"]\) Charateristics of SOI-Dn & Dp device model with \
SILVACO TCAD\>\""}]}], "]"}]], "Code",
 CellChangeTimes->{{3.8130336293624372`*^9, 3.813033639286005*^9}, {
  3.8130336714046097`*^9, 3.8130336716826253`*^9}, {3.8130337197725396`*^9, 
  3.813033786406665*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"15ebd1d2-fb16-4995-8fd9-1b7511139f31"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1: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
i3ubdWnumcBKePziCqRLFOx16+FRxT0qCFYmz9rgUcUJRl9YeclCjmK+5fY/
DPFwyRJQzL/cwfeK4RX2Yor5mCtZ1i48HNGPYn7mzP2WP7jdMYRivuZi9UM6
l9YMp5i/udMzlIcHa5pQzOfcq4ArcnliC4r5nduzY+e+zQ/sKOZ77lpRm99z
GSeK+Z+T072YJr02keJ8wBV9H7G0q88MivMDVy7nGGmQO5vifMHpvHql/VOw
gOL8wV1+tIsX83AJ6vnDnRhiWbowfwXF+YWb2qMkX+u9GvX94diebW5j166l
OP9wdwsUtl5avx71/uHG9AtzKTm7ieL8xBVfj9YVFGxF/XWczIYLvkk3t1Oc
vzgD7s6T/it3II86rnPMstZ/x+yiOL9xTY9fuZor70E+dVzxG5Gi25+9FOc/
zknDYszRsv3Iq55b6mJT2FJ0kOL8yIW/X105o/wQ8qvnVn7gXLz3elKcPzmZ
7AuSncePIM967rZHtGNi4FGK8yuXEDBEuCzkGPJt4MQxZoKBb49TnH+5civV
qOpiL+TdwJ1Lj6kP7/mX4vzMafDuzlkx7CTyb+BC7Y+plU3xRj81cCX0+DrD
fafg0cidUxHvMAg5DY9Gbm/jjm9ZRT7waOQW3g5P1dP0hUcjt6Fkwiq16X7w
aOTs/VdvSHA5C49G7tKqAUNSfpyFRyOn2Kd/tP8pf3g0cVs1PLb2G3MOHk3c
jPtzI5flnINHE5d/6LbLco8AeDRxjcqVvH6GgfBo4pbv3N/inRUIjybu5mtu
eujh8/Bo5jRv3pt7yvgCPJo5mT0bNmiVXIBHM3fmiU73LP+L8GjmsrSt/Oyc
L8GjmcsMP/M4r/0SPJo5z3T6S+f5ZXi0cOkVeRWqG6/Ao4W7P/iG7T39q/Bo
4ar4/wb8KLsKjxZuf5TLufSb1+DRwpms3Vi6ZPl1eLRwv0fwDHwH34BHK+fr
UClY9fUGPFq5hppW07z7N+HRynk8mzCseXwQPFq5eNmqlvQrQfBo5WwdeGv3
9gTBo5VbMqWW1vxzCx6t3MXRc+eafrgFjzaurGznbgfT2/Bo48aeXOQ+8Mpt
eLRx7ZODLybI3YFHGzd+q5G5xaY78GjjljqPPO+eewcebdw6s8mKe+yD4dHO
fbzqlOf4JBge7ZygLHNmfr+78GjnArbOjTc7cRce7VxFuMneuU134dHO7R10
Pdr2n3vwaOd23BMFp2bfg0cH92RtdISO0314dHDj9Ie/MI64D48OTqVuyHdZ
wwfw6ODGpn88d/7yA3h0cHdfP5KtVA2BRwe3PvjM/g7PEHh0cu1rNVxSm0Lg
0cnl5bU8XrTxITw6OY/wyta7ZQ/h0cm5XfLb+WTBI3h0cuIB1Ru2ZTyCRye3
51WSYc2Ex/Do5ISlx1v03z6GRxc358c4w762T+DRxb0RNPHjIp/Ao4uzPVxf
rGf6FB5d3JRFD/i2T5/Co4srvjAvUWXkM3h0cWv683b5P3gGj27u4ZcBJmsl
ofDo5nwHjP7zZVYoPLq5PJ1xt56dC4VHN9fxcEhNYVYoPLo5M+++R5ZLwuDR
zfHW7+rnOCcMHj3cbo1dQ3ecD4NHD6dZeWCOSl4YPHo4FyeH/N/az+HRw00d
8Txff/FzePRwhXM+x8dffw6PHq4ur+fM09Ln8JAhsT5e0oah4ahHhviHT9Y9
vS4cPjJkwIlKzQOPwlGfDIn40bTkZW04vGSI9bDty6ebv0C9MiRhdHC3y74X
8JMhkw8ODz0e+wL1y5Dygm+H+/Ej4ClDRpq5HRRPikAeMiS0SPfBtLMR8JUh
B+3kdL/kRiAfGZJVmrk9TjcS3jJExy/1veKaSOQlS/4ElvgefBwJf1mi9qWy
z7LGSOQnS2zXRegesX2JfpAlW4+UZnUdf4k8ZcmWe22myWkv0R+yZIfc7Lof
WlHIV5Y4N/zqmrMiCv0iSx7sbdij8jAKecuSu1K375qNUegfWfL8j8row3av
kL8seWar12Xo/Qr9JEuq8kZcGvHpFTzkyKqXVyxXD3oNDznST229m9rG1/CQ
I+ODd+p9j3wNDzliErVQoMp7Aw85cl0UfOna9DfwkCNDKzd2r7n2Bh5ypFAy
KdGj8g085MhC4ys6xeOj4SFHzn6qtbh6PBoecsQi9djBS1nR8JAjgx9WtXwZ
HAOP3u9PMf+yZWsMPOTIB/3mMy6xMfDgkZa6XNU9arHw4JHq1ujzzUti4cEj
OW063ncex8KDR9S371K43RkLDx6JPPRzXPcUCg8ecVC9f97/OoUHj+g2jlt9
tIbCg0eOn9I4nT6IwYNHxveML/eawODBI1c/Brlv3M7gwSNPd2jed7vC4MEj
s/eHKJyMZ/Dgk6+7kvSSqxk8+GTHmpwUK604ePCJ/rOFm99zcfDgk4PLjQzd
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
g4eEJBntvZ49qgwemuSedNtlvm0Z/T82oB+c
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
+EuMhPd3ZlPz9lPpGX34fmeDJtOI1cv14fmd7YgMSLSQ1odfNfsWuCGuoFcP
XtWs3wjVwcEeevCpZoJFkzP7bdWDRzU7nr6kWTp+BDy+Mf8dxzOnF4yAxzfm
8WPlPTWzEfD4xiKGDA40mDYCHl/ZF+shD4ftGQ6Pr6ymVjBs9ZXh8PjKyg5t
6XTLGQaPLyx4Dc/pVB8Ojy9MMnPn+XKTYfD4wtL2JP3a4zUMHp/ZV2H+0LyD
Q+HxmfXfPP9V+qWh8PjM8r/6nTLr1IVHFVPV//Xo+WtdeFQx5/pBt9uJLjyq
WF6FwnEDWV14VDJWEfBy/jwdeFQym6bm2OtB2vCoZLp+s4TVg7XhUcHWajyy
iLAfAo8K5lYb7VP2fjA8KtjgjoQNg34Mgkc5azcKWfAjcRA8ytmUh+umjN8w
EB7lTCn997c1CwfCo5y9ndWTOsRnAPIvYwPLdnUvMxmAvEvZXavShr0CLeRb
ynJkbkuE1msizxIW573zhltBf+T3iR1utVIK/NgfeX1i3Y3uixjXQD4fma/z
3e7vIRrIo5gNM7waMPlZP9RfzHqjLXevmdoP9X5gMqMVs4LOiFFfEfv6RmLU
p35i1FPETrEA1cyDIvRTIdPaeKKmIkqI/ilk5J54ZdRWIfqlgH022fzPz1cC
9Ec+G7dc/8aWbHX0Qz6bnDWv7vx2dfjnMYuV2v+6HVGFdy6rF13P1J2oCt9c
liQq0NmmrgzPHCbtfX1WzEQl+GUzz8QJ57doKsIrm73z0t7THakAnyx2ynKB
9dhyWXhksfiNjfMPjpdD/pmsHzd3uDRcFnm/YzdPRi0YXy6NfDPY442DR0ws
kkKe6WyW6+iBOmOlkF8a0/wpDt06SxJ5vWGzGgcWdClIIp/XLC7c+1hYT4/d
nzxeMbfjmkZv3bvt/tSfwjR0Vku+2NVj96feZOY0ftU+7xmddn/qe8k8r/SM
qXHttPtTD2eOC1VO/7jdZvdn/4ms3XZiiv7bNrs/+41nhts1358+22L3Z3/P
2Labl4wWz2q2+7OfJ2z+2c4rTQ3N+P6H7MCImY6rD/3G98Wy7u++DYdLG7B+
DOs35d24wGe1WO82639hTOOJzz/x+essN9FurWFaDf7+Itt+ZYOqdFgV3j/B
/JbpB4WGFuF6N9ssqbTp9rksuwthpomGeRoJM58c9n6Sc/j/3yc7X6bpHUrJ
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

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
vjSfadC9NTwR9XGl+R+6RkeNxf2x3KvmRpf+30ci8uFGL1apGSWjh/ESuLsF
tWM0LAwTkS834Ir0xmJfM4yfxIUUKxW9PsUlwocbt2bp7rgrtvi+ZG7hpO6O
IGOnRPhy1ZarRkTlu+P707i6j28MC2ZOT0R/cLGrLt4sDvLBfF5zG1cLRow8
6JuI/uI23SsJDMpZiPm95VzLrg9+ELokEf3JzYpPnauhshLzzeS22Rwp551b
m4j+5ibYdVjb3QjA/D9wop2svDpucyJ+H5yxpmqD45Mg1JPNJa8ZHHvy455E
/L64cXs+m5ReCEZ9OdxNF/XUo1qHEvH75CIjMnWuxB1DvXncBOd9X1XTTybi
9809sfW797zlLOrP5+6NsDtkMPhyIp4P3GGLTidt4xvIo4AbJ5z14/bg24l4
vnCKnff26X2+j3yKuLNLp8+TzHyUiOcT9/uddrHskRjkVcwV7m68GaMUn4jn
Gxe5d9WKQ1cTkV8Jd99o/6P5timJeD5yn4MuxM4KfYU8SznBx6W32z69S8Tz
ldv764bNFYcc5FvOFfdVjr29oSARz2fukyIv9MbDUuRdwfm2HZCxv1WdiOc7
Zz8qq8Iy+zPyr+QWLTmhdHXkt0SsD5zeG8nm84GN8KjmAlyHzZua04J6qrk1
b5VE7wK74FPN5a+KoCu/8JKwPnE7ArPmiGJkkrB+cZMdXsfNlVdOwvrG5Yyp
8N1rKkzC+sft3aqdUFQ0KAnrI7cnjFcfuGpkEtZPbnOfydRBxZpJWF+54W8E
7jrlk5Kw/nK6Bl7rNZKnJmF95rSyf57cttYsCes3Z65b4bpsnnUS1ndu91+v
upSrHZOw/nMhvAnF3cFeSdgfcMrNy8aeGjg3CfsH7oCHTYXkBf8k7C84F6JV
o/9hRRL2H9yadX6npx7bkIT9CXfi4gOfNb+2JmH/wu3r0Wp6kbw3Cfsbri7k
+N9ePoeSsP/hFqd8N5XXOJmE/RG3qyVgmlXRhSTsnzhuttmt0LU3k7C/4pKN
f2xbbxmRhP0XVxgaFuN6/UkS9mdcpMm65q9+z+HR/3n3dFubiynwqOdqT7fq
TzXKgEc9N8xBTSo2IBce9dyemJurmrtL4PGNu6c/ZYjRjI/w+MZVb/9l6/yl
Hh7fuClzOx2zZzbBo4Frf/0156+eTng0cHLpg2QHrJOk2N9yc1zP5NqOVqTY
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
9zDMgYcSycoe5eDgkQOP/vF2Xah3XZEDDyUyOXKekv++HHgoETnNnYa7LufA
Q5lcXXvJ60ZcDjyUyYLtETq52TnwUCZ79VrdBjbkwEOZPLA8F7FWJhceymTR
BrY5fWQuPJTJm9ZTeQPMc+GhTG67t47bPDMXHsrk4/ExG7+vzYWHMinzSbNd
fygXHspkptSiMx23cuGhTFYWT1U/mpQLD2XyOPxWu3ZJLjyUSYyUvEJecy48
VMh78/igA6p58FAh+g92SVtr58FDhUx2vDVLwi4PHirE/bB+5av5efBQITev
Oky8ty0PHipEONDs58nTefDoH3/R4qwtj/LgoUI2RpQeWpmRBw8VEjLv67m1
X/LgoUJil54P28HLh4cKKX/2SePo0Hx4qJBdm0dcvWucDw9VsvxYTl2Wdz48
VMn08r25Emvy4aFKNGadumR2MB8eqmSZe2pd0K18eKiS0PX81ldJ+fBQJTyO
uzG4NB8equTn9Zv7Alvz4aFKRva1Ty3hF8BDlbx3UNL30CmAhypRu5hXnedY
AA9V4rV7vJn/4gJ4qJKYuaW5v3YVwEOV/HNuvH/gxQJ4/Ptfpf/kysQVwEON
NKrZSibkFMBDjXQdrsvc+KMAHmrkrznNbJRCITzUyPXFcpVFmoXwUCOZusIn
EaQQHmpEewkzDfErhIcaKbjXUeOztRAeauTnneayqacL4aFGEk4lyWk9LoSH
Gomb37F2ZGYhPNTI5Wnz0tS/FsKDT0pGFp8WSRehHj4Z88UiQWtUEXz4ZFUr
t59MK0J9fBKq03hw9pwiePHJ6yCBwtbAItTLJxndQ7rvnyiCH5+E3/GVrI8s
Qv18cpf+2Db8bRE8+WTR4MbGeV+KkAeftN9Ie/dYohi+fLJ8/EczpRHFyIdP
BvofOrvYvBjefBLj+ORIuk8x8uqfT1uXut7GYvjzyTOVFXIRx4uRH5/clz+w
QDuyGP3AJ1s2hfTcf1OMPPlE02XfAYMvxegPPml6lm/6RqIE+fLJTtM5o5eM
KEG/8MnVC+sWS1uUIG8+2WjfOuPh7BL0D58YZqpPmB9Ygvz55OzDM3kDwkrQ
T3zi3zC9NP9hCTwEhNceU3gpowQeApK5w3v/33Ul8BCQJwbjTO2lS+EhIF9L
8mo1R5fCQ0BmazsfV7AqhYeAtA0QPfv8Vyk8BCR+zJcnr7eUwkNA3uoPUnh/
uhQeAqJ2vuFSSXQpPPo/b+onlfOhFB4C8ipiy6PshlJ4CEh2nLdPo3wZPPrH
85TLGDiuDB4CslBLOWaibRk8BETzTEmqw8IyeAhI7Oegd7t3lsFDQLhu45X0
Yhk8BGTQtDXTfz0rg4eA6NXtHT++oAweAiLft3jBtqYyeAhIX5NzbY5aOTwE
JK/qvoKmbjk8BORM3ZaPO13K4SEg4z3zMr4uL4eHgJyPnNEwN6QcHkLy5Jdh
9aub5fAQkm9rjb0sWDk8hOR5uCIvqaIcHkKiKl311KG7HB5Ckm5lVPNeowIe
QuK4e4GXn3EFPISksveZcduMCngISdJtZYvTGyrgISTP3oV6Gx+vgIeQzK+a
ebIqsgIeQlIT5zzzWEYFPIQkYpr6PLuvFfAQkivcuY4emUp4CEnW8+AZdGwl
PITk8sUcw2DrSngIyQX3Vi3vBZXwEJKwTcYJI3dWwkNI2o/PetR1sRIeQhLV
+VxYEV8JDyFpTemsf15YCQ8hEc5QuHW1pRIeQsKXf3UyTFgFDyF5GfEm8ohe
FTyExD5Qefkujyp49Nf/fuTZLX9XwUNEJm9319p7uAoeIqKtcOJZ2L0qeIiI
rJTf0QuvquAhIosttCvufq6Ch4jcaip6uFiiGh4i8tWhl27mV8NDRMJ1y7VD
RlbDQ0RW7UouODu5Gh4iMlp1z5Boy2p4iMjTGwYHP7hVw0NE2sofLqzzrYaH
iJhk7N8stboaHiKy5sa8ivHbq+EhIjm8EmfPQ9XwEJEUdamAgPPV8BCRLQed
Zly4Ww0PEflZ78R7HVcNDxHR+ZFa15ZeDQ8RyXTdP027oBoeIkLyw3TnfK6G
h4jsVD3hfqi5Gh4i0p12wDtdsgYeIuI6YPxIaWENPPqv101QmDa6Bh4iYsRX
atysVwMPdaIxcpvJS66G/g/xECvF
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
crP6pCyA/w963NvSsWUsH97VtNb5alTlcz58q+nJ0cvf3v6jBs9quqjj9Jv2
GjX4VVF/v0kfD5qqwauK+vU8lPaYrwafKhp07o2bsb8qPKqoXYtW9fwPqvD4
ToeNKZ5oZKkCj+90ycPKKLeRqvD4Tm+/l/XMf64Mj280tqmkKKZAGR7fqE3B
fO/ipcrw+EY9rL3uv/xHGR5f6dzxN0NPeyvB4yud3aFt77tSCR5f6cJF5RVR
vdd9Hl9o6LET3XcaFOHxhSqWSw73D1SExxdaUJAlueSsAjwqqZ1ksnxoniI8
KmnP2jPJOu4K8Kikg9rvuVyTVYTHZ5ov23Or85Q8PD5TvR7FK/deKMDjM23r
8n9IZ8nDo4IG6o4yOKygAI8Kuq6mYKxdmhw8Kmhe0JfJe4vl4VFOdZ+HWsl4
ycGjnB6+OWfwxjny8CinfM1hL6f4ycKjnAauDMpQDZND/mU0x9Rl+1tbWeRd
Sn03esx3WSKHfEvpubPNG3X8ZZBnCe3aap3fNFoW+RXT2dKakQE2MsirmA5w
/W477oAM8imiml67bfZOkkYehVSjijveIJZG/YW0NXF16ccuKdRbQMsdOcuR
l6VQXz5d3+3YXf6Mh3ryad31HRPYJh766RMdMuyRnf5+HvrnE037+CNIO18C
/fKRTvW1az25VhL9kUeH/LN+UcsqCfRDHi2cPL9i6g4J+OfSsrgTQ4odu+37
lsuhm5Zzg5Oe99j3+ebQrXKL1edf77Tv88ymY/TVxuhoddn3+WXRnqJ/Kr/H
dtr3eWVRTVf/R4bkj32fTya1/hyx5KryH/s+j0zqOi54+datHfZ9+WdQ2zM2
3qOr2+378k6nQw0+JxZvbLfvy/c9TWp+YuC9rc2+L880+lGP2M6f0Wbfl18q
tbuhtW3h91b7vrxS6MbufSVyF1rt+/JJpratJenKs1rt+/JIpIYtQ5q4mmb7
vvoT6Lzqrx7Kz5tRbzx93JUS1fi1GfXF0oBH79fH7GlCPYyWJsQuWR/chP3H
0N/71slt+7cR+42ivCfdWnMXNWJ/kXRXXYurN+839hNOT59XGDnDuwHfH0Zl
58S/HLriF77vJT1sc6ZZZVkd1n9G5RxSFNLH1GC9R9QinJe+ovwb/j+Qpite
Mc6Ir8Tnb9It+rcTqypK8P4FKvruddOvKh/Xh2j1Mmu27BOzv3HcJmZQrka0
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
zqzI0kEV8FAn21fe36PtUEH/Byas8rY=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF2HVUVN/XBnC6Y4JQSjptxUDwHhU7MLAxUTFBxC7sxAIFAxNbVBADEDiH
MhCQ7hYUJKQ7Xr4/HtY7/7BmzcyZs5/Pnnv3QW+9y8KNYiIiIhXiIiL//e17
qDDv+f7aauH6Ns2mDleimoSMb9epXLbAwqZqQbDO6UohOzJk3xnPQnOb4oMq
b6YXC9mna4eGGq+3sMn022kjlylkjbtDAq2WWNgkxP/3ELL0zhih22ALm+im
/xYUsqzNF/R32FjY/LfagmAhS+1yzttVam7Tu1jvikJ2vL3Iw0XOwubxf8v5
CdnmFfsUfMUsbG7f+u8hZJeG5439ZWRh07u53gWF7NHrZcmKReY2/62mc1rI
Jr3Kb18raWFz6L/tHRSyKYMf7pvau1/X/5bbKWSfXZeLXqg2t9n0v4eQJVv8
Kqn5bG7j8L8FhUxtWE7JjHxzm4X/26CQbTSZrmnJzG1m/K9gIRudOZyX1Pv+
/y1nI2Qee6wtL/mZ24z630PI7rZtcIyKNrcx+9+CQuajlzM18aG5zaD/bVDI
nluU/7p8y9zmf9tTEbJRQbfWmnw071tOTsi+VL1/8eyMuU2fh5AdnO7zx+Cp
OTwEbJro6lGebubwELAJi5n+gj39HgIWPaVkods6c3gIWIzTATEtJ3N4CFjg
xcKtmdPM4SFgQ0zX3LC4aw4PAStwd3MVGdbvIWApwa7cX1tzeAjYiOqsaaHW
5vDofb3p6FnD5ebwELALCs/LV3abwUPA6kfab2qabQ4PAQszT4m6W2YGDwET
n3bD8/yqfg8BCx0U+OpMjRk8BMw/Mdg5mNfvIWA163ZZuuaawaN3/efNP6KG
9nsIWEPWspUnfpnBQ8DOpoV5fftjBg8BO7kqY8enQjN4CFg8b2bgh0wzeAjY
arUL5OdrM3j05vepXS2/9/v6PARMJGCMTN5NM3jw2RnjbzOrY8zgwWdLjg1d
HXbXDB589qBd/pTJVzN48Nkx/vDSiMtm8OCzq6Pfa/BvmMGDz7Zuf7zT9rwZ
PPhsrYwltfc2gwefBV+Km33MxQwefPbH8EdT/XIzePDZoDc8tWG3zeDBZ0Mf
LCxdNaHfg89GiMwVTurdX58Hnw2f+ppXqdHvwWc2Lvm508+awaN3/QmfqnRF
+j34rDIrwnHiXjN48FnDH/uudd2m8OAztyVt1+giM3jwWd1943u8BlN48Blf
XDuxelG/B5/ZmtZev19lCg8+S5xuP6TMpt+Dz7Lebf9hW2IKDz5TiP0R66LR
79H7/fYxaSu/msKDxyoE3TOTO03hwWP2Sk4nPxWYwoPHakatu6LWu16fB4/d
HnFERshM4cFjh0f5tdMIU3jwmExhpbFosSk8eOxgSrdY/mNTePBYwEa9g1Uf
TeHBY9balmdsz5nCg8d2z2+Jff/EFB48pvpoz9Cdp03hwWNrPnpsWeBjCg8e
s5pWY3r9oik8eCzWQ2PU7Hmm8OCxEzXc4kMepvDgsR8mN2UkHUzhwWPHBrds
/LCs34PHNmk+/UUmm8KDxwxIRPiY7f0ePPbae0jKKwNTePDYBD+N5p9r+j14
7FnmgLkzeabw4LEV545uu7aw34PHEu6btqhqmcKDx8SabYwrB/bnr8xe8evN
dSX681Zm83+dn84k+/NVZnMTpg/0VO/PU5lJfex0m1tmgvyU2a6CYZVvf5sg
L2V2TpDmcD7fBPkos08aYTJ3M0yQhzJzGumZ41xugvqV2T2bqeRKqAnqVWY2
OUa7emJNUJ8ys5uaJe2XaYJ6lNniaCcNw2sm6CclJvHMceSV5yboHyUWEW+U
fuqCCfpFiXXOVb350d8E/aHEnisZft+/1wT9oMRyaMEPdt0E/kos7eW0TZ6r
TeCtxNYfNJ58+IwJfJXYaYclc3OWmcBTiT20U7ZVczSBnxJbOall8JNZJvBS
Yvxn7cfHrTOBjxK7wxzmuUmYwEOJdZS37hk81wQeiuyMY8/4WXIm8FBkEVW2
K870rtfnociUisdv/vHHGB6KzET5wOv9C/s9FJlKhbGqe4QxPBTZZRbb/X12
v4ci+2C+3u3wC2N4KDK3994unSP7PRTZwqCaHtHHxvBQZF8ub9MKkO33UGSJ
E4KaaqkxPBRZXYCb2eLvxvBQYMq7yL8dH43hocAuSRp3uvW+3uehwNZtvDg6
6I4xPBTYUg1PzcWfjOGhwDInHn3bddMYHgos/sBWKQsPY3goMC9fi2dnrhnD
Q4FJqx40r9ltDA8FNrna27vS1RgeCuyg5VLbacuM4aHAxD7J3nU+ZAwPBZYm
pjk82toYHgosee6Rtn2bjeEhz7YKUhUbFxjDQ57tkY/cOWS5MTzkWeD8ue8N
B/V7yLNb+a9dE8YYw0OezTjlO6l7fL+HPHN93/ZTm28MD3m2W5cWqOv3e8gz
qRU5JjfrjeAhzyalx31ZrtnvIc8qRk7f11RtBA95Fum/SUau0Qge8uzO5dQj
rrFG8JBjdy+ZfXBV7PeQYx93jPsZFWEEDzm2syu5xTnNCB5yTDbKRKEy3Age
cmxc4K1BO54bwUOOpWR4WcS/MoKHHPN4K3n4+ykjeMixExsUHLc9MIKHHJvZ
aJ3LnI3gIcd6vOfuv3zLCB5yTPGRZOG8mUbwkGOT1y83WPzYCB5y7ELAW9vv
1kbwkGXn6gvcX84zgocsC165zeDhOiN4yLJdo/Pd7lkZwUOWBepbK8UZGcFD
lvkb7dw/ZJoRPGTZKFnXa+MmGMFDlsUGDyVnagzhIctKQ4/tP2bZ7yHLJnjq
fU6qNISHLMtTKbn4dni/hyw7oHxr0cpvhihXlonKb7JuFfZ7yLC02oDSqHBD
eMiwmX+u6U9T7veQYe+MdiR5XjOEhwwT+ZPoYafU7yHDFutGXDnhbQgPGaaj
Km++PsYQHv//+T4PGbZm9k2DwlBDeMgwk6iF4n4HDeEhw3jPDM1XehrCQ4ad
N9qVPNLFEB4yjKwPO7n3hCE8ZJg9HXjz/mFDeEizwit+1ucdDOEhzT4rR9Up
9j7v85Bme1Mt03S3G8JDmh291TC1YbghPKTZne8hp7bYGcJDmjXE1O1dL28I
D2lmL1NPa7l+D2kmeLm4yqDbAB7S7K1/p4yOXr+HNNujpdTpOswQHtJMM/nT
4uw8A3hIs6sXLs7W1zCEhxSzu+TlMq7eAB5SLGrlxtRtrQbwkGJZWcXbvd8Z
wEOKaY10mBvWbAAPKSZ5zEjv6zUDeEix9FFniWyqATykWP3B8Xtf+xjAQ4p1
Lov+xA8ygIcUK5HbWL3+nAE8pFjPs9viqS4G8JBiJxZbbXnz0QAeUixnbGeU
6gYDeEix8CDrqWMvGsBDkrW92j9mzAwDeEiyEZYRS3b1rt/nIcnctFwdvBQN
4CHJbJ1Pfa4/bAAPSXacZxNvpG4AD0k21tBy2/X5BvCQZKuntn1q+qsPD0nW
NSG9MWt1v4ck+xu972lotT48JNmX9vBRNWYG8JBkkQtvPAkJ04eHJOuMDN2w
YYwBPCTYscJ2R7F3+vCQYLEOCo1JHfrwkGAlmwKLrfz14SHBatS+ahnU6sND
gj1OP6oy+4Y+PCTY065LNbeL9OEhwRz2SvI+LNWHR+/z7FEvOrL14SHBGhMq
54zdrw8PCRadukz/nrc+PCSY082pZ6LH6cNDgo1e0Wl87Jo+PCTYsME1pmyO
PjzE2YuQNP6STfrwEGcq0jNF1xnpw0OcjXK3uW9qpw8P8d7rxdVSjan68BBn
tr/3yRlp6sNDnLWKzxVxMtaHhzizkBWdrN6jBw9xdtQmuc1moj48xFnaqlkb
Cj/pwUOcKZ2eFDOu9/N9HuKs0W9h8skYPXiIswtelWZBA/v/vyDG/Hk9grMe
evAQY4JdcXbq/H4PMXbSJnGB33k9eIixL1n7drws1IOHGAv2M7445rAePMRY
y+nQqbOD9eAhxi5eqlj1fJsePMTY4CqBe8FLPXiIMc305aZ+i/TgIcYeTni+
pvmCHjzEWEP5u8Qhk/XgIcbyfrdf2rdZDx5irHDejF1xo/TgIco252qWyM7T
g4co211aRs/o6sFDlMkPrj0eu0cPHqJs8rFDymPl9eAhyqbmdQndTPTgIcr8
dgXlGtXpwkOUWTRuHD1Ppd9DlA1NuK0xuUYXHqIsz67eKq5SFx6iTFHt1avO
FF14iLLmcJcLBzN04SHKTIPFPgiDdeEhwj7fFIs/laQLDxE2aq3pndc7deEh
wuT+1Jda936+z0OEmWXpWanu14WHCCsucf9s6awLDxE22Vd/67XTuvAQYYNr
HDdP2aQLDxE2cbla9+99uvAQYW9HxAZX2+nCQ4SpNdirdNnowkOEOXeMpTuX
68JDhCmPJldum+vCQ4Q5LNpf7DlKF/n30KMLhxnNzx6EvHvoqn3K1yaM10W+
PXSd0pvA3ccGIc8euq/Mo6jSoD+/Hlr7uXRTm/sg5NVDNZYMPPTzwiDk0033
+l8d5542CHl00xUWYke2OA1C/d3U01n6q8+BQai3myrofbu50mQQ6uumc6Yf
UL+xcBDq6aYHkxNlLuXroJ+66AJ7PdM9XTrony5aNltxjEqYDvqliw778nel
e5kO+qOL7h66ruCUrQ76oYt6kmZdm2M68O+iVcbfVZNn6sC7k14P3OvluFEH
vp3U95US9TXUgWcnfSovNa0sWRt+nbR79oT0TUN04NVJp+5tnzaSacOnk6b9
Nnh/+JU2PDrpO9uRQXrLteHRQVXNHTbtFtWBRwe9GeAl2CiiDY8OKlbpZVmx
WhseHTRt5JB73jla8Oigma/ubpSfrQ2PDjp1kM8lsWoteLTTWueIMIPnWvBo
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
r3Nqa3VerUjKC8P63G43q+Ke1lK8/pgbkX97ZrhGTRj2x7lPPDzecFkj3v+G
q5gmKX1vSHsY6uM2fz9w/3SISDjq50Y+K8579UUiHPlwczPVPtGNsuHIj5u+
NcAgvEwpHPlyks2zMwrUheHIn7M2y9XZN1YtHD7cQPXSBXJ3NMPhxyUdsz2Q
qa0bDl+ucmfbar0gA3x/DCfxx0Od6pqEoz8423X1ZYESg7Gfr9zz2666I+4N
D0d/cb+Nan8X5o/C/r5zG4MaG6Xfjw1Hf3Ix62O2JZ6yxn7juWkpJeJOjSQc
/c0VBiecWupqi/0ncu2evOC3B2eE4/fBiWyYwdffOxf1JHHGRZEKGeELwvH7
4rquH7lRvXEx6kvmRKX/HXlSsjwcv09ObaL/u38b1qDeVK7YYv6AeGXHcPy+
uRn7Fz+fP9kJ9adxycmGIU4u28NxfeCEPxOXau92RR7pXFr++Ouhx/aE4/rC
qS3bYWd85yDyyeT0rr8UHXz2WDiuT1zeR75y1+NTyCuLWyo6ttn/7/lwXN+4
7bHKPascriK/bC7ddvXk9m/Xw3F95J6cmWgc7nUbeeZw9NyFKeqaD8NxfeWG
ZCwc7jT0KfLN46Z82VBi2uYfjuszV3VyjtVufhDyzucOyGbbP5wVEo7rOyfu
MOUW+cOQfwG3xt+q+VjMl3DcH7iHg+dd+1uWCI8irm7qIRcHnXTUU8Qprjjp
JS/Ih08RlxXc8UbRsBT1FXFu3pPafqpUwauYs9qvt35dQAPqLeZiwp7p+0R2
wK+YOz3vx0D6XDwC90fugXfZoZOt8hG4f3IBpklKwnZhBO6v3DidgIasR1oR
uP9yO1dYHo3zNozA/Zm7MeSO4dqAIRG4f3MfMnxnW+6xjMD9nRtaYXVxtyoX
gfs/J9yvE2B9eVoE5gNOy3NR270N8yMwP3AGT9qHaOUtjcB8wQ2pSO9MX7cu
AvMH99YzO2ix/vYIzCfcj7Ta3Z9P747A/MLVJJ97Z197JALzDXfa9sG78NTT
EZh/uL07SqMEP65EYD7izK7e1ffS9onA/MQNd3n5MD/6QQTmK671RNbsfTbP
IzB/cbVn43yf7g6MwHzG1f7acNpeJiQC8xtX9uRA+J+CyAjMd5yPmlnHpB3f
IzD/ccOkT5VkyqVEYD7k/tnOXyrvmQ2Pv9xDS8HUq9ol8PjLfYx9+n3Tmwp4
/OXWmem8yhtbD49KziY595pxfhs8Krn766+G5K4Uo5hvuW2Vjhvuy8hRzL/c
5Tt75qhtEVDMx9zWGW27JlcNpJifuaI7Ix/81NWnmK85s1NTTjkNMqOYv7lS
/at35UaPoJjPuU8R7XMzx4+lmN+5Sl+3SqfMiRTzPedhX/XWRMuWYv7nLJjm
c+fPMynOB9yGkQZytibzKc4PnOdb58SS8kUU5wuuxeptaZH2MorzB3cktWpz
CHVAPbXcnp+vJ0/6tZbi/ML9mT2y2vyGI+qr5ZRcQkig6yaK8w9X4TT6+MI9
W1BvLRepZ3b5h+92ivMTF9F800OvzAX113Gi075p/HniSnH+4mwiLY7YObkh
jzpOx+PY0STLPRTnN27Ogu+XvHj7kE8dp6HOeRU076c4/3GeZe5l/PKDyKue
s0i4kv/o12GK8yMXvt/l+sCKo8ivnjPRiDnSdegYxfmT++Mj+qjt7HHkWc8l
V008uvrmCYrzKxf5ZugCudcnkW8DZy6V+7ow9hTF+ZdbVx0zKLbkNPJu4LxG
tB58LH6W4vzMvXV3Xb7V9Bzyb+CULl4ol1xwHv3UwBnIte7YfOQCPBq5Jo0N
VadeX4RHIze42lt7frEHPBq5G2opSmzAZXg0cs6jlvz7segKPBq52df3NVnO
vAqPRi6ZN9Zjzt+r8Gjk7ogefmB86Ro8mrjL2o8dI0d4wqOJG6LyYq5Glic8
mrgXmd/5w455waOJaxocf7XL7Do8mrif11STT6Zfh0cTF7nCr4ueuAGPZm7o
dbvVASO84dHMra4Ot1tU4g2PZu6IHuOeXfeBRzP3bMHEly9n3IRHM1ecoKHp
0H0THs2c0dgJhqEfbsGjhXNaqLIm2vk2PFq4G7feOO01uwOPFs4rr6IwuewO
PFq4qWdVd6T5+cKjhbs4MDnosONdeLRw035PX/Hd8B48Wrnlx7dIhPy5B49W
7pnLiyWz/O/Do5U7d9miw2b8A3i0cja66lOM7z6ARyu3ad2tRfmiD+HRyrXM
rT+83ukhPFq538KXih8SHsKjjTNNaLVPG/0IHm3ch0Clh9T3ETzaOEneEm6v
pB882rgrUz8cbnH2g0cbNy/s8ZPJ2X7waOMmdF6XXGr7GB7tXPKhq+WjAh7D
o52TC1lzO0vrCTzaubWjP2yyvfAEHu2c3RF6c2/rE3i0cz/50w87Oz2FRzsX
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
hUoEpNkU0/8Dk3gFtA==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
jy5ycKTYhjFeDTy6yJ68PW9uV6iCRxdhBW4qsxWpgUcXqQ8/o/qPpQYeXeTm
g+Z3DA9V8Ogilvulel43q4JHJzGUvCh5uUcVPDrJ6HXGEXbHVcGjk7gK76pl
7VYFj04iCvleMqdKBTw6yU2rUWa2Zqrg0Um+lLe7OkurgkcHCXZgFQUVqIBH
B/HZ8Ojnkccq4NFBqmfWFc+OUgGPDmKTdNLJ3ksFPDrIUayeMW6/Cnh0kE9u
GgdMmpTBo4OY7d3hs5mhAh7tpDY4XZw/QgU82knEhwSumCqDRzsZFpA8f+xV
ZfBoJ3P991W5X1cGj3ZyzX/iqWPeyuDRToI3B/NvTFUGjzbizpI1o80jwKON
vHRI1nsxRhk82gb6e5LjpdgR4NFGctZ2HK5qGgEebaQvJVIqzHIEeLSRSaGP
2rYGjQCPVpJoZrHqSf1w8Ggln30W5aQfHQEercSvp2HJZ+/h4NFKri1gXBSP
HAEereRsefzBE8HDwaOV/NhkdCPkwnDwaCFkTk7NhLvDwaOFrLD0zPvDGQ4e
LUR1dF+7u+Nw8GghKWvK2dvCh4FHC1k4fq9rg8Zw8GghnuUxepZ4GHi0ECTj
W3Gjcxh4NBOO06ifU5SGgUczGcPK75ntNAw8msndqp4tW18ogUczsWyfEXNq
zDDwaCb18el8pTNK4NFMruanfO+IUAKPJpJn25M6Z5YSeDSRuxuM7l2wVAKP
JhLxJaBm6kQl8GgiOUXUMFpHCTyaSO/8TfccT4vBo4lIOYdM6fsnBo9GwtD2
ObN5vRg8GsmHKULVW/PF4NFIWl55XAsxEYNHI7ml+zBQSVEMHo1E4jvKeViH
CDwaybnJD5uMP4rAo4Hof6lgL3YXgUcDkWrMEUkHicCjgfQ8mGB3b5MIPBpI
v7WS6YeB40GPBlK/ZP1Shx9C8GggDrETrEfOE4FHA/F86qO23F0I+f8jDK8V
syXFQsj7H1nmmB7lvFsI+f4j+XYPHslHCyHPv0Tb0TwupUgA+f0lFQ+S5Rch
IeT1l4yca53nESaAfOrJcDv3UycMhZBHPTnO9F9+erMA6q8nJ1rT9tu/FUC9
dST5ks6l5IkCqK+O9N7irrM2EEA9dYR7ve3DxdEC6Kda4j1rn1eDjiL0Ty1Z
OeLX+b8ZitAvtaSrc0dqaIoC9EcN2WfWVXR9vgL0Qw2JW8Ywdhk4P1hwDYmM
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
nLq9FyaUg4cSrjnxavs3XE7+ByYkE0g=
          "]]}}}, {{}, {}}}}, {PlotRange -> NCache[{{0, 1}, {0, 
         Rational[-3, 1000]}}, {{0, 1}, {0, -0.003}}], Frame -> True, 
     PlotTheme -> "Scientific", FrameLabel -> {
       FormBox["\"Diode Reverse Voltage[V]\"", TraditionalForm], 
       FormBox["\"Diode Reverse current[A]\"", TraditionalForm]}, PlotLabel -> 
     FormBox["\"\\!\\(\\*StyleBox[\\\"I\\\",FontSlant->\\\"Italic\\\"]\\)-\\!\
\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) Charateristics of \
SOI-Dn & Dp device model with SILVACO TCAD\"", TraditionalForm], 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5., 5.}, {-0.5385764119, 1.734636149*^-13}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 0 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 1 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 5 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 0 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 1 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 5 V\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.813033840892527*^9, 3.820098868268483*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"a620a7df-3845-4d42-bd5a-6bd790d5722e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"NdataGate00", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 0 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"NdataGate01", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Green", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 1 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"NdataGate05", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Pink", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dn, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 5 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"PdataGate00", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 0 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"PdataGate01", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 1 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"PdataGate05", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<for Dp, \!\(\*SubscriptBox[StyleBox[\"V\",FontSlant->\"Italic\
\"], \"Gate\"]\) = 5 V\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Diode Reverse Voltage[V]\>\"", ",", 
      "\"\<Diode Reverse current[A]\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*StyleBox[\"I\",FontSlant->\"Italic\"]\)-\!\(\*StyleBox[\"V\",\
FontSlant->\"Italic\"]\) Charateristics of SOI-Dn & Dp device model with \
SILVACO TCAD\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8130336293624372`*^9, 3.813033639286005*^9}, {
  3.8130336714046097`*^9, 3.8130336716826253`*^9}, {3.8130337197725396`*^9, 
  3.813033786406665*^9}, {3.813033933553956*^9, 3.813033995944852*^9}, {
  3.8130340431601*^9, 3.81303407247876*^9}, {3.8130341069967036`*^9, 
  3.8130341118069787`*^9}, {3.8130341457082796`*^9, 3.8130341977074175`*^9}, {
  3.8200988855962324`*^9, 3.8200988974109087`*^9}, {3.8200990371077986`*^9, 
  3.820099115939229*^9}, {3.820099167422138*^9, 3.820099182283579*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"d7883de6-38b1-461d-a5ed-a49a691673c1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         PointBox[CompressedData["
1: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
fmfrG8dO4tL6RP5tvQ9uPXK0fvH7/NlK8wQ5Wt/gnDa9nmcvR+sfJ5MPryuZ
LUfrI9eM133eXStL6yeqxV6WVvdlaX1FaCh6y+19srT+4oDVnHTVZGl9ZuCb
kKZ0qwyt3wgW6WhIJ8nQ+s754l0/1d1laP1nZxDfZreRDK0PqYtpkHuSMrR+
9L78ZUB9vjStL935Ei82PVKa1p8MVx8aXrNPmtanosdsfLtJS5rWr85vfrwA
caRpfautYJnfYK4UrX+Zlt5wOR0pRetjZQsn8H44SNH6mdKJpE/1BlK0viYT
sNwxWVaK1t/6TDfJaJdK0vrcnrQHUraJkrR+d9JmKk/PV5LW95I2l4kmW0nS
+l+wkZEgT02S1gejwtpCT7Elaf1QUdFmem6hBK0vTj282i8mVoLWH4cX30hU
8JGg9ckf9SI5EpslaP3y0FTRaacWSND65kqZt7O9JSRo/bNu6OF2sXJxWh9d
Mbg8UvKFOK2f2m6OL/ULEaf1VRPybPpRR3Faf9VfMuj7e5U4rc/2ESv9p9PE
af32qKLL1Z5hMVrfPWZiJH33pxit/17TbFV4mSxG68N7ph831w0Wo/Xj7eS8
83gnMVpf1lgbpbfNWIzWn+3HlvmxVMVofZqbb41ZEmK0fp12gL1nS40orW9n
pReJct+K0vr3jVc7jJTviNL6uOuusJWep0Rp/bzh8l8WC21FaX3dU7X0qf4y
UVp/l5zPygqdLkrr8+ujY6sMRERp/T5cffdFzWoRWt8fOXzbyPWdCK3/v1I4
fpr9QIT2B5acNJnx7ZwI7R8oT5ZW67QXof0FgXeL8wYTEdp/sN7tLj68QIT2
Jx4FrNvTJC9C+xem4/zGKPUK0/5G/KoNd8/9Eqb9j9DvF1T1iDDtj6jrJGqr
RQvT/knOB97JzaeFaX9ldoxq1Pv9wrT/Eth+bZqzqTDtz2wPGDxppiVM+zff
/5y64zROmPZ3RC5syHg3IkT7P9iiqsG0Soj2h4J2614e+1GI9o/ua+oPyycI
0f7S0stnC1dcFqL9pznaXX/ueQjR/tSBq1mXVtsK0f6VEmv5V/m1QrS/Zb/5
cN9YDSHa/7oQvOHFaiUh2h8TOAdIPWIJ0f7ZmjN8T1TLof01f5+vHew8Du2/
LZ/0bF7XMw7tz5mwZ61WuMGh/TujJp9Jf53h0P7eDIPcikInDu3/iX+d5n/U
mkP7g9FiJ06uN+LQ/qHqZam0paoc2l9ck//1rr08h/YfI05maZIhNu1P6gUN
jdGoYdP+pWWTpE1+Hpv2N41vTFK8nsqm/c/C+ESj87fZtD+a5P0z6MYFNu2f
LmNNPl3ixqb91dseFjpLbNi0/+q8RnLBB2M27c+2Z8tNOLqYTfu33/Itrq+a
xqb93Xh/XoGuLJv2f3n6GTJWfSzaHx4/YKcZVsmi/WOXpKJnbbks2l/e1vqL
5fKCRfvPc9d++M6/x6L96cDk8wt/BrFo//rLoh2n0z1ZtL8tme5SkWHHov3v
G8Ui1nWbWLQ/Hjr2m9GCpSzaP7c3jd92ZR6L9tfjbfvJOGUW7b9zVIJWvRRn
0f78GBeVCKGGEQL9+yY09tzH1yME+vs/x8RgEjlCoP+foXl+XofbCIF8wG9f
QYvthhEC+QFdr3NPxswdIZAvcHRwS2sTHyGQPxBq9E8TqxwmkE+wUvtstY0M
E8gvpBc+S2q+Okwg3+CaYKESc3iYQP7hUbSkxDXzYQL5CJ9Gnmnm3GEC+YkN
jqsrpksNE8hXnN70dDypGSKQv2ArKqzxfD1EIJ/hlUWGnG8OEchvdK7XvBXt
OUQg3+H9zU5RbOsQgfzH2dTSoos6QwTyIdncx9bGY4cI5EeSAkIW63cNEsiX
VKz2nrgrf5BA/mRfh3Hm84RBAvmUQvHIvgUXBwnkV8zaJ8YUOw4SyLd0uE7f
/dJ4kED+Zd34tqGPaoME8jE5u+97DEsNEsjPzHRK9NveMEAgX/Py3MCl5g8D
BPI33zZMy378cIBAPscx9qx01LkBAvmd1y+E8mPsBgjke8yn7xmpXDNAIP/z
wcXSy0x1gEA+qFiYLKyRGiCQH1Lr3hQV2dhPIF/kHd+3xzunn0D+KENRriYw
rp9APqk8Yt6T7MB+Avml3jFT+mcf7CeQb+pqbX35wLyfQP4pfdVEIZOF/QTy
UXt9bLyVx/QTyE+F/VlWqNTbRyBflfdDdKPhzz4C+aur+jXaHml9BPJZJ1eu
0i2L7COQ37o81/3GYe8+Avmu1mZvn/m2fQTyXzcVymaJrewjkA/bKJzxc2R2
H4H82MdjN98oy/QRyJdZpijr/t3aSyB/9lpPfVxBfi+BfJqG4gVZm2e9BPJr
WHiKgsS1XgL5Nqmzu/0LPHsJ5N+qe8+qftrVSyAfF4OfmFes6CWQnwvb8DVk
jGovgXwdNnqXvF+ul0D+zlWicHN1Rw+BfN51FyfPk997COT3zrQZ9Rm+7CGQ
75MaSbMfd6uHQP7vxtOSdLnTPQTygQqmlyyn2fcQyA9eOTHoYW3WQyBfaJsr
tyRJu4dA/nCy7hfTeco9BPKJHgffuWazewjkFzmp1ZNca7oJ5BtlRW5E4Jxu
AvnHo5we0UVPugnkI8OMvyWtvtJNID/ZLGf79oBXN4F85Y7YE8+f7O4mkL+M
s3rsO2FdN4F8ZnffLOVojW4C+c2dkzQrDZS6CeQ79cOOL+ke6SKQ//xrdsvw
x+ouAvnQLJuzI29yugjkR4dnSYz98bSLQL7UjlXpIXy9i0D+dLbjd/sVPl0E
8qlx7iJP7tl1Eciv6k46pjDNvItAvlU+aVX7c50uAvnXKUutJfdO6SKQjzV7
l6OlIdFFID+r9+iYqlJbJ4F8bZLDPLWJPzoJ5G933NUN1M7oJJDPzdnXKrX7
QSfjIY1nHrjwJulSJ4F8r4LkuKmTj3USyP8Gnpe7d2VXJ4F88LO1P31U13YS
yA/P6gzPKNXsJJAvfuzfdjpWuZNA/rhX9/fDsyKdBPLJC2YKxng1dxDILx9Z
Uj8SVNRBIN/skG9bm5beQSD/7Pv89fjBBx0E8tFz2w/vswjuIJCf7vW42//2
eAeBfHXzR3LPbE8Hgfz1u9QpgfUmHQTy2V9zN/wO1ukgkN8ORzaXLad1EMh3
/zWj87quTAeB/PcuKSUfvZ52Avnw/Q4Bi0zL2gnkx4O29xyx/9hOIF/e9PpN
clRSO4H8+VrNybWdUe0E8umrrC1Nt51rJ5BfX/Gn606+SzvjIYunxWkGbtve
TiD/XmX856zYmnYC+fip9QLX1wvbCeTn8ysiDgZOaieQr78avEnsgGQ7gfx9
uhrBdl1tBPL5KQ+fdbiVthHI7889tqY07GMbgXy/eePj7OzkNsZDFic6OhvK
32ojsD8g+FdFqvP5NgL7B+rmXF9f5tZGYH9Bs6KklI1tG4H9B4UrZkkMmbQR
2J/Qqpqy5YFeG4H9C1lnX+zaO7ONwP6G73d/NiwStBHY//D5Toa68kgrgf0R
ddZX18g3tDIecniaW5nJxKJWAvsrRkrye/SyWhkPOTw8U1XXPr6VwP6MBNHm
tvhrrQT2b4S1TIwWOdNKYH+Hy/yASAeXVsaDiz9abhlbu6OVuR4uvn9Ru8Le
uJXx4eI70TmDHN1WAvtL2HcfKD+f0Upg/4lSXvB2T0Erc71cPIP1qW01q5XA
/pVP462k1/xsIbC/ZVnG/MwlT1sI7H+JiwtJsbrQwowHF+9c7pXsu7eFwP6Z
+MB6409GLQT21/RtKFqiOaGFwP6bWSOndr/qaWbGi4v328xSd/zazPhzse6I
jo3Ro2YC+3sW9DkVrznTTGD/j/mKoq4DNs3MeHJxkHz57iuGzcz9wcWe+0Sz
KpSaCewvqogIe7Svq4nA/qPaQaetMl+amPHm4m9buaqpsU3M/cPFSSpvunzP
NBHY3/Q5z9v+rG0Tgf1PzxwuHI3FTYwHD0+0yDxeqNzEePBwc4xt46S+RsaD
h6sUeGZRBY0E9l9p3UyK1ktsJLA/y+Ga67HyC42MBw/P+3ui2L39jYwHD/+Y
+zEwclUjgf1fDe9O2yaqNBLYH3Ykskz9K6eR8eBhT4tf8+RKGxgPHpZz0elx
f9lAYP9Zg17lVuFrDQT2p73utQ256tbAePBw0edPTsabGhgPHv4UmpGotrCB
wP43A+kxYjP5DQT2x8kEvhJZ0FrPePCwgsEeacvP9YwHD2+02Nh2J7aewP67
QKHeCVz/egL786Ligsb47atnPHh4fssOtuKqesaDh61MA0PyZtQT2P9ntirs
YLRIPYH9gVxpde1LlXWMBx+39ql8DsiqYzz4uDzZROLurTrGg4+zi75rVnvX
EdifqHFh0Qe0s47A/kXrBXcrH+A6xoOPXxxXN583uY7x4GOrgxNSCkdqCeyP
/Pyq9Fr4n1oC+yf/3DknYk9qGQ8+Lphx//bmqFrGg48v7xzS3utVS2B/poJx
BvvC9loC+zcjLL7N/4BqGQ8+vnbel0yaXMt48PFsK8WSi6xaAvtDlwdplymW
1RDYPxq0VHrOi4waxmP0er/k/Xa5VcN48HF8DpFY5VNDYH+q1PQPnxfY1hDY
v/pYzfyR5vIaxoOPT1ja1JrNqGE8+NjnoHb3WbEaAvtjXWpnJOXVVhPYP/v8
wXq5uR+qGQ8BjsJRPnEx1YyHAMc0yikvP1/NeAiwSdghy3rHagL7d2PVfA7c
Ma0msL/3d8+YxT4a1YyHAGdeN805LF/NeAjwuRke8926qwjsHy6u7VcI/F5F
YH+xXY6wKEmtYjwE+MDvoSX8iCrGQ4BT07tmeHhVEdi/HOwdvrVuZxWB/c11
600n7l9WxXgI8N6aC6ZKM6sYDwF2+Jg5s1iiisD+aUMh48U3GysJ7K/ueP9n
mntuJeMhwGEL0TbHxErGQ4BF25cFHA6tJLB/2zJUpyDYrZLA/u5x0krKrVsq
GQ8BDrxj+WMbqmQ8BLhWxejh7amVBPaPF+THmXJEKwnsL6+SV171qK6C8ZDH
PpJe3ftzKsj/AGZm6t0=
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1: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
qxiPCfglCnUSyKsi/wPeSudc
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         PointBox[CompressedData["
1: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
ewrj9wcl72ZXucTBeP1Bh31T77S8gvH5jcIG2o/FvIXx+IU2bJLrmpIC1/8L
dcdzhB1S4Xp/or/nvwstzYDr+4FCvdQyY7Lhen6gRUPWBoNf4X4qQRsvi7xl
FMH9U4J2bpXR+P4D7pdi1BNwKvdCGdwf39GWSXv9eyvhfviOBgc2CryvB/8i
NCq+JqWnFbwLUVdizqqhLvAtRH7nt6VFDYHnN7RxWYm8Ej/i+RWgF2fC6gJE
EM+rAL378jDaVwbxfPKRwOR1HzTlEc8jH9nnvyzhn4p44/8FPTdLmhc7BfHG
Ow+tyr6TdXEG4o1vLnI49ecqwwzxxvMzCpjZK4XnI974ZaOzC3YJV44f/zde
WehHs9fezHWINz6ZSCD+t8NXJ8Qbj3S02+rlmRN7EO/6P6GQ9rWpOz0R73o/
IuWHrmsNz8L1fUDWxnd2ugXC9aSizmBTLe4t+PwpyN9LoejhY/i8SSh4Mt+u
jET4fO9QjWh167ts+DxvUVGOwtcbv+Hvv0J3qvVi9Ibh78Ujn1ghlSF+zDt/
LHq+faWxjhzmne8R2q+k87t3Eub9+/so+aBw+oJZ8P9HoaXLjz67tQZ+fwVF
Xdu34ZkfHJ9GaqcHTD1ycerN8zNS9IvkrE43ka5oYk1/b8xurDLM/f+//606
X3yDx//Pv+/Klo0KE///9wXGCkWmNCP6+TzF/nTfPI/o5+9atPJV3Nz/Xx+6
7x8tPcyl17/+Y1vnP98PGJ8LzY9VF/lx6fh1jv1QvjCHS8c38Bze80aMS8e/
e9nvC5cLrKiP755Ud74IK+qntMbxj5KbFfU18GqeHWdgRf0Z6kNONQOz6f1x
piWNezt9Nr1/7NgBOOPybHp/WZbbCJ5wnk3vv1f7LhnoTJtN70+ZIyGM4/2z
6P1740vkgg3ps+j9fatA07ksZBa9/6POBa1Rd51Fvx8/n2uZr9efRb8/mpaz
jK4PWtLvl2RU5rZnmZb0+7elJczt7hVL+v3sXjZFfu9GS/r9lVu2ewbTwJJ+
v129v6X6D1rQ77+rxtfLGRkW9PmQe1o9Ny/Egj4/UPpzhRhnC/p8iS77dGue
rgV9/hxsRLee9pjT55Nd5g2Z4lRz+vwKSZJTSQs0p8+3kcyiis2rzenzb+mA
qFjiRHP6fCTI49P7RjP6/Hylrz55zSsz+nyd/FXH+tQxM/r8bf19K9vA1ow+
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
IYsHnrjk+GdUkf8BEvDUBg==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         PointBox[CompressedData["
1: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
YwfmOv/1pvT++7oozbePa0rvz3HLxRz/V2BC799mDdbTRgJM6P29NCkmKMTY
hN7/G3KGluFmY/p8mKF55Y78LWP6/GDrpuzTWGZMny/qrxhP/AaM6PPHY0pO
+vxYI/p8CrcvdDy7wog+v4ROh2nu6Z9Ln2/bBL2FWRFz6fPvTcV4cuDCufT5
aBuQd7a3aQ59fkY47BXzCp5Dn6/OEhJqMoZz6PPXNN/KobV0Nn0+KzxatE/F
ezZ9fu9V3PL4ueJs+nyPTXlYX/jCkD7/dVzT7+zZYEjnB0v8Q8OShgzo/CG/
JGP45k0DOr+Yt7JnMFzVgM4/8gw2FUkTfTo/uanwmenhpE/nL3f3xIzeHp5F
5ze/e8btHprNovOf6JcXyCqfmXR+NCvS2aY2fQadP4WMymTnj+jR+dWdrxsD
92M9Ov9SdFTwm3N6Op2faTgUJiz6OI3O3yZdKItPVpxG53cPmn9eH9g+lc7/
7OWbZt96rEvnh5FIYF07Q5fOHyv2f4lcazeFzi9/GO7I2xauQ+efZ3+lTWhu
1qbzU+ndLGNhE206f91om/JS5JQWnd/KiX8VPVGsSee/Dq0zd1upa9L5sZb/
OwGD/Rp0/rxNyGnFyRx1Or/WPZ57yk9Vnc6/p7bOT/P1U6Pz88ddpiMX8lTp
/P1R6btu2bsqdH6/qy3xOyt0Mp3/j/0l/vbozUl0fdCo1WK56ZEyXT+Y7hrd
p/G3El1fGMZEuaZNUKLrj/3OdvMfO0+k65POp5axYa8U6fpl6eUs2wZtRbq+
yRGa8UPvpgJd/yjdOzmXO1GBro/eX1U57x49ga6f3ghrvJhiOIGurwJiipZv
+iBP119vnxQJm+ySp+uzX8efHhGRkafrt/oWW/a053J0fRe30s9l4g45uv7b
uK7CbJOSHF0fkv2Rh85+5tL1498Dwp8XXuDS9WVakdx2tIxL15/auelu+pJc
uj5Vqs6dU/6RQ9evV8XDnIavcuj6VjV9Xqz7Zg5d/w4zV8gPTuHQ9fGy5c8O
HOll0/UzM9fyetEbNl1fiwxMqS0LYdP1t8eNy617t7Pp+nzb1mHRk8Zsun4P
tsoTGJRk0/X94M7gkmfVLLr+T5c7tPPBcxatD8hPfu2Wc4lF6wdfxFXHenax
aH0hYNZ4lvZCFq0/LJcoOblClUXrE8+sKzxf9svS+sXiYK/LoSmytL5hkv5o
5gRPWVr/eHj7dazmVFlaHzm781DhgwYZWj9Js3tfG3lXhtZXPC6pb23dKUPr
L1MyrpYHTJeh9RmHGouWtR3StH4T+nvHdPsn0rS+837xGhFvH2la/ykSXv00
aZ40rQ+l+L/S6xKXpvWjKu5vyTklUrS+pLtg+qXd4VK0/nS8vyjw6k4pWp9S
P2JuEzVHitav2s+dehgoIEXrWx0JHj2LPknS+pf9S8lPReGStD7mEbfNXmO3
JK2fRdZxBmdbStL62jxNL79xaUlaf5N238M4VilB63M5fvZVDx5J0Pod94Rd
zomTErS+92FV+a2xdRK0/qcjG3tGUU+C1gft+k81FTAkaP1wx5S16xTKxGl9
canDjxs998Vp/dHGccmdzQHitD7ZWuoRtWq9OK1fyoyMlefri9P6pp2vcdZ7
MXFa/+w8MknMrlqM1kdrFH7qrU4Xo/VTUaebDh+viNH66jereScyd4vR+qvd
VO+P2kvEaH12e8zsvcMaYrR+67pdOcNqTJTWd1UEpyi3fRWl9d/uG1flmM9E
aX3YvtBpvn+IKK0fbyi1sHfeI0rry76/wzl3bERp/XnWi/Q1i6eJ0vr0we6r
zMViorR+nVijrRlTL0Lr279dvF47vBOh9e+hNW19znEitD5+IC108O0JEVo/
91y8hnnERYTW108sQq4nFojQ+vuPSKuD3zVFaH0+Xt/o1kmmCK3ffzWLXuZT
J0zr+0S5X/BljjCt/z9rMrZbkiBM+wMjV2Z2KZ0Tpv2DkCBvEXNPYdpf2GI3
be1NW2Haf9h1dlHfQgNh2p949fGe2xw5Ydq/iNjho7F1gEn7G1/fCGV9/sak
/Y8djpaOAa+ZtD/iGxPofSCGSfsnbw0el0WfZtL+yqkLSIrtwaT9l65J3xNf
2DFpfyYz0k8pbA6T9m/yT/5a93wik/Z3xB0fX5QdF6L9n22lDkU3aoVof8hz
jsf1LR+EaP9ISe2b0uYUIdpfYp/W5l68LkT7T8ptO406fYVof6pISV43xEWI
9q88eoUPbV4mRPtb9/IWpm01EKL9L+tPh5+GKArR/thal65J/eOCtH8mZWKf
GNggSPtryw+ULF/+SZD23/SMgo5ZpQnS/twdt0t5TpGCtH9nsfGdyt0zgrS/
Nzdsc4naXkHa/5OZo3Qg21GQ9gdVPrnn3JgnSPuHciOFs4OnCdL+4spib900
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
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         PointBox[CompressedData["
1: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
aMgue3u8JuaPdyXStcm5eHoSjG8lag4cRCZaMJ4/0Bmv57uPaMH4VaB7rr9f
60yD8apAz2N+RzyeAePzHd1ZmiWgqgvjUY62/5pn7T0brr8c3bDtDHo9B663
DI0un+qXaQzXV4ouXXRLvWEA11OKWOdvpnyyhPupBK30NdgRYwz3Twmqsve+
/MYW7pdi1HHyvu/DeXB/FCHB5OsRTvZwPxSh/Ihcm0s24P8NnVinez5zBXh/
RcqLJm9+6QC+X1FKg+16qY3gWYiKH6U4BSwHvy/oxcIVZW83gdcXxNkmV5y6
Hnw+ox1R1VUe28DjMwrSSLfeswXG/xNCU3vXBm+B8eY9SE74edzZB+Obh3b1
P7jZsBPGMwcp2u5sktgJ45eNvhrMbTp0CMYrC+VJiDZpHobx+YjkQwcNrffA
eHxA9nbXDwcHwPVnIM0lFyKmH4brTUdPy3NOrDoN1/cOJYZrzl3iD9eThqbs
uj11+Rk4/1TkPqNg+pQgON8U5NstNugSBef3Bm2dGuRveRnOJwGt//RN4dUN
+P9fIi/zfHfTV/D/PUNzPkyxl3oAx49D64Mrw/K+w/Fi0IEXpwx/p8Hv30Xb
+/J81Ufg528gPfsK+5B6+PwC6l9uVHnT3YL//UnUs/oUznK1SIsKnZU6/ZuC
2ZTg9MV76v59bm9/mfu+34L+fuUBt+4SCQt6/IsprvM/lv77/88w32meePTv
/BzV1/V3nvh3/gZWmfaxm/9d34uysw+WzP93/QqjxVkhWv/GZ1hpm8c32X/j
l6c/3dCnGdHxfWoQomTxCtHxLzj38MfBM4j6HPP/2Vm5ClG/2S7KPnozEPXt
6PF8nD9oTv1lmt+tTy40p/dHzaUdDtG3zOn9c1M970XDAXN6fx1Odt+vZ21O
778b3j86Rsaa0/tzzZH9ovebzej9azRhTcFyYkbv7wnNl9R3nzWj97/yLcuX
SzaZ0b8Pi+12cb9mmdG/H9LwPHG+kBn9+zrqFHtuUaEp/fuLjc9dc/aWKf37
TD43zUx7jyn9+116wpy7z9yU/n132Ow4dEzalP79D8QHT2SWmtDnA2EwRMPv
mNDnx7rNToGau0zo88UzudnjjqEJff48qTEqZAmY0OfTjz3109Q/GtPn12IX
zuvG08b0+eauGT3GeJkxff4t/p5m380xps/HlBitcLEiI/r8XFFhFrvpghF9
vh5PDQ/6scyIPn8PVHlNOcwwos/npvVm5pM+zqXP78ELwq+++s2lz/dxvkea
QubMpc//xRU7fRc1GNL3g5uPzk21q4b0/bE0UzFG2daQvl8WOSk42fQZ0PfP
jm37bLLvGtD3U2H+kzEv7Qzo+8sz7L3elH59+n67ZVQ63uyWPn3/FbkJ71Gy
1qfvx4VP77kX/plD35/CQxfTQyPm0Pdr8ZSpV5wM5tD3r1UBN8i5bDZ9P7+p
lTR+fHg2fX9LFra9WD1+Nn2/27UsX+Cdqkff//dzKzLVNujR+cHuQ97dG0Zn
0flD5F1UaHNzFp1fFHo+md9qPovOP1Q+q8x6mD7z3/wkkXmiz2Umnb+oy7+5
vEhoJp3fRPnJSPpZzqDzH5f6tGd/juvS+ZHxqucPTdOn0/mT/1LlQ/ki0+n8
6rFKr4yY9TQ6/6o//fWceZgOnZ95fyo7HvNNm87fVkTqz3NQ1abzu7r06jEf
tk6l87/zo2bmIa+16PwwZl6QxYiwFp0/TjH1rIlYpknnl4/ChY5W35hC55/3
23cGZTdPpvPT3cdYF53nTqbz13ijaZe5JzXo/JZ7K+TOhEJ1Ov9dv3fvSPQE
dTo/TjCQ89y+dxKdP78pn+t6/8NEOr9O91o49qLqRDr/zk96NxTuO4HOz2NT
VDZlfFSj8/fAIf85G+6p0vm97VBStt/F8XT+z0moiGVcUaHrgw0ORi9l48fR
9UNWzmvVnrKxdH3RxxyfGaMwlq4/GF8cl6dtGkPXJ7/DA2enpSjT9YvRtn32
6pOV6frmzhfuocNXlOj651uBSNVeZSW6PpKNnChdEq1I109vJLQNo2cp0vWV
2Zc63Z/ZCnT9dfnRztp0DwW6Pjvhr6Z1laFA129yW68FZiTI0/WdPs5Kf7NF
nq7/fN2SPgqOlafrQ+fC96dnf+HQ9eObbqXqzlMcur600pQbarfh0PVn2AlP
xVopDl2fCmk9vXnmE5uuX4+9bJ796gKbrm9nKtpen7KeTde/J6pyul5psun6
WP7RTwGTbhZdP++Yfv9W+HsWXV97P2qbdyWCRdffLWdivOe4suj6/NM80VvW
hiy6fl81NTzkrTSLru8XZkjM8K1i0vX/8YW7j+5PZNL6wM4BT/Uz55i0fpCb
MmlJylYmrS/8VKwMb7Vk0voDZ03iB0U1Jq1P5FR7v7TrkaP1C70b5gE68XK0
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
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         PointBox[CompressedData["
1:eJxF23c81d8fB/Br3Gtzh5FRkYZsJZE4R8tI34qiNAlp0lBU2gMNhIZKSlNT
Q0McZKQUiZCGvee198/3232fX//0uI97fe79nOfn3s857/fraLh5O3gIMxiM
ehEG49////6Tx2cW+nRK81BKt9bqkLQuHi56Ih2y6LVlStPS1+NONPKwianj
+aAky5TyffKPrct5+O27/tKDo88XxfpYSBbx8LJe++gTbyxTPuf8+4+HH+b3
GhaNPn7f9e8BeVhVbYZO1FvLlH+PtvQ1D+u4l+40fWeZMnqw0SPy8PVFBXu3
jb7+1r+Hi+Xhfff5qSWjz0dd/vcfD899uHt86+jfj3640QPy8KrkXw1vki1T
/j3auBM8fEP4hseT0ef3//vx9vFwkwq+zBx9fse/h/Ph4YR9dcMKiZYpnv/9
42GtI088PxDLlNX/HZCHFaJTfWeNPu/w3wcc/Xx3vYObR5+3+e+EeXi361vh
pNHP89/hLHg45qL76oejx5/+3z8ebvEkE4pHx2fqfwfk4f2FQbeXp1qmjP/v
A/Jw5o+ft9JGn//v48nzsP9yJ4ODo8f/73CSPCwvYuybMPr4rwcPV3SNkfmT
Zinw4OKyYMXP45LBg4stzBae+icNPLjYbD7ffGwKeHBxelCr3aE08OBi848b
4qXSwIOLMxS+6lekgQcXL2xZs6Y+FTy4GPMtvxS/Bw8uXlY7KSzyPXiMvt/d
g9lGaeDBxRLLCl+uSgcPLp4weD5BKQM8uDjtuu5siXTw4GJpjtnPtengwcXR
VRHVZzLBg4vDNRaeHUwHDy5eH27ruD0DPLj4wb7JQows8ODikWcHP23JAA8u
vtFUc93rA3hwcYvwGcnDGeDBxQoxhT6OWeDBxTqrnJuyM8GDi2NTx3m8+gAe
XPydGV9umwUeHPzGh6lSlA0eHFzTV8cNzQQPDt4cfbX+bQ54cHD/nK9LzLLA
Y/R5njva8gk8OPil8YLfY7LBg4NNbH4qV3wEDw4uSh+4EZsNHhwcXX3yvlAO
eHBw+lhLv+8fwYODP0x+Wr35M3hwsEtzXLdpNniMfh7u6dj8XPDg4KBz5goZ
2eDBwWVfE9r088CDg9fXyL97/xE8OHi67vMgpzzw4GAVcWZw1Cfw4ODFnzP3
rc4DDw6WKLFSTf0MHhx81UNMc3YeeHBwq3kHacwBDw42yqkdH/MVPDh4SrH8
jOBc8ODggud9ATVfwYOND7kc2HAgFzzY+EjvTqmWfPBg46NFA6vQF/BgYzur
WTWXCsCDjc2dtz02yQUPNt688du0dQXgwcYeqT5Jl/LBg40dw8552hSABxu/
mEn0yr+Cx+j79/fb9xeABxvnxd2bdKYAPNg4MffSPqUC8GDjY55it+4Vggcb
aya+zsv+Bh5szNo4b49UEXiw8fypKbqrCsCDje0X2KtKFoEHG1/7+irydyF4
sLHbzjhrgxLwYOM1Q+Ld8wrBg40zflaePlACHmwcHSwfv7EIPNg4xVC0OKAY
PNg4/cZra34ReLBxSe+58nElMP5yuLdpxLmpGMZbDq+N+JDT/gPGVw6HlrXm
bi2B8ZTDN3e9jXAshfGTw8uj7FYb/IDxksODayf8+vkTxkcO7/n8oXB+CYyH
HP7kI1lk+xvOXw7/2u7hdI6erxy+NulxtWUZnJ8cXh+wBB8ohfORw9HHzsUl
/YbrSRZvmK8WFlsK148sblWxNQn9A9eLLG6J3WjA/gXXhyxW57lY3imD60EW
r4gOcg77Cf6y2GBExZ1XDt6yWMOtLDnzN/jK4pCGpDPrysFTFtu3fRiy/AN+
srgwhN//tAK8ZPFlwymdnDLwkcXxzcYZsyvAQxYrXVd5pFwGHjL4kY6N7otq
8JDBm/N9nhWUgYcMnrZ1qFmtGjxksJt8ib9cBXjI4Mg3oW6eNeAhg0O/HXhZ
XAEeMrhmx3mHyGrwkMFmzIgDe6rBQwYPW3507qsBDxm8Re1XQ3s1eMhg/smm
qmM14CGDe9+ic8J14CGNfcfkLqmtAQ9p3JK0IOltHXhI46J5/MCrteAhjSPM
XMJ068BDGn//cLL/Vj14SOMybszbxQ3gIY0bf1fvG1MPHtI4P3N+unMDeEjj
DNfr8/n14CGNey4r66Y3gYc0frfsYW9JHXhI4/lPz6q4toCHND7zz/0TnxvA
Qwq/rho7x6EFPKTwPCQkfL4RPKRwbIDMi6Fm8JDCXVv8+pVawUMKn73Mb7rY
BB5SeNjvWmleK3hI4euHjB4Ot4CHFH60UijMhQ8eUpi/0SE9sRk8pDDDyVPl
Zjt4SOFrSzd//soHDym83pTDrmsHD0l85NXjB+Gt4CGJXTb36J7tBA9J7LRL
slOaDx6SuHMwbvzpDvCQxM95jckSneAhiU++lVYq4oOHJM6UW7ZNrAc8JPGy
2fMUXDvBQxJfWOP99mAneEjiuFlXj9h0g4ckdrxTucOhFzwksXyT7sQXXeAh
iS+xVvrm94CHBD4cYM7W6wEPCWy55J7NzD7wkMC33dRKj/WChwTesEL9vFYf
eEjg4i3Jief7wEMCt7fofhftBw8JvHNlnWxaH3hI4OnOgWj9AHhI4G0tJaKz
+8FDAnf9kDepHAQPCax4PdxqfD94jL5+5+Y0TQbM18WxQ9cbd34veIjjyhfL
/VpGwEMcO5o7GhwfAA9x7PKm5K2IEBJ4iOPTFyTaAwbBQxzHXzTy8hp9/q+H
OEbtnK6pQ+AhjkXexWw1EkYCD3FsIfTMM3T09X89xPHBK/2nz46Ahzi+Unjp
/m4RJPAY/fsdi7RPj4CHOO54dcLqCwsJPMTwmJ7bKuEj4CGGg/N6Z5YxkcBD
DOcLCd8rHX2/vx5ieI5H1vmvo8//9RDDIca/js4dfb+/HmK46e3RTMbo8f96
iOHf69g9a0df/9dDDG+at872khgSeIjh7rEdF7xHX//XQwxz3G7NWSGOBB5i
+Inc5z+c0ef/eohh4/eBwpFi4MHCTrq+eeekkcCDhXP1UzO2jr7fXw8WnjzH
IvWwFBJ4sPCPxTfYB8XBg4XN2rwShGWRwIOF9cIjM3+LgQcLGyaeqjeRQQIP
Fl60oenHQynwYOHBsdFqKdLgwcJzw3d+nTD6+r8eo3+Pf3/slAYPFg4+/5pw
5JDAg4V9lnqFOMiCBxM/jej8ks5BAg8m1vL2V3KRAQ8m7jX2WzWNAx5MHP0z
MeS4HHgwcYveP6w1CuDBxMuiG44uYYMHEz/MnWyvLw8eTBz4XE0ziQMeTHwl
+V7pEiXwYOLTj1M9erngwcRqOTkyVxTBg4kDDourJyiAhyh++Wj5zh4l8BDF
9wLMDj2RBw9RHPjy+Uw5FfAQxZuKTk64oQgeorj8xQWJs8rgIYpD10z980cJ
PETx+hfL6y+ogYcoxm6LORHK4CGK51/MepWiBh6iONLTpnFEFTxE8dddmjt+
qoKHKF4neg4NjwUPUVxxsSxWQw08RHDOO6+4YA3wEMFPFppsjFYFDxF8q5M/
JlkdPESw++uWrq3jwUMEqwh5RktOAA8RbBXtkUjGg4cIvmg8u/uWBniI4Izw
l7sbJoCHCF51pS2pUQM8RPCPs8H30jXBQwTPsRUtmzQBPERwlM/LMPZk8BDG
3SoLVA9rgocw3ngxo9ZBCzyEsYmGwZZaTfAQxq/qRZjdWuAhjJMmf1K3mwIe
wrgjw2GvvjZ4COOTV3LvbZoCHsJ4e6QKy1IHPITxpNWK4uLa4CGMY0xaMjha
4CGMp4cGjZXXBQ9hbGcUILZVFzyE8bQfGw466IKHENbwXkq264OHEJ6s1n7A
VQ88hHC2/1LvaH3wEMK84Ibp+w3AQwj/5LY7/aMPHkJ4692VUWgaeAjhth3W
d12MwEMId9Z+/eRkBB5C+Mlv3/Jd08BDCNdUJx+4OwM8hLDcQpN916eBhxD+
KGt+rWAGeDBwatIPz77p4MHAd6coPJ8zEzwYeI3rp83BJuDBwIfmC41Em4IH
A59K85OcagoeDBxkpjmsZwoeDPxkosO8PebgMfo4yL5okRl4MPC3szHKwRbg
wcCslpsbnpmBBwMnZn9dEGAJHgyserys9eks8GDgk7HnyXYrGP8RFKD4cEef
BYz3CFp43ah4oRWM7wiyY7iksixgPEcQ2yT++Op5MH4jaNxuovJ9DozXCPrj
bVg7dQ6MzzByajj0RnMOjMcw6mfpPr1iC+c/jCanxN8KtYLzHUYHLDVtj9rA
+Q2jl1PmHHkwD85nGJ0+WRJovhCupyFU2D5j8hhruH6GkGY8z9JtEVwvQ8hZ
J8FeyRaujyEUZnyS7LSH62EIXVv87nLYIvAfQrvTGi9xFoH3IDrScDT3xhLw
HX3MDAy3WwSegyhy55Yet6XgN4guGC/rf7IEvAZRtvv2f+Y4gs8gmjyXnb3J
ATwGUe6EYPuPy8BjACXPu7D/+zLwGEDMwLVl/U7gMYB21Vg4Vi8HjwE0oPkx
pH05eAygybz5s/NcwGMA9cd4jqldAR79KPkn0s5yAY9+tGLWcPipNeDRj9Yu
49/9vQo8+tGiUzbbNq4Gj36kvOh57vB68OhHjmO/3RRaAx596NSnHSwxN/Do
QxWFDOOjruDRhxJmhRrKuYFHHzqrvVdffSN49CGlc9GpfRvAow81/yhaK+kJ
Hr3o5dwvaXc2gkcvulW68tifTeDRi442pBuzNoFHL7pwwnxyxGbw6EWxl0wD
328Bj150sd7H7osPePSieCbr7mwf8OhBLiVRT+y9waMHyRoYOubvBI8e5F/t
Ztu8Gzx6UODC5copu8GjB43XeieXsBs8Rv++ep6hjx94dKPBFXsDTfaDRzeK
G1bz/eIHHt1oa8nQlx0B4NGNChoeB6P94NGN6u4uTjl0FDy60fWjb5RdD4JH
F8rwV3nocRI8utDCvTHpHofBowvdOHjziHcweHShm50W8zOPgUcX0nqwT2RD
EHh0IUWFs/Obg8GjE4W7cPvlgsGjE0U//WwUHQoenWh70wNL/TPg0Yn6pwVk
748Aj040oULlfnQIeHQib4NLzUWXwaMTueV9qp4XBh4daKqmEL/pCnh0oObb
tlMLLoJHB/I6vERmJAY8OtAa7aHIt1Hg0YFWGWbcYcSCRwd6Ul3bvD8GPPgo
fG/snAl3wIOPnj0w0/t2Gzz4qMvicWrZHfDgo5u+j/We3QUPPmoLeTyn8gl4
8NG79SURenHg0Y7cHMLeFMeDRztyNznx4usz8GhHZ3OSrzi8AI92dPxMi/Sr
l+DRjnj8SY+aEsCjHWlGeilovQWPNnT6cZ+KVhJ4tKH2M9ZYPxE82pCXXMHS
6QQ82lBovd4tIwIebWjea+NBuSzwaEOGEva1gSng0Ybepa0cWPsJxr8VrcYh
q+dkwni3IlmPJIvHOTC+rejLkZyL6z/AeLag1l9xPnKFMH4tqP/7ChHbXBiv
FqQYGTAtogjGpxm5eK2b/jYPxqMZSS7OOXn/J5x/MxKeWjgjvQjOtwkFPHO8
veIPnF8Tigp6rqZfBufThOQfGzxI/APXUyP6uu7y4qB6uH4a0fJk3ZL6Srhe
GpHEVT9puya4PhqQutbNgMdtcD00oN0bfkvbN4F/A5qq+0fevRO861HAbqZB
TQf41qOdfJ+TqxhY4FmPprSaZKzvAb869ObQ/Oujt3GBVx3y3OBb7iaEBT51
KPxT1eKPIljgUYf2TJFEx0cf//WoRbo3dpBOFhZ41KKi6l27Bkef/+tRi/Sd
pryplcICjxpklalvfFEMCzxq0Bznzj4ZWSzwqEEfptgu2y2BBR7VKClhbPpH
LhZ4VKMqy7HLNstggUc1UvYePNnBwwKPKnRM8Z9Uaw4WeFShKaFJPcIKWOBR
hc7noA1bRl//16MSfdzqreSvhAUelei05evvRcpY4FGJplx8mfJ29PFfjwrU
Vn62jj0WCzwq0NSBaxd3qmGBRwXS1vHqTxl9/NejHJWu/WmH1LHAoxyVvz8d
HakOHuXoeYAKa68mFniUodfr9Gx8JoBHGTIqXfWDPxk8ypC1WaKMnRZ4lCHN
E6dcE7Rh/P8g+2cjZbJaMN6/0Qy9B6db9WB8fyPl4oaNlfownr+QeEzr2Xh9
GL+faMaucvNzhjBeP5F69fTiwRkwPqXoku1to4czYDx+IDFf7fiNpnD+P5Db
L630DxZwviWoo81a6IEFnF8xeho4uWS/FZxPMXLpMNuuPh+upyIkUrg+cpYN
XD9FaJnB+R3udnC9fEdyagMfL9vD9VGIvqeVvDd2gOuhEB37tK7n/VLwL0Cv
VHQ2t6wG729oqdZd9eAV4PsNfRi4ctvWAzzzEdI9/0JmDfh9RWo6NRKdG8Dr
K7IMnfeZsRl88hDTPPDU8i3gkYfabiybKLwdxv8LipTVF3PcDeP9GYWVOV9z
8IHxzUGGivoSnH0wnh+RvaT/oWO+MH7ZaO3YB7qRx2C8PiCR479KNX1gfLJQ
w+2JSy5HwHhkoDVikUvFfOD809FNQ69nujFwvu+R5ZZlR57tgvNLRSr7M9Vv
3oXzSUH6LzbYae+Dz5+MxoX53/RNgM/7Drn13KnZfAw+3xt0p8dhfTiBz/MK
JanpzDENg/d/gRT/PDe/lg/vF48mL3jh5BcDx3+M+Pu8Wgyq4Xj3URN7+jiJ
9/D3t9DWlIszvipaCV4fjRT4eVfGtcDzEUjSR4aTd8pK8Pg4CveTZQXPskq5
FmyUrFegYBH2Bv/jn/r/59cqnT1dITGH/r1C3/opXXxMjy/0OHxmz8j/3/9V
wE0J9ej/f75DOh+0QqL+//l1Tlxw3+H6//MTWzb0zsj+/+eP29GY+4b/H5+F
Nb/nOvP+P352JdKHrboQHd92RmjqV3r/SkZ342Jc6+j8JgWlsjao7fNC1M/U
88FlT2NEfSXD/Qo+SiLq/8KqK9601JJeH3EjrLq4J5b0+jkYEYz8D1nS6+tD
Z629jYMlvf4GouZNl5lkSa/P9l9J27f0WNDr90CaZFVVlgW9vnd/XvmmJsqC
Xv8bo0+If9xsQb8fLsxXKmNnW9Dvz0+Ho4/KpCzo90vC2nlDXels+v0buO+w
rjxuNv1+Ktu6jjnkP5t+f6+c8opSsJ5Nv9+XXdzyNsnPpt//qbzYsMgyc/r7
YHni3I6hB+b092PdHz2+3R5z+vuSXxYxJgSZ09+fN7fe9L4UM6e/T2mmL95F
f5lFf7+Gn0dZSETMor9v5jvDK+VWzKK/f7f7nCWPqcyiv49WUsp+VqVm9Pfz
s/MpaZsoM/r7urVGV9HH2Yz+/u7TyFRM4JrR32dm8Hg/yRxT+vut8139u8cx
U/r7PufsR8dsU1P6+3+z6ctNs6aZ9P7wdNK93LRrM+n9IyjxW/muRTPp/eVi
zNG5rgMm9P7THZ1/PvauCb0/rWJaNy13MKH3L9+CFRkRAzPo/e3B2n1NAbEz
6P1v4icxJwO7GfT+ONz3STWz1ZjeP5vb54WsjTCm91dppSpfnqkxvf/O9o7m
D/2YTu/Pzl7hK2YETKf3b1LIWJA7bjq9v3+6OD3+D5lG7//JpjtU/ddPo/OD
rOqoloeMaXT+oPtiXNnpGCM6v1C9qXtyMjai84/uivVK5/4Y0vkJa3mmnaq7
IZ2/bPRzi/YQMaTzm+dP21Suzzeg8586zYlCfcf16fzo0NJaopehR+dPvUv1
K6+x9Oj8Sj1treIjW106/5JZ+XtW/DkdOj/bsVPrw49CbTp/0+KIXpk2XpvO
71LCF1Us2DyVzv8+V3mpRido0fnhTos9sy6LaNH542WiaXx/yRQ6v2xVDlqy
7dpkOv9MKW2/m1Y/ic5P+ePFJmTNmETnrxFJ+ofyj0yk89vYKdccDnzRpPPf
71mRq06radL58XZfm5d9WyfQ+XPkNKYXP0WDzq9zZCc+T1TWoPPvcMVhZryf
Op2fH05Id9FJHk/n77PQt4LxV8fR+f2tviDzpDNj6fy/YtMth/JQNbo+MI53
lTx6T5WuH+rKksskvqnQ9cVZB11HZzkVuv7QxMkVg6uU6fqEadGTdfDVGLp+
aYjZcsJJfQxd3yhrjNNUjFSi65/7lxYmbpRXouujvD217WrXFOn6KX1FWq6u
viJdXymWvZkUl6lA118T8kJfZXgo0PUZiSz2ypFUoOu3aVmbbmi8lKfru21M
btVsd3m6/jscLPTmjpI8XR9KO5O73V94dP147NbHrrwgHl1fvhO1cq615tH1
Z6WYkU67OI+uTz19GfMf53Dp+vVlmPrRmvNcur5t2dNauXEVl65/T0p+fsmc
zKXrYzwQWHeRz6HrZ7XQaYf6Uzh0fR0nFcCSCePQ9be6foj+MzcOXZ9vNZTc
ljuDQ9fv34Tf37GX5ND1/XbxtEZeGZuu/538l5lzXrFpfSD0mOmiaSFsWj/w
DmW6enqxaX3h4Z5ZY6LnsGn9Ydrq/KWfxrJpfWKidQ4nrUOO1i+qdIR33Xkk
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
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 2}, All}, Frame -> True, PlotTheme -> "Scientific", 
     FrameLabel -> {
       FormBox["\"Diode Reverse Voltage[V]\"", TraditionalForm], 
       FormBox["\"Diode Reverse current[A]\"", TraditionalForm]}, PlotLabel -> 
     FormBox["\"\\!\\(\\*StyleBox[\\\"I\\\",FontSlant->\\\"Italic\\\"]\\)-\\!\
\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) Charateristics of \
SOI-Dn & Dp device model with SILVACO TCAD\"", TraditionalForm], 
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -39.326592670639954`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 5.}, {-39.326592670639954`, -0.6188258947734798}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 0 V\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 1 V\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dn, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 5 V\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 0 V\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 1 V\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"for Dp, \
\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"], \\\"Gate\
\\\"]\\) = 5 V\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8130339589229717`*^9, 3.8130339976259484`*^9}, {
   3.8130340448991995`*^9, 3.8130340734948177`*^9}, 3.81303411340307*^9, 
   3.8130341516356187`*^9, 3.813034198653472*^9, 3.820098868695507*^9, 
   3.8200991170132904`*^9, {3.820099168373193*^9, 3.8200991835186195`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"7312b262-d80c-4806-9f15-8a66e761c107"]
}, Open  ]]
},
WindowSize->{1920, 1038},
WindowMargins->{{Automatic, 1010}, {Automatic, -8}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (2020\:5e7412\:670812\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"64fee968-0d1f-4187-8437-49e308197b2c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1973, 61, 234, "Code",ExpressionUUID->"ae6a0406-d47a-4e43-9656-13918854110e"],
Cell[CellGroupData[{
Cell[2556, 85, 364, 9, 65, "Code",ExpressionUUID->"1a224041-9b22-4c9c-8a02-0c7443a473cb"],
Cell[2923, 96, 685, 14, 30, "Message",ExpressionUUID->"cda9cb40-8d1b-4de9-b826-1ad4e2eeb113"],
Cell[3611, 112, 403, 9, 43, "Output",ExpressionUUID->"ac82d2a9-60c4-47ab-8d7b-3b70e58d04d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4051, 126, 218, 5, 65, "Code",ExpressionUUID->"21aaac8f-66b0-4a55-90a3-21af3ee84515"],
Cell[4272, 133, 452, 10, 30, "Message",ExpressionUUID->"af94531f-6e18-4df2-9da4-2681d30b8087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4761, 148, 570, 16, 65, "Code",ExpressionUUID->"a4415827-a4fc-4f6e-9501-23699d19e68b"],
Cell[5334, 166, 665, 14, 30, "Message",ExpressionUUID->"51077c4d-2aa5-40e4-9293-6b08fd493151"],
Cell[6002, 182, 862, 16, 30, "Message",ExpressionUUID->"818ea874-c207-4b89-86a0-dd75a2fc1fe5"],
Cell[6867, 200, 535, 14, 43, "Output",ExpressionUUID->"fa07b5f7-18ee-4e61-847a-f912f168c6ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7439, 219, 546, 16, 65, "Code",ExpressionUUID->"14e85d2d-2e2e-448e-8eae-0630459399b2"],
Cell[7988, 237, 887, 16, 30, "Message",ExpressionUUID->"9c6927db-ad0a-48c7-be17-ac324e85fa32"],
Cell[8878, 255, 894, 25, 43, "Output",ExpressionUUID->"23e15dbb-1341-4f17-b12c-1b4e76880bb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9809, 285, 831, 22, 65, "Code",ExpressionUUID->"2ff5da9d-4866-469c-9de3-577a06bcee99"],
Cell[10643, 309, 440, 10, 30, "Message",ExpressionUUID->"7258a66b-157e-4dee-8711-7345cf95878c"],
Cell[11086, 321, 697, 13, 30, "Message",ExpressionUUID->"77f79422-92cf-4114-84da-2430916fdcc3"],
Cell[11786, 336, 697, 13, 30, "Message",ExpressionUUID->"3cb167ef-083d-47a6-bf29-a05effa37078"],
Cell[12486, 351, 389, 9, 30, "Message",ExpressionUUID->"afb501d1-bf88-4fbe-adb3-9b97f0a9f4d1"],
Cell[12878, 362, 700, 14, 30, "Message",ExpressionUUID->"86e300f1-ea76-4908-af27-427c719023b0"],
Cell[13581, 378, 455, 11, 43, "Output",ExpressionUUID->"355f3f9e-dbd9-4e60-8ecf-014407bc03ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14073, 394, 4117, 121, 114, "Code",ExpressionUUID->"24237943-3b00-478d-93b9-8897adfaffa5"],
Cell[18193, 517, 24391, 426, 311, "Output",ExpressionUUID->"c35f91d2-638f-4a64-8f00-6d9e2ee3e580"]
}, Open  ]],
Cell[42599, 946, 356, 9, 57, "Input",ExpressionUUID->"bc37dcb7-0191-4cd0-96e8-e40d28e39614"],
Cell[CellGroupData[{
Cell[42980, 959, 3399, 101, 330, "Code",ExpressionUUID->"b971577a-b5ea-4657-beb8-1c5bcdc2c45d"],
Cell[46382, 1062, 458, 11, 30, "Message",ExpressionUUID->"29cb3a62-6f70-4641-8a98-7f0e6cf89c9b"],
Cell[46843, 1075, 458, 11, 30, "Message",ExpressionUUID->"3c9a260e-0975-474c-9371-afd73d075cff"],
Cell[47304, 1088, 458, 11, 30, "Message",ExpressionUUID->"ab3f0a4e-adbc-4e4f-a4b6-272b540d4fa4"],
Cell[47765, 1101, 458, 11, 30, "Message",ExpressionUUID->"8cf49cb5-0944-4c4d-a16d-9f1b274cb50a"],
Cell[48226, 1114, 458, 11, 30, "Message",ExpressionUUID->"3b454376-7b1b-434c-8a48-d3423a37fb32"],
Cell[48687, 1127, 456, 11, 30, "Message",ExpressionUUID->"718f4983-d6e0-4aac-92ac-a93c0d31da90"],
Cell[49146, 1140, 458, 11, 30, "Message",ExpressionUUID->"81eb2061-11b6-42fd-b810-c9219dbcf1b7"],
Cell[49607, 1153, 449, 11, 30, "Message",ExpressionUUID->"b260fc87-d40a-47c7-856d-7ac9cf2082e9"],
Cell[50059, 1166, 449, 11, 30, "Message",ExpressionUUID->"352f4657-8916-4086-a9a5-cd1cef0a1ea7"],
Cell[50511, 1179, 448, 11, 30, "Message",ExpressionUUID->"bb676c8b-5032-4ced-8888-61556214434c"],
Cell[50962, 1192, 448, 11, 30, "Message",ExpressionUUID->"834e68c8-1bd6-4b67-a967-51ed08163b6d"],
Cell[51413, 1205, 446, 11, 30, "Message",ExpressionUUID->"0f057d10-0e2b-424e-8c59-47bf7946ec16"],
Cell[51862, 1218, 452, 10, 30, "Message",ExpressionUUID->"02b367fa-4a9e-46a9-b4ac-01e6a6e58e7a"],
Cell[52317, 1230, 700, 13, 30, "Message",ExpressionUUID->"d3e65600-97c4-4c61-b1a4-e58b610ef5de"],
Cell[53020, 1245, 387, 9, 30, "Message",ExpressionUUID->"748745d5-aa67-4547-8161-b2a3bb440ad3"],
Cell[53410, 1256, 705, 14, 30, "Message",ExpressionUUID->"0f3a969a-8885-4167-a6f0-bc53464a5ed2"],
Cell[54118, 1272, 699, 13, 30, "Message",ExpressionUUID->"9d11e982-0dd6-4876-b061-ae7684140f8d"],
Cell[54820, 1287, 389, 9, 30, "Message",ExpressionUUID->"7a23a6ac-26ba-44e2-9fb8-0d316a3cbe4f"],
Cell[55212, 1298, 702, 14, 30, "Message",ExpressionUUID->"f9bbc92b-0934-4dce-b3d1-075dc8ecc4ca"],
Cell[55917, 1314, 699, 13, 30, "Message",ExpressionUUID->"242cafcb-812b-43f9-a510-e83ff6944326"],
Cell[56619, 1329, 455, 10, 30, "Message",ExpressionUUID->"1ed1af9f-aac8-4645-89e1-2deed16ed48e"],
Cell[57077, 1341, 389, 9, 30, "Message",ExpressionUUID->"024043ed-d51b-46ac-bef6-5e0144a80fda"],
Cell[57469, 1352, 457, 10, 30, "Message",ExpressionUUID->"22475daa-0a27-49ee-9ec4-2fae479e13e5"],
Cell[57929, 1364, 704, 14, 30, "Message",ExpressionUUID->"4e41d7b9-d1ed-4bc5-a93e-b3723ba3a977"],
Cell[58636, 1380, 461, 10, 30, "Message",ExpressionUUID->"b8b955d2-ba78-4b9f-9096-0ad78d515696"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59134, 1395, 2757, 75, 65, "Code",ExpressionUUID->"21d630fb-89c9-4878-b24f-147896da7bdf"],
Cell[61894, 1472, 698, 13, 30, "Message",ExpressionUUID->"e476cee5-0822-498c-8f73-8fb5f16b30a9"],
Cell[62595, 1487, 389, 9, 30, "Message",ExpressionUUID->"baf424e8-08e4-4b86-ba9d-61b197baa8df"],
Cell[62987, 1498, 705, 14, 30, "Message",ExpressionUUID->"31f9b9f4-4e45-4c20-a662-9caff0503144"],
Cell[63695, 1514, 698, 13, 30, "Message",ExpressionUUID->"23742b8b-31c5-4a14-8330-0ec7c08e33ac"],
Cell[64396, 1529, 389, 9, 30, "Message",ExpressionUUID->"5dd0ded9-dcf5-458e-b817-0d90adcdb42c"],
Cell[64788, 1540, 705, 14, 30, "Message",ExpressionUUID->"7ddfe206-1f86-43ae-9913-9b7131e2c5b7"],
Cell[65496, 1556, 699, 13, 30, "Message",ExpressionUUID->"f1f21609-f788-43e9-a7ae-ba5d23843d3d"],
Cell[66198, 1571, 453, 10, 30, "Message",ExpressionUUID->"83971006-5d3a-4dbe-bd25-f7cf2d2936f1"],
Cell[66654, 1583, 387, 9, 30, "Message",ExpressionUUID->"f3a0364e-e783-4ae5-82c5-11690f784b6b"],
Cell[67044, 1594, 455, 10, 30, "Message",ExpressionUUID->"77b8245d-ac19-49ff-8629-03a3f3235c1e"],
Cell[67502, 1606, 702, 14, 30, "Message",ExpressionUUID->"57b13a75-02ab-440f-9b51-05cb93293a57"],
Cell[68207, 1622, 461, 10, 30, "Message",ExpressionUUID->"6e240482-3020-4a29-b8f9-6cc6868db8a4"],
Cell[68671, 1634, 3979, 62, 108, "Message",ExpressionUUID->"63099c8d-2a32-4743-935e-568d77b21fa1"],
Cell[72653, 1698, 3671, 101, 135, "Output",ExpressionUUID->"6b7469a2-df77-4b03-9d60-0f8b113c50fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76361, 1804, 2944, 94, 306, "Code",ExpressionUUID->"d60d416b-4115-4fb9-8d04-c1281fe0a388"],
Cell[79308, 1900, 475, 11, 30, "Message",ExpressionUUID->"783ab3f4-cfe7-4bef-8378-d11738f95a91"],
Cell[79786, 1913, 477, 11, 30, "Message",ExpressionUUID->"75830568-f523-44f0-9477-daecc990ea0c"],
Cell[80266, 1926, 477, 11, 30, "Message",ExpressionUUID->"2e40cf53-cab0-4cc6-9113-80198050ee3a"],
Cell[80746, 1939, 475, 11, 30, "Message",ExpressionUUID->"8a16f306-600e-4a7a-bb4e-1146429a7970"],
Cell[81224, 1952, 475, 11, 30, "Message",ExpressionUUID->"32f5822c-e136-4535-b718-e919b535ebd5"],
Cell[81702, 1965, 477, 11, 30, "Message",ExpressionUUID->"7ac23756-d05d-4b0b-91ed-d66b3dc432fd"],
Cell[82182, 1978, 475, 11, 30, "Message",ExpressionUUID->"dd1fc18c-cd6a-4304-9983-7a01fcaecec3"],
Cell[82660, 1991, 471, 11, 30, "Message",ExpressionUUID->"e186cf02-5f59-4f02-84a3-6ccf5ce00219"],
Cell[83134, 2004, 471, 11, 30, "Message",ExpressionUUID->"3d0c4a1b-c1a3-46c2-b556-34af6fe3e90b"],
Cell[83608, 2017, 468, 11, 30, "Message",ExpressionUUID->"37c44724-4317-4ad8-90fa-d1a6277896f5"],
Cell[84079, 2030, 467, 11, 30, "Message",ExpressionUUID->"ca55f019-051f-4817-9f93-2795f0ea9085"],
Cell[84549, 2043, 468, 11, 30, "Message",ExpressionUUID->"ba3e426c-68f0-408c-9a86-7ec52dff99af"],
Cell[85020, 2056, 477, 10, 30, "Message",ExpressionUUID->"7f826483-b0ac-4b09-b933-007e9e41b859"],
Cell[85500, 2068, 723, 13, 30, "Message",ExpressionUUID->"ae2c8d90-0faf-4a78-9d52-27d9a8722913"],
Cell[86226, 2083, 410, 9, 30, "Message",ExpressionUUID->"163634cf-1d84-4067-912f-ab4a19596d00"],
Cell[86639, 2094, 728, 14, 30, "Message",ExpressionUUID->"6948ecb9-8b7e-4560-b9a8-ae42d1e63e6f"],
Cell[87370, 2110, 722, 13, 30, "Message",ExpressionUUID->"b06c34b7-27f8-47c4-8c35-eb56f58befae"],
Cell[88095, 2125, 409, 9, 30, "Message",ExpressionUUID->"41899987-66a1-48e0-a5ea-e9924f4fe270"],
Cell[88507, 2136, 727, 14, 30, "Message",ExpressionUUID->"20650be8-a3d6-43c8-b635-a1d5b1630a30"],
Cell[89237, 2152, 722, 13, 30, "Message",ExpressionUUID->"e4865260-8859-4bf8-8b0f-a6c437ef6a00"],
Cell[89962, 2167, 478, 10, 30, "Message",ExpressionUUID->"55f3d934-d4b5-41dd-966f-f30d57525acb"],
Cell[90443, 2179, 410, 9, 30, "Message",ExpressionUUID->"72bf0014-085d-428c-b494-853dff7154b0"],
Cell[90856, 2190, 478, 10, 30, "Message",ExpressionUUID->"cb2f2b74-87c8-45ea-af4e-c37bb8bce354"],
Cell[91337, 2202, 725, 14, 30, "Message",ExpressionUUID->"b170a49e-bace-4547-88d8-f386fa85a8ea"],
Cell[92065, 2218, 484, 10, 30, "Message",ExpressionUUID->"9fc50057-63b1-4488-bd88-52a7df672955"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92586, 2233, 2524, 69, 162, "Code",ExpressionUUID->"98b8f6c7-7e30-4200-be8c-cd1f2332bb3d"],
Cell[95113, 2304, 522, 11, 30, "Message",ExpressionUUID->"5c7bf93d-1311-40fd-a949-e45f7991702c"],
Cell[95638, 2317, 447, 11, 30, "Message",ExpressionUUID->"fd2abd75-aeda-4e6d-a21b-55aef3afa972"],
Cell[96088, 2330, 521, 11, 30, "Message",ExpressionUUID->"1f1ab97a-13e3-4de6-966b-7b3b17017c7a"],
Cell[96612, 2343, 449, 11, 30, "Message",ExpressionUUID->"5067a243-eb6e-4b2d-85df-fc44b7e6ac4c"],
Cell[97064, 2356, 698, 13, 30, "Message",ExpressionUUID->"ae17edfd-a451-4df4-a6fb-5dc62d57f4dd"],
Cell[97765, 2371, 388, 9, 30, "Message",ExpressionUUID->"a9ce673b-45f7-4a6a-999e-d7d8833d4972"],
Cell[98156, 2382, 705, 14, 30, "Message",ExpressionUUID->"44912f55-0ba3-4881-b959-c9ceda5723ba"],
Cell[98864, 2398, 700, 13, 30, "Message",ExpressionUUID->"5d11fb79-629e-4202-bc8d-43d266cfa59c"],
Cell[99567, 2413, 390, 9, 30, "Message",ExpressionUUID->"52a40378-084d-4fd5-b762-5fffcdcf8cea"],
Cell[99960, 2424, 705, 14, 30, "Message",ExpressionUUID->"ceaa0839-a9cf-4be6-b01b-46f7751d2c9c"],
Cell[100668, 2440, 2102, 34, 84, "Message",ExpressionUUID->"4c4ea783-b659-4cee-93ec-1930a9b714bc"],
Cell[102773, 2476, 2006, 51, 99, "Output",ExpressionUUID->"b361f92c-f33c-4876-8683-b800faf7c880"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104816, 2532, 5730, 170, 210, "Code",ExpressionUUID->"658abc23-98fa-4a2f-a11a-3da49d72c6c3"],
Cell[110549, 2704, 28080, 513, 303, "Output",ExpressionUUID->"8bfcf37c-c5fe-4fcb-818a-c6464b1b6863"],
Cell[138632, 3219, 46398, 780, 278, "Output",ExpressionUUID->"d466d7b4-0336-495a-936c-63b5aa2188b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185067, 4004, 1077, 30, 65, "Code",ExpressionUUID->"589a1d97-b709-44d3-8864-224e9cfa80db"],
Cell[186147, 4036, 1957, 39, 432, "Output",ExpressionUUID->"49d1345e-51b8-4e9e-8f32-43f06830f9fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188141, 4080, 3603, 108, 162, "Code",ExpressionUUID->"d3d0c4c0-da27-4c5a-a011-d307e3d34485"],
Cell[191747, 4190, 45420, 768, 263, "Output",ExpressionUUID->"7311d780-2bfe-4353-bc72-19eb594d6b9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237204, 4963, 4263, 112, 65, "Code",ExpressionUUID->"d64dbf4b-15a5-4822-8a62-6e82e1b95585"],
Cell[241470, 5077, 124870, 2221, 267, "Output",ExpressionUUID->"b9eedec7-5112-4237-870c-a1def48ef71a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366377, 7303, 4109, 110, 65, "Code",ExpressionUUID->"15ebd1d2-fb16-4995-8fd9-1b7511139f31"],
Cell[370489, 7415, 124581, 2216, 288, "Output",ExpressionUUID->"a620a7df-3845-4d42-bd5a-6bd790d5722e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495107, 9636, 4517, 114, 339, "Input",ExpressionUUID->"d7883de6-38b1-461d-a5ed-a49a691673c1"],
Cell[499627, 9752, 120823, 2159, 1028, "Output",ExpressionUUID->"7312b262-d80c-4806-9f15-8a66e761c107"]
}, Open  ]]
}
]
*)

